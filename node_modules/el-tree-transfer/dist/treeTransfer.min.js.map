{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap c51b6642f4e8b4b98cfc","webpack:///lib/transfer-extend.vue","webpack:///./index.js","webpack:///./lib/transfer-extend.vue","webpack:///./lib/transfer-extend.vue?d509","webpack:///./lib/transfer-extend.vue?a914","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./lib/transfer-extend.vue?5b08"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA,MADA,kBACA;AACA;AACA,kCADA,EACA;AACA,2BAFA,EAEA;AACA,gCAHA,EAGA;AACA,yBAJA,EAIA;AACA,4BALA,EAKA;AACA,0BANA,EAMA;AACA;AACA;AACA,mBATA,EASA;AACA,iBAVA,EAUA;AACA,yBAXA,EAWA;AACA,uBAZA,EAYA;AACA,yBAbA,EAaA;AACA,uBAdA,EAcA;AACA,oBAfA,EAeA;AACA,kBAhBA,CAgBA;AAhBA;AAkBA,GApBA;;AAqBA;AACA;AACA;AACA,kBADA;AAEA;AAFA,KAFA;AAMA;AACA;AACA,kBADA;AAEA;AAFA,KAPA;AAWA;AACA;AACA,iBADA;AAEA;AAAA;AAAA;AAFA,KAZA;AAgBA;AACA,sBAjBA;AAkBA;AACA;AACA,iBADA;AAEA;AAAA;AAAA;AAFA,KAnBA;AAuBA;AACA;AACA,iBADA;AAEA;AAAA;AAAA;AAFA,KAxBA;AA4BA;AACA;AACA,kBADA;AAEA;AACA;AACA;AAJA,KA7BA;AAmCA;AACA;AACA,kBADA;AAEA;AAFA,KApCA;AAwCA;AACA;AACA,kBADA;AAEA;AAFA,KAzCA;AA6CA;AACA;AACA,mBADA;AAEA;AAFA,KA9CA;AAkDA;AACA;AACA,mBADA;AAEA;AAFA,KAnDA;AAuDA;AACA;AACA,mBADA;AAEA;AAFA,KAxDA;AA4DA;AACA;AA7DA,GArBA;AAoFA;AACA;AACA,aAFA,uBAEA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA,sEACA,aADA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AAOA;AACA;AACA;AACA,gDACA,qCADA,EA/BA,CAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAJA;AAKA;AACA;AACA;AACA;AACA;AACA,SAFA,MAEA;AACA;AACA;AACA,OAPA;;AASA;AACA,iDACA,iCADA,EApDA,CAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA,OALA;;AAOA;AACA,sDACA;AAAA;AAAA,OADA;AAGA;AACA;AACA;AACA,OAFA;;AAIA;AACA;AAAA;;AACA;AACA,sBACA,uCACA,IADA,WACA,UADA,UAEA,IAFA,aAEA,UAFA,OADA;AAIA;AACA;;AAEA;;;;;;;AAOA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA,OAFA;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAvIA;;AAwIA;AACA,kBAzIA,4BAyIA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA,oEACA,aADA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AAOA;AACA;AACA;AACA,gDACA,qCADA,EA/BA,CAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAJA;AAKA;AACA;AACA;AACA;AACA;AACA,SAFA,MAEA;AACA;AACA;AACA,OAPA;;AASA;AACA,iDACA,iCADA,EApDA,CAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA,OALA;;AAOA;AACA,sDACA;AAAA;AAAA,OADA;AAGA;AACA;AACA;AACA,OAFA;;AAIA;AACA;AAAA;;AACA;AACA,sBACA,uCACA,IADA,WACA,UADA,UAEA,IAFA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,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA,YAAY,uBAAuB;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wBAAwB;AAC3D,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;AC1BA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL;AACA,iBAAiB,+BAA+B;AAChD;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA,sBAAsB,2CAA2C;AACjE,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA,0BAA0B,0CAA0C;AACpE;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,mBAAmB;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD;AACA;AACA;AACA;AACA,gCAAgC,+CAA+C;AAC/E,6BAA6B;AAC7B,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qCAAqC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,6BAA6B;AAC7B,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,2BAA2B;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,2BAA2B;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gCAAgC;AACjD;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA,sBAAsB,yCAAyC;AAC/D,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA,0BAA0B,0CAA0C;AACpE;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,mBAAmB,2BAA2B;AAC9C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,C","file":"treeTransfer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c51b6642f4e8b4b98cfc","<template>\r\n  <div class=\"transfer\" :style=\"{width,height}\">\r\n    <!-- 左侧穿梭框 原料框 -->\r\n    <div class=\"transfer-left\">\r\n      <h3 class=\"transfer-title\">\r\n        <el-checkbox :indeterminate=\"from_is_indeterminate\" v-model=\"from_check_all\" @change='fromAllBoxChange'></el-checkbox>\r\n        <span class=\"u-right\">{{fromTitle}}</span>\r\n      </h3>\r\n      <!-- 内容区 -->\r\n      <div class=\"transfer-main\">\r\n        <!-- <slot name=\"from\"></slot> -->\r\n        <el-input v-if=\"filter\" placeholder=\"输入关键字进行过滤\" v-model=\"filterFrom\" size=\"small\" class=\"filter-tree\">\r\n        </el-input>\r\n        <el-tree ref='from-tree' :data=\"self_from_data\" show-checkbox :node-key=\"node_key\" @check='fromTreeChecked' :default-expanded-keys=\"from_expanded_keys\" :props=\"defaultProps\" :filter-node-method=\"filterNodeFrom\" :default-expand-all=\"openAll\" :render-content='renderContent'>\r\n        </el-tree>\r\n      </div>\r\n    </div>\r\n    <!-- 穿梭区 按钮框 -->\r\n    <div class=\"transfer-center\">\r\n      <template v-if='button_text'>\r\n        <p class=\"transfer-center-item\">\r\n          <el-button type=\"primary\" @click=\"addTo\" :disabled=\"from_disabled\">\r\n            {{fromButton || '添加'}}\r\n            <i class=\"el-icon-arrow-right\"></i>\r\n          </el-button>\r\n        </p>\r\n        <p class=\"transfer-center-item\">\r\n          <el-button type=\"primary\" @click='removeTo' :disabled=\"to_disabled\" icon=\"el-icon-arrow-left\">{{toButton || '移除'}}</el-button>\r\n        </p>\r\n      </template>\r\n      <template v-else>\r\n        <p class=\"transfer-center-item\">\r\n          <el-button type=\"primary\" @click=\"addToAims\" icon=\"el-icon-arrow-right\" circle :disabled=\"from_disabled\"></el-button>\r\n        </p>\r\n        <p class=\"transfer-center-item\">\r\n          <el-button type=\"primary\" @click='removeToSource' :disabled=\"to_disabled\" icon=\"el-icon-arrow-left\" circle></el-button>\r\n        </p>\r\n      </template>\r\n    </div>\r\n    <!-- 右侧穿梭框 目标框 -->\r\n    <div class=\"transfer-right\">\r\n      <h3 class=\"transfer-title\">\r\n        <el-checkbox :indeterminate=\"to_is_indeterminate\" v-model=\"to_check_all\" @change=\"toAllBoxChange\"></el-checkbox>\r\n        <span class=\"u-right\">{{toTitle}}</span>\r\n      </h3>\r\n      <!-- 内容区 -->\r\n      <div class=\"transfer-main\">\r\n        <!-- <slot name='to'></slot> -->\r\n        <el-input v-if=\"filter\" placeholder=\"输入关键字进行过滤\" v-model=\"filterTo\" size=\"small\" class=\"filter-tree\">\r\n        </el-input>\r\n        <el-tree slot='to' ref='to-tree' :data=\"self_to_data\" show-checkbox :node-key=\"node_key\" @check='toTreeChecked' :default-expanded-keys=\"to_expanded_keys\" :props=\"defaultProps\" :filter-node-method=\"filterNodeTo\" :default-expand-all=\"openAll\" :render-content='renderContent'>\r\n        </el-tree>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { cloneDeepWith } from \"lodash\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      from_is_indeterminate: false, // 源数据是否半选\r\n      from_check_all: false, // 源数据是否全选\r\n      to_is_indeterminate: false, // 目标数据是否半选\r\n      to_check_all: false, // 目标数据是否全选\r\n      from_expanded_keys: [], // 源数据展开节点\r\n      to_expanded_keys: [], // 目标数据展开节点\r\n      // self_from_data: [...this.from_data], // 左侧数据\r\n      // self_to_data: [...this.to_data], // 右侧数据\r\n      self_from: [], // 子组件左侧数据\r\n      self_to: [], // 子组件右侧数据\r\n      from_disabled: true, // 添加按钮是否禁用\r\n      to_disabled: true, // 移除按钮是否禁用\r\n      from_check_keys: [], // 源数据选中key数组 以此属性关联穿梭按钮，总全选、半选状态\r\n      to_check_keys: [], // 目标数据选中key数组 以此属性关联穿梭按钮，总全选、半选状态\r\n      filterFrom: \"\", // 源数据筛选\r\n      filterTo: \"\" // 目标数据筛选\r\n    };\r\n  },\r\n  props: {\r\n    // 宽度\r\n    width: {\r\n      type: String,\r\n      default: \"100%\"\r\n    },\r\n    // 高度\r\n    height: {\r\n      type: String,\r\n      default: \"320px\"\r\n    },\r\n    // 标题\r\n    title: {\r\n      type: Array,\r\n      default: () => [\"源列表\", \"目标列表\"]\r\n    },\r\n    // 穿梭按钮名字\r\n    button_text: Array,\r\n    // 源数据\r\n    from_data: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    // 选中数据\r\n    to_data: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    // el-tree 配置项\r\n    defaultProps: {\r\n      type: Object,\r\n      default: () => {\r\n        return { label: \"label\", children: \"children\" };\r\n      }\r\n    },\r\n    // el-tree node-key 必须唯一\r\n    node_key: {\r\n      type: String,\r\n      default: \"id\"\r\n    },\r\n    // 自定义 pid参数名\r\n    pid: {\r\n      type: String,\r\n      default: \"pid\"\r\n    },\r\n    // 是否只返回叶子节点\r\n    leafOnly: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // 是否启用筛选\r\n    filter: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // 是否展开所有节点\r\n    openAll: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // 自定义树节点\r\n    renderContent:Function\r\n  },\r\n  methods: {\r\n    // 添加按钮\r\n    addToAims() {\r\n      // 获取选中通过穿梭框的keys - 仅用于传送纯净的id数组到父组件同后台通信\r\n      let keys = this.$refs[\"from-tree\"].getCheckedKeys(this.leafOnly);\r\n      // 获取半选通过穿梭框的keys - 仅用于传送纯净的id数组到父组件同后台通信\r\n      let harfKeys = this.$refs[\"from-tree\"].getHalfCheckedKeys();\r\n      // 选中节点数据\r\n      let arrayCheckedNodes = this.$refs[\"from-tree\"].getCheckedNodes(\r\n        this.leafOnly\r\n      );\r\n      // 获取选中通过穿梭框的nodes - 仅用于传送选中节点数组到父组件同后台通信需求\r\n      let nodes = JSON.parse(JSON.stringify(arrayCheckedNodes));\r\n      // 半选中节点数据\r\n      let arrayHalfCheckedNodes = this.$refs[\"from-tree\"].getHalfCheckedNodes();\r\n      // 获取半选通过穿梭框的nodes - 仅用于传送选中节点数组到父组件同后台通信需求\r\n      let halfNodes = JSON.parse(JSON.stringify(arrayHalfCheckedNodes));\r\n\r\n      // 自定义参数读取设置\r\n      let children__ = this.defaultProps.children || \"children\";\r\n      let pid__ = this.pid || \"pid\";\r\n      let id__ = this[\"node_key\"] || \"id\";\r\n\r\n      /*\r\n       * 先整合目标树没有父节点的叶子节点选中，需要整理出来此叶子节点的父节点直到根节点路径 - 此时所有骨架节点已有\r\n       * 再将所有末端叶子节点根据pid直接推入目标树即可\r\n       * 声明新盒子将所有半选节点的子节点清除 - 只保留骨架 因为排序是先父后子 因此不存在子元素处理好插入时父元素还没处理的情况\r\n       * 下面一二步是为了搭建出来目标树没有根节点躯干节点时的叶子选中，给此叶子搭建出根节点和躯干节点\r\n       */\r\n\r\n      // let不存在状态提升 因此在函数调用之前赋值 并递归为以为数组！\r\n      let self_to_data = JSON.stringify(this.self_to_data);\r\n      // 第一步\r\n      let skeletonHalfCheckedNodes = JSON.parse(\r\n        JSON.stringify(arrayHalfCheckedNodes)\r\n      ); // 深拷贝数据 - 半选节点\r\n      // 筛选目标树不存在的骨架节点 - 半选内的节点\r\n      let newSkeletonHalfCheckedNodes = [];\r\n      skeletonHalfCheckedNodes.forEach(item => {\r\n        if (!inquireIsExist(item)) {\r\n          newSkeletonHalfCheckedNodes.push(item);\r\n        }\r\n      });\r\n      // 筛选到目标树不存在的骨架后在处理每个骨架节点-非末端叶子节点 - 半选节点\r\n      newSkeletonHalfCheckedNodes.forEach(item => {\r\n        item[children__] = [];\r\n        if (item[pid__] == 0) {\r\n          this.$refs[\"to-tree\"].append(item);\r\n        } else {\r\n          this.$refs[\"to-tree\"].append(item, item[pid__]);\r\n        }\r\n      });\r\n\r\n      // 第二步\r\n      let cloneSkeletonCheckedNodes = JSON.parse(\r\n        JSON.stringify(arrayCheckedNodes)\r\n      ); // 深拷贝数据 -选中节点\r\n      // 筛选目标树不存在的骨架节点 - 全选内的节点\r\n      let newSkeletonCheckedNodes = [];\r\n      cloneSkeletonCheckedNodes.forEach(item => {\r\n        if (!inquireIsExist(item)) {\r\n          newSkeletonCheckedNodes.push(item);\r\n        }\r\n      });\r\n      // 筛选到目标树不存在的骨架后在处理每个骨架节点-非末端叶子节点 - 全选节点\r\n      newSkeletonCheckedNodes.forEach(item => {\r\n        if (item[children__] && item[children__].length > 0) {\r\n          item[children__] = [];\r\n          this.$refs[\"to-tree\"].append(item, item[pid__]);\r\n        }\r\n      });\r\n\r\n      // 第三步 处理末端叶子元素 - 声明新盒子筛选出所有末端叶子节点\r\n      let leafCheckedNodes = arrayCheckedNodes.filter(\r\n        item => !item[children__] || item[children__].length == 0\r\n      );\r\n      // 末端叶子直接插入目标树\r\n      leafCheckedNodes.forEach(item => {\r\n        this.$refs[\"to-tree\"].append(item, item[pid__]);\r\n      });\r\n\r\n      // 递归查询data内是否存在item函数\r\n      function inquireIsExist(item, strData = self_to_data) {\r\n        // 将树形数据格式化成一维字符串 然后通过匹配来判断是否已存在\r\n        let strItem =\r\n          typeof item[id__] == \"number\"\r\n            ? `\"${id__}\":${item[id__]}`\r\n            : `\"${id__}\":\"${item[id__]}\"`;\r\n        let reg = RegExp(strItem);\r\n        let existed = reg.test(strData);\r\n\r\n        /*  for (let i of data) {\r\n          if (item.id == i.id) {\r\n            existed = true;\r\n          } else if (i.children.length > 0) {\r\n            inquireIsExist(item, i.children);\r\n          }\r\n        } */\r\n        return existed;\r\n      }\r\n\r\n      /*  // 选中项 从源数据移除\r\n      arrayCheckedNodes.forEach(item => {\r\n        recursive(item, this.self_from_data);\r\n      });\r\n\r\n      // 源树递归查询\r\n      function recursive(obj, data) {\r\n        for (let i of data) {\r\n          if (i.id == obj.id) {\r\n            console.log(\"f\", data);\r\n            let arr = data.filter(b => b.id != obj.id);\r\n            data = arr;\r\n            console.log(\"t\", data);\r\n\r\n            continue;\r\n          } else {\r\n            recursive(obj, i.children);\r\n          }\r\n        }\r\n      } */\r\n\r\n      // 左侧删掉选中数据\r\n      arrayCheckedNodes.forEach(item => {\r\n        this.$refs[\"from-tree\"].remove(item);\r\n      });\r\n\r\n      // 处理完毕按钮恢复禁用状态\r\n      this.from_check_keys = [];\r\n\r\n      // 目标数据节点展开\r\n      this.to_expanded_keys = keys;\r\n\r\n      // 传递信息给父组件\r\n      this.$emit(\"addBtn\",this.self_from_data,this.self_to_data,{ keys, nodes, harfKeys, halfNodes});\r\n    },\r\n    // 移除按钮\r\n    removeToSource() {\r\n      // 获取选中通过穿梭框的keys - 仅用于传送纯净的id数组到父组件同后台通信\r\n      let keys = this.$refs[\"to-tree\"].getCheckedKeys(this.leafOnly);\r\n      // 获取半选通过穿梭框的keys - 仅用于传送纯净的id数组到父组件同后台通信\r\n      let harfKeys = this.$refs[\"to-tree\"].getHalfCheckedKeys();\r\n      // 获取选中通过穿梭框的nodes 选中节点数据\r\n      let arrayCheckedNodes = this.$refs[\"to-tree\"].getCheckedNodes(\r\n        this.leafOnly\r\n      );\r\n      // 获取选中通过穿梭框的nodes - 仅用于传送选中节点数组到父组件同后台通信需求\r\n      let nodes = JSON.parse(JSON.stringify(arrayCheckedNodes));\r\n      // 半选中节点数据\r\n      let arrayHalfCheckedNodes = this.$refs[\"to-tree\"].getHalfCheckedNodes();\r\n      // 获取半选通过穿梭框的nodes - 仅用于传送选中节点数组到父组件同后台通信需求\r\n      let halfNodes = JSON.parse(JSON.stringify(arrayHalfCheckedNodes));\r\n\r\n      // 自定义参数读取设置\r\n      let children__ = this.defaultProps.children || \"children\";\r\n      let pid__ = this.pid || \"pid\";\r\n      let id__ = this[\"node_key\"] || \"id\";\r\n\r\n      /*\r\n       * 先整合目标树没有父节点的叶子节点选中，需要整理出来此叶子节点的父节点直到根节点路径 - 此时所有骨架节点已有\r\n       * 再将所有末端叶子节点根据pid直接推入目标树即可\r\n       * 声明新盒子将所有半选节点的子节点清除 - 只保留骨架 因为排序是先父后子 因此不存在子元素处理好插入时父元素还没处理的情况\r\n       * 下面一二步是为了搭建出来目标树没有根节点躯干节点时的叶子选中，给此叶子搭建出根节点和躯干节点\r\n       */\r\n\r\n      // let不存在状态提升 因此在函数调用之前赋值 并递归为以为数组！\r\n      let self_from_data = JSON.stringify(this.self_from_data);\r\n      // 第一步\r\n      let skeletonHalfCheckedNodes = JSON.parse(\r\n        JSON.stringify(arrayHalfCheckedNodes)\r\n      ); // 深拷贝数据 - 半选节点\r\n      // 筛选目标树不存在的骨架节点 - 半选内的节点\r\n      let newSkeletonHalfCheckedNodes = [];\r\n      skeletonHalfCheckedNodes.forEach(item => {\r\n        if (!inquireIsExist(item)) {\r\n          newSkeletonHalfCheckedNodes.push(item);\r\n        }\r\n      });\r\n      // 筛选到目标树不存在的骨架后在处理每个骨架节点-非末端叶子节点 - 半选节点\r\n      newSkeletonHalfCheckedNodes.forEach(item => {\r\n        item[children__] = [];\r\n        if (item[pid__] == 0) {\r\n          this.$refs[\"from-tree\"].append(item);\r\n        } else {\r\n          this.$refs[\"from-tree\"].append(item, item[pid__]);\r\n        }\r\n      });\r\n\r\n      // 第二步\r\n      let cloneSkeletonCheckedNodes = JSON.parse(\r\n        JSON.stringify(arrayCheckedNodes)\r\n      ); // 深拷贝数据 -选中节点\r\n      // 筛选目标树不存在的骨架节点 - 全选内的节点\r\n      let newSkeletonCheckedNodes = [];\r\n      cloneSkeletonCheckedNodes.forEach(item => {\r\n        if (!inquireIsExist(item)) {\r\n          newSkeletonCheckedNodes.push(item);\r\n        }\r\n      });\r\n      // 筛选到目标树不存在的骨架后在处理每个骨架节点-非末端叶子节点 - 全选节点\r\n      newSkeletonCheckedNodes.forEach(item => {\r\n        if (item[children__] && item[children__].length > 0) {\r\n          item[children__] = [];\r\n          this.$refs[\"from-tree\"].append(item, item[pid__]);\r\n        }\r\n      });\r\n\r\n      // 第三步 处理末端叶子元素 - 声明新盒子筛选出所有末端叶子节点\r\n      let leafCheckedNodes = arrayCheckedNodes.filter(\r\n        item => !item[children__] || item[children__].length == 0\r\n      );\r\n      // 末端叶子直接插入目标树\r\n      leafCheckedNodes.forEach(item => {\r\n        this.$refs[\"from-tree\"].append(item, item[pid__]);\r\n      });\r\n\r\n      // 递归查询data内是否存在item函数\r\n      function inquireIsExist(item, strData = self_from_data) {\r\n        // 将树形数据格式化成一维字符串 然后通过匹配来判断是否已存在\r\n        let strItem =\r\n          typeof item[id__] == \"number\"\r\n            ? `\"${id__}\":${item[id__]}`\r\n            : `\"${id__}\":\"${item[id__]}\"`;\r\n        let reg = RegExp(strItem);\r\n        let existed = reg.test(strData);\r\n        /*  for (let i of data) {\r\n          if (item.id == i.id) {\r\n            existed = true;\r\n          } else if (i.children.length > 0) {\r\n            inquireIsExist(item, i.children);\r\n          }\r\n        } */\r\n        return existed;\r\n      }\r\n\r\n      /*  // 选中项 从源数据移除\r\n      arrayCheckedNodes.forEach(item => {\r\n        recursive(item, this.self_from_data);\r\n      });\r\n\r\n      // 源树递归查询\r\n      function recursive(obj, data) {\r\n        for (let i of data) {\r\n          if (i.id == obj.id) {\r\n            console.log(\"f\", data);\r\n            let arr = data.filter(b => b.id != obj.id);\r\n            data = arr;\r\n            console.log(\"t\", data);\r\n\r\n            continue;\r\n          } else {\r\n            recursive(obj, i.children);\r\n          }\r\n        }\r\n      } */\r\n\r\n      // 右侧删掉选中数据\r\n      arrayCheckedNodes.forEach(item => {\r\n        this.$refs[\"to-tree\"].remove(item);\r\n      });\r\n\r\n      // 处理完毕按钮恢复禁用状态\r\n      this.to_check_keys = [];\r\n\r\n      // 目标数据节点展开\r\n      this.from_expanded_keys = keys;\r\n\r\n      // 传递信息给父组件\r\n      this.$emit(\"removeBtn\",this.self_from_data,this.self_to_data,{ keys, nodes, harfKeys, halfNodes});\r\n    },\r\n    // 源树选中事件 - 是否禁用穿梭按钮\r\n    fromTreeChecked(nodeObj, treeObj) {\r\n      this.from_check_keys = treeObj.checkedNodes;\r\n    },\r\n    // 目标树选中事件 - 是否禁用穿梭按钮\r\n    toTreeChecked(nodeObj, treeObj) {\r\n      this.to_check_keys = treeObj.checkedNodes;\r\n    },\r\n    // 源数据 总全选checkbox\r\n    fromAllBoxChange(val) {\r\n      if (this.self_from_data.length == 0) {\r\n        return;\r\n      }\r\n      if (val) {\r\n        // let array = [...this.from_data];\r\n        this.from_check_keys = this.self_from_data;\r\n        this.$refs[\"from-tree\"].setCheckedNodes(this.self_from_data);\r\n      } else {\r\n        this.$refs[\"from-tree\"].setCheckedNodes([]);\r\n        this.from_check_keys = [];\r\n      }\r\n    },\r\n    // 目标数据 总全选checkbox\r\n    toAllBoxChange(val) {\r\n      if (this.self_to_data.length == 0) {\r\n        return;\r\n      }\r\n      if (val) {\r\n        this.to_check_keys = this.self_to_data;\r\n        this.$refs[\"to-tree\"].setCheckedNodes(this.self_to_data);\r\n      } else {\r\n        this.$refs[\"to-tree\"].setCheckedNodes([]);\r\n        this.to_check_keys = [];\r\n      }\r\n    },\r\n    // 源数据 筛选\r\n    filterNodeFrom(value, data) {\r\n      if (!value) return true;\r\n      return data.label.indexOf(value) !== -1;\r\n    },\r\n    // 目标数据筛选\r\n    filterNodeTo(value, data) {\r\n      if (!value) return true;\r\n      return data.label.indexOf(value) !== -1;\r\n    }\r\n  },\r\n  computed: {\r\n    // 左侧数据\r\n    self_from_data() {\r\n      let from_array = [...this.from_data, ...this.self_from];\r\n      from_array.forEach(item => {\r\n        item[this.pid] = 0;\r\n      });\r\n      return from_array;\r\n    },\r\n    // 右侧数据\r\n    self_to_data() {\r\n      let to_array = [...this.to_data, ...this.self_to];\r\n      to_array.forEach(item => {\r\n        item[this.pid] = 0;\r\n      });\r\n      return to_array;\r\n    },\r\n    // 左侧菜单名\r\n    fromTitle() {\r\n      let [text] = this.title;\r\n      return text;\r\n    },\r\n    // 右侧菜单名\r\n    toTitle() {\r\n      let [, text] = this.title;\r\n      return text;\r\n    },\r\n    // 上部按钮名\r\n    fromButton() {\r\n      if (this.button_text == undefined) {\r\n        return;\r\n      }\r\n\r\n      let [text] = this.button_text;\r\n      return text;\r\n    },\r\n    // 下部按钮名\r\n    toButton() {\r\n      if (this.button_text == undefined) {\r\n        return;\r\n      }\r\n      let [, text] = this.button_text;\r\n      return text;\r\n    }\r\n  },\r\n  watch: {\r\n    // 左侧 状态监测\r\n    from_check_keys(val) {\r\n      if (val.length > 0) {\r\n        // 穿梭按钮是否禁用\r\n        this.from_disabled = false;\r\n        // 总半选是否开启\r\n        this.from_is_indeterminate = true;\r\n\r\n        // 总全选是否开启 - 根据选中节点中为根节点的数量是否和源数据长度相等\r\n        let allCheck = val.filter(item => item[this.pid] == 0);\r\n        if (allCheck.length == this.self_from_data.length) {\r\n          // 关闭半选 开启全选\r\n          this.from_is_indeterminate = false;\r\n          this.from_check_all = true;\r\n        } else {\r\n          this.from_is_indeterminate = true;\r\n          this.from_check_all = false;\r\n        }\r\n      } else {\r\n        this.from_disabled = true;\r\n        this.from_is_indeterminate = false;\r\n        this.from_check_all = false;\r\n      }\r\n    },\r\n    // 右侧 状态监测\r\n    to_check_keys(val) {\r\n      if (val.length > 0) {\r\n        // 穿梭按钮是否禁用\r\n        this.to_disabled = false;\r\n        // 总半选是否开启\r\n        this.to_is_indeterminate = true;\r\n\r\n        // 总全选是否开启 - 根据选中节点中为根节点的数量是否和源数据长度相等\r\n        let allCheck = val.filter(item => item[this.pid] == 0);\r\n        if (allCheck.length == this.self_to_data.length) {\r\n          // 关闭半选 开启全选\r\n          this.to_is_indeterminate = false;\r\n          this.to_check_all = true;\r\n        } else {\r\n          this.to_is_indeterminate = true;\r\n          this.to_check_all = false;\r\n        }\r\n      } else {\r\n        this.to_disabled = true;\r\n        this.to_is_indeterminate = false;\r\n        this.to_check_all = false;\r\n      }\r\n    },\r\n    // 左侧 数据筛选\r\n    filterFrom(val) {\r\n      this.$refs[\"from-tree\"].filter(val);\r\n    },\r\n    // 右侧 数据筛选\r\n    filterTo(val) {\r\n      this.$refs[\"to-tree\"].filter(val);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import \"./clear.css\";\r\n.el-tree {\r\n  min-width: 100%;\r\n  display: inline-block !important;\r\n}\r\n\r\n.transfer {\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.transfer-left {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n\r\n.transfer-right {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n}\r\n\r\n.transfer-main {\r\n  padding: 10px;\r\n  height: calc(100% - 41px);\r\n  box-sizing: border-box;\r\n  overflow: auto;\r\n}\r\n\r\n.transfer-left,\r\n.transfer-right {\r\n  border: 1px solid #ebeef5;\r\n  width: 40%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  border-radius: 5px;\r\n  vertical-align: middle;\r\n}\r\n\r\n.transfer-center {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 40%;\r\n  width: 20%;\r\n  transform: translateY(-50%);\r\n  text-align: center;\r\n}\r\n\r\n.transfer-center-item {\r\n  padding: 10px;\r\n  overflow: hidden;\r\n}\r\n\r\n.transfer-title {\r\n  border-bottom: 1px solid #ebeef5;\r\n  padding: 0 15px;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  color: #333;\r\n  font-size: 16px;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.transfer-title .el-checkbox {\r\n  margin-right: 10px;\r\n}\r\n\r\n.filter-tree {\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// lib/transfer-extend.vue","import treeTransfer from \"./lib/transfer-extend.vue\";\r\nexport default treeTransfer;\r\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  require(\"!!vue-style-loader!css-loader?sourceMap!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-20f1e172\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./transfer-extend.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./transfer-extend.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./transfer-extend.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-20f1e172\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./transfer-extend.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-20f1e172\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"lib\\\\transfer-extend.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-20f1e172\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-20f1e172\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/transfer-extend.vue\n// module id = 2\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js?sourceMap!../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-20f1e172\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./transfer-extend.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"fd0c093c\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../node_modules/css-loader/index.js?sourceMap!../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-20f1e172\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./transfer-extend.vue\", function() {\n     var newContent = require(\"!!../node_modules/css-loader/index.js?sourceMap!../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-20f1e172\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./transfer-extend.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?sourceMap!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-20f1e172\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./lib/transfer-extend.vue\n// module id = 3\n// module chunks = 0","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\nbody[data-v-20f1e172] {\\r\\n  line-height: 1.666;\\r\\n  color: #666;\\r\\n  font-size: 14px;\\n}\\nbody[data-v-20f1e172], input[data-v-20f1e172] {\\r\\n  font-family: \\\"verdana\\\";\\n}\\nbody[data-v-20f1e172], h1[data-v-20f1e172], h2[data-v-20f1e172], h3[data-v-20f1e172], h4[data-v-20f1e172], h5[data-v-20f1e172], h6[data-v-20f1e172], ul[data-v-20f1e172], ol[data-v-20f1e172], li[data-v-20f1e172], p[data-v-20f1e172], dl[data-v-20f1e172], dt[data-v-20f1e172], dd[data-v-20f1e172], table[data-v-20f1e172], th[data-v-20f1e172], td[data-v-20f1e172] {\\r\\n  margin: 0;\\r\\n  padding: 0;\\n}\\ntable[data-v-20f1e172], th[data-v-20f1e172], td[data-v-20f1e172], img[data-v-20f1e172] {\\r\\n  border: 0;\\n}\\nem[data-v-20f1e172], i[data-v-20f1e172], th[data-v-20f1e172] {\\r\\n  font-style: normal;\\r\\n  text-decoration: none;\\n}\\nh1[data-v-20f1e172], h2[data-v-20f1e172], h3[data-v-20f1e172], h4[data-v-20f1e172], h5[data-v-20f1e172], h6[data-v-20f1e172], th[data-v-20f1e172], strong[data-v-20f1e172] {\\r\\n  font-size: 100%;\\r\\n  font-weight: normal;\\n}\\ninput[data-v-20f1e172], select[data-v-20f1e172], button[data-v-20f1e172], textarea[data-v-20f1e172], table[data-v-20f1e172] {\\r\\n  margin: 0;\\r\\n  font-family: inherit;\\r\\n  font-size: 100%;\\n}\\ninput[data-v-20f1e172], button[data-v-20f1e172] {\\r\\n  outline: none;\\n}\\nul[data-v-20f1e172], ol[data-v-20f1e172] {\\r\\n  list-style: none;\\n}\\ntable[data-v-20f1e172] {\\r\\n  border-collapse: collapse;\\r\\n  border-spacing: 0;\\n}\\nth[data-v-20f1e172], caption[data-v-20f1e172] {\\r\\n  text-align: left;\\n}\\na[data-v-20f1e172] {\\r\\n  color: #666;\\r\\n  text-decoration: none;\\r\\n  outline: none;\\r\\n  -webkit-tap-highlight-color: transparent;\\n}\\nselect[data-v-20f1e172] {\\r\\n  background-color: #fff;\\n}\\n.el-tree[data-v-20f1e172] {\\r\\n  min-width: 100%;\\r\\n  display: inline-block !important;\\n}\\n.transfer[data-v-20f1e172] {\\r\\n  position: relative;\\r\\n  overflow: hidden;\\n}\\n.transfer-left[data-v-20f1e172] {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\n}\\n.transfer-right[data-v-20f1e172] {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  right: 0;\\n}\\n.transfer-main[data-v-20f1e172] {\\r\\n  padding: 10px;\\r\\n  height: calc(100% - 41px);\\r\\n  box-sizing: border-box;\\r\\n  overflow: auto;\\n}\\n.transfer-left[data-v-20f1e172],\\r\\n.transfer-right[data-v-20f1e172] {\\r\\n  border: 1px solid #ebeef5;\\r\\n  width: 40%;\\r\\n  height: 100%;\\r\\n  box-sizing: border-box;\\r\\n  border-radius: 5px;\\r\\n  vertical-align: middle;\\n}\\n.transfer-center[data-v-20f1e172] {\\r\\n  position: absolute;\\r\\n  top: 50%;\\r\\n  left: 40%;\\r\\n  width: 20%;\\r\\n  transform: translateY(-50%);\\r\\n  text-align: center;\\n}\\n.transfer-center-item[data-v-20f1e172] {\\r\\n  padding: 10px;\\r\\n  overflow: hidden;\\n}\\n.transfer-title[data-v-20f1e172] {\\r\\n  border-bottom: 1px solid #ebeef5;\\r\\n  padding: 0 15px;\\r\\n  height: 40px;\\r\\n  line-height: 40px;\\r\\n  color: #333;\\r\\n  font-size: 16px;\\r\\n  background-color: #f5f7fa;\\n}\\n.transfer-title .el-checkbox[data-v-20f1e172] {\\r\\n  margin-right: 10px;\\n}\\n.filter-tree[data-v-20f1e172] {\\r\\n  margin-bottom: 10px;\\n}\\r\\n\", \"\", {\"version\":3,\"sources\":[\"G:/ziliao/npm/tree-transfer/npm/lib/clear.css\",\"G:/ziliao/npm/tree-transfer/npm/lib/lib/transfer-extend.vue\"],\"names\":[],\"mappings\":\";AAAA;EACE,mBAAmB;EACnB,YAAY;EACZ,gBAAgB;CAAE;AAEpB;EACE,uBAAuB;CAAE;AAE3B;EACE,UAAU;EACV,WAAW;CAAE;AAEf;EACE,UAAU;CAAE;AAEd;EACE,mBAAmB;EACnB,sBAAsB;CAAE;AAE1B;EACE,gBAAgB;EAChB,oBAAoB;CAAE;AAExB;EACE,UAAU;EACV,qBAAqB;EACrB,gBAAgB;CAAE;AAEpB;EACE,cAAc;CAAE;AAElB;EACE,iBAAiB;CAAE;AAErB;EACE,0BAA0B;EAC1B,kBAAkB;CAAE;AAEtB;EACE,iBAAiB;CAAE;AAErB;EACE,YAAY;EACZ,sBAAsB;EACtB,cAAc;EACd,yCAAyC;CAAE;AAE7C;EACE,uBAAuB;CAAE;ACugB3B;EACA,gBAAA;EACA,iCAAA;CACA;AAEA;EACA,mBAAA;EACA,iBAAA;CACA;AAEA;EACA,mBAAA;EACA,OAAA;EACA,QAAA;CACA;AAEA;EACA,mBAAA;EACA,OAAA;EACA,SAAA;CACA;AAEA;EACA,cAAA;EACA,0BAAA;EACA,uBAAA;EACA,eAAA;CACA;AAEA;;EAEA,0BAAA;EACA,WAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,uBAAA;CACA;AAEA;EACA,mBAAA;EACA,SAAA;EACA,UAAA;EACA,WAAA;EACA,4BAAA;EACA,mBAAA;CACA;AAEA;EACA,cAAA;EACA,iBAAA;CACA;AAEA;EACA,iCAAA;EACA,gBAAA;EACA,aAAA;EACA,kBAAA;EACA,YAAA;EACA,gBAAA;EACA,0BAAA;CACA;AAEA;EACA,mBAAA;CACA;AAEA;EACA,oBAAA;CACA\",\"file\":\"transfer-extend.vue\",\"sourcesContent\":[\"body {\\r\\n  line-height: 1.666;\\r\\n  color: #666;\\r\\n  font-size: 14px; }\\r\\n\\r\\nbody, input {\\r\\n  font-family: \\\"verdana\\\"; }\\r\\n\\r\\nbody, h1, h2, h3, h4, h5, h6, ul, ol, li, p, dl, dt, dd, table, th, td {\\r\\n  margin: 0;\\r\\n  padding: 0; }\\r\\n\\r\\ntable, th, td, img {\\r\\n  border: 0; }\\r\\n\\r\\nem, i, th {\\r\\n  font-style: normal;\\r\\n  text-decoration: none; }\\r\\n\\r\\nh1, h2, h3, h4, h5, h6, th, strong {\\r\\n  font-size: 100%;\\r\\n  font-weight: normal; }\\r\\n\\r\\ninput, select, button, textarea, table {\\r\\n  margin: 0;\\r\\n  font-family: inherit;\\r\\n  font-size: 100%; }\\r\\n\\r\\ninput, button {\\r\\n  outline: none; }\\r\\n\\r\\nul, ol {\\r\\n  list-style: none; }\\r\\n\\r\\ntable {\\r\\n  border-collapse: collapse;\\r\\n  border-spacing: 0; }\\r\\n\\r\\nth, caption {\\r\\n  text-align: left; }\\r\\n\\r\\na {\\r\\n  color: #666;\\r\\n  text-decoration: none;\\r\\n  outline: none;\\r\\n  -webkit-tap-highlight-color: transparent; }\\r\\n\\r\\nselect {\\r\\n  background-color: #fff; }\\r\\n\\r\\n/*# sourceMappingURL=clear.css.map */\\r\\n\",\"<template>\\r\\n  <div class=\\\"transfer\\\" :style=\\\"{width,height}\\\">\\r\\n    <!-- 左侧穿梭框 原料框 -->\\r\\n    <div class=\\\"transfer-left\\\">\\r\\n      <h3 class=\\\"transfer-title\\\">\\r\\n        <el-checkbox :indeterminate=\\\"from_is_indeterminate\\\" v-model=\\\"from_check_all\\\" @change='fromAllBoxChange'></el-checkbox>\\r\\n        <span class=\\\"u-right\\\">{{fromTitle}}</span>\\r\\n      </h3>\\r\\n      <!-- 内容区 -->\\r\\n      <div class=\\\"transfer-main\\\">\\r\\n        <!-- <slot name=\\\"from\\\"></slot> -->\\r\\n        <el-input v-if=\\\"filter\\\" placeholder=\\\"输入关键字进行过滤\\\" v-model=\\\"filterFrom\\\" size=\\\"small\\\" class=\\\"filter-tree\\\">\\r\\n        </el-input>\\r\\n        <el-tree ref='from-tree' :data=\\\"self_from_data\\\" show-checkbox :node-key=\\\"node_key\\\" @check='fromTreeChecked' :default-expanded-keys=\\\"from_expanded_keys\\\" :props=\\\"defaultProps\\\" :filter-node-method=\\\"filterNodeFrom\\\" :default-expand-all=\\\"openAll\\\" :render-content='renderContent'>\\r\\n        </el-tree>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- 穿梭区 按钮框 -->\\r\\n    <div class=\\\"transfer-center\\\">\\r\\n      <template v-if='button_text'>\\r\\n        <p class=\\\"transfer-center-item\\\">\\r\\n          <el-button type=\\\"primary\\\" @click=\\\"addTo\\\" :disabled=\\\"from_disabled\\\">\\r\\n            {{fromButton || '添加'}}\\r\\n            <i class=\\\"el-icon-arrow-right\\\"></i>\\r\\n          </el-button>\\r\\n        </p>\\r\\n        <p class=\\\"transfer-center-item\\\">\\r\\n          <el-button type=\\\"primary\\\" @click='removeTo' :disabled=\\\"to_disabled\\\" icon=\\\"el-icon-arrow-left\\\">{{toButton || '移除'}}</el-button>\\r\\n        </p>\\r\\n      </template>\\r\\n      <template v-else>\\r\\n        <p class=\\\"transfer-center-item\\\">\\r\\n          <el-button type=\\\"primary\\\" @click=\\\"addToAims\\\" icon=\\\"el-icon-arrow-right\\\" circle :disabled=\\\"from_disabled\\\"></el-button>\\r\\n        </p>\\r\\n        <p class=\\\"transfer-center-item\\\">\\r\\n          <el-button type=\\\"primary\\\" @click='removeToSource' :disabled=\\\"to_disabled\\\" icon=\\\"el-icon-arrow-left\\\" circle></el-button>\\r\\n        </p>\\r\\n      </template>\\r\\n    </div>\\r\\n    <!-- 右侧穿梭框 目标框 -->\\r\\n    <div class=\\\"transfer-right\\\">\\r\\n      <h3 class=\\\"transfer-title\\\">\\r\\n        <el-checkbox :indeterminate=\\\"to_is_indeterminate\\\" v-model=\\\"to_check_all\\\" @change=\\\"toAllBoxChange\\\"></el-checkbox>\\r\\n        <span class=\\\"u-right\\\">{{toTitle}}</span>\\r\\n      </h3>\\r\\n      <!-- 内容区 -->\\r\\n      <div class=\\\"transfer-main\\\">\\r\\n        <!-- <slot name='to'></slot> -->\\r\\n        <el-input v-if=\\\"filter\\\" placeholder=\\\"输入关键字进行过滤\\\" v-model=\\\"filterTo\\\" size=\\\"small\\\" class=\\\"filter-tree\\\">\\r\\n        </el-input>\\r\\n        <el-tree slot='to' ref='to-tree' :data=\\\"self_to_data\\\" show-checkbox :node-key=\\\"node_key\\\" @check='toTreeChecked' :default-expanded-keys=\\\"to_expanded_keys\\\" :props=\\\"defaultProps\\\" :filter-node-method=\\\"filterNodeTo\\\" :default-expand-all=\\\"openAll\\\" :render-content='renderContent'>\\r\\n        </el-tree>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n// import { cloneDeepWith } from \\\"lodash\\\";\\r\\nexport default {\\r\\n  data() {\\r\\n    return {\\r\\n      from_is_indeterminate: false, // 源数据是否半选\\r\\n      from_check_all: false, // 源数据是否全选\\r\\n      to_is_indeterminate: false, // 目标数据是否半选\\r\\n      to_check_all: false, // 目标数据是否全选\\r\\n      from_expanded_keys: [], // 源数据展开节点\\r\\n      to_expanded_keys: [], // 目标数据展开节点\\r\\n      // self_from_data: [...this.from_data], // 左侧数据\\r\\n      // self_to_data: [...this.to_data], // 右侧数据\\r\\n      self_from: [], // 子组件左侧数据\\r\\n      self_to: [], // 子组件右侧数据\\r\\n      from_disabled: true, // 添加按钮是否禁用\\r\\n      to_disabled: true, // 移除按钮是否禁用\\r\\n      from_check_keys: [], // 源数据选中key数组 以此属性关联穿梭按钮，总全选、半选状态\\r\\n      to_check_keys: [], // 目标数据选中key数组 以此属性关联穿梭按钮，总全选、半选状态\\r\\n      filterFrom: \\\"\\\", // 源数据筛选\\r\\n      filterTo: \\\"\\\" // 目标数据筛选\\r\\n    };\\r\\n  },\\r\\n  props: {\\r\\n    // 宽度\\r\\n    width: {\\r\\n      type: String,\\r\\n      default: \\\"100%\\\"\\r\\n    },\\r\\n    // 高度\\r\\n    height: {\\r\\n      type: String,\\r\\n      default: \\\"320px\\\"\\r\\n    },\\r\\n    // 标题\\r\\n    title: {\\r\\n      type: Array,\\r\\n      default: () => [\\\"源列表\\\", \\\"目标列表\\\"]\\r\\n    },\\r\\n    // 穿梭按钮名字\\r\\n    button_text: Array,\\r\\n    // 源数据\\r\\n    from_data: {\\r\\n      type: Array,\\r\\n      default: () => []\\r\\n    },\\r\\n    // 选中数据\\r\\n    to_data: {\\r\\n      type: Array,\\r\\n      default: () => []\\r\\n    },\\r\\n    // el-tree 配置项\\r\\n    defaultProps: {\\r\\n      type: Object,\\r\\n      default: () => {\\r\\n        return { label: \\\"label\\\", children: \\\"children\\\" };\\r\\n      }\\r\\n    },\\r\\n    // el-tree node-key 必须唯一\\r\\n    node_key: {\\r\\n      type: String,\\r\\n      default: \\\"id\\\"\\r\\n    },\\r\\n    // 自定义 pid参数名\\r\\n    pid: {\\r\\n      type: String,\\r\\n      default: \\\"pid\\\"\\r\\n    },\\r\\n    // 是否只返回叶子节点\\r\\n    leafOnly: {\\r\\n      type: Boolean,\\r\\n      default: false\\r\\n    },\\r\\n    // 是否启用筛选\\r\\n    filter: {\\r\\n      type: Boolean,\\r\\n      default: false\\r\\n    },\\r\\n    // 是否展开所有节点\\r\\n    openAll: {\\r\\n      type: Boolean,\\r\\n      default: false\\r\\n    },\\r\\n    // 自定义树节点\\r\\n    renderContent:Function\\r\\n  },\\r\\n  methods: {\\r\\n    // 添加按钮\\r\\n    addToAims() {\\r\\n      // 获取选中通过穿梭框的keys - 仅用于传送纯净的id数组到父组件同后台通信\\r\\n      let keys = this.$refs[\\\"from-tree\\\"].getCheckedKeys(this.leafOnly);\\r\\n      // 获取半选通过穿梭框的keys - 仅用于传送纯净的id数组到父组件同后台通信\\r\\n      let harfKeys = this.$refs[\\\"from-tree\\\"].getHalfCheckedKeys();\\r\\n      // 选中节点数据\\r\\n      let arrayCheckedNodes = this.$refs[\\\"from-tree\\\"].getCheckedNodes(\\r\\n        this.leafOnly\\r\\n      );\\r\\n      // 获取选中通过穿梭框的nodes - 仅用于传送选中节点数组到父组件同后台通信需求\\r\\n      let nodes = JSON.parse(JSON.stringify(arrayCheckedNodes));\\r\\n      // 半选中节点数据\\r\\n      let arrayHalfCheckedNodes = this.$refs[\\\"from-tree\\\"].getHalfCheckedNodes();\\r\\n      // 获取半选通过穿梭框的nodes - 仅用于传送选中节点数组到父组件同后台通信需求\\r\\n      let halfNodes = JSON.parse(JSON.stringify(arrayHalfCheckedNodes));\\r\\n\\r\\n      // 自定义参数读取设置\\r\\n      let children__ = this.defaultProps.children || \\\"children\\\";\\r\\n      let pid__ = this.pid || \\\"pid\\\";\\r\\n      let id__ = this[\\\"node_key\\\"] || \\\"id\\\";\\r\\n\\r\\n      /*\\r\\n       * 先整合目标树没有父节点的叶子节点选中，需要整理出来此叶子节点的父节点直到根节点路径 - 此时所有骨架节点已有\\r\\n       * 再将所有末端叶子节点根据pid直接推入目标树即可\\r\\n       * 声明新盒子将所有半选节点的子节点清除 - 只保留骨架 因为排序是先父后子 因此不存在子元素处理好插入时父元素还没处理的情况\\r\\n       * 下面一二步是为了搭建出来目标树没有根节点躯干节点时的叶子选中，给此叶子搭建出根节点和躯干节点\\r\\n       */\\r\\n\\r\\n      // let不存在状态提升 因此在函数调用之前赋值 并递归为以为数组！\\r\\n      let self_to_data = JSON.stringify(this.self_to_data);\\r\\n      // 第一步\\r\\n      let skeletonHalfCheckedNodes = JSON.parse(\\r\\n        JSON.stringify(arrayHalfCheckedNodes)\\r\\n      ); // 深拷贝数据 - 半选节点\\r\\n      // 筛选目标树不存在的骨架节点 - 半选内的节点\\r\\n      let newSkeletonHalfCheckedNodes = [];\\r\\n      skeletonHalfCheckedNodes.forEach(item => {\\r\\n        if (!inquireIsExist(item)) {\\r\\n          newSkeletonHalfCheckedNodes.push(item);\\r\\n        }\\r\\n      });\\r\\n      // 筛选到目标树不存在的骨架后在处理每个骨架节点-非末端叶子节点 - 半选节点\\r\\n      newSkeletonHalfCheckedNodes.forEach(item => {\\r\\n        item[children__] = [];\\r\\n        if (item[pid__] == 0) {\\r\\n          this.$refs[\\\"to-tree\\\"].append(item);\\r\\n        } else {\\r\\n          this.$refs[\\\"to-tree\\\"].append(item, item[pid__]);\\r\\n        }\\r\\n      });\\r\\n\\r\\n      // 第二步\\r\\n      let cloneSkeletonCheckedNodes = JSON.parse(\\r\\n        JSON.stringify(arrayCheckedNodes)\\r\\n      ); // 深拷贝数据 -选中节点\\r\\n      // 筛选目标树不存在的骨架节点 - 全选内的节点\\r\\n      let newSkeletonCheckedNodes = [];\\r\\n      cloneSkeletonCheckedNodes.forEach(item => {\\r\\n        if (!inquireIsExist(item)) {\\r\\n          newSkeletonCheckedNodes.push(item);\\r\\n        }\\r\\n      });\\r\\n      // 筛选到目标树不存在的骨架后在处理每个骨架节点-非末端叶子节点 - 全选节点\\r\\n      newSkeletonCheckedNodes.forEach(item => {\\r\\n        if (item[children__] && item[children__].length > 0) {\\r\\n          item[children__] = [];\\r\\n          this.$refs[\\\"to-tree\\\"].append(item, item[pid__]);\\r\\n        }\\r\\n      });\\r\\n\\r\\n      // 第三步 处理末端叶子元素 - 声明新盒子筛选出所有末端叶子节点\\r\\n      let leafCheckedNodes = arrayCheckedNodes.filter(\\r\\n        item => !item[children__] || item[children__].length == 0\\r\\n      );\\r\\n      // 末端叶子直接插入目标树\\r\\n      leafCheckedNodes.forEach(item => {\\r\\n        this.$refs[\\\"to-tree\\\"].append(item, item[pid__]);\\r\\n      });\\r\\n\\r\\n      // 递归查询data内是否存在item函数\\r\\n      function inquireIsExist(item, strData = self_to_data) {\\r\\n        // 将树形数据格式化成一维字符串 然后通过匹配来判断是否已存在\\r\\n        let strItem =\\r\\n          typeof item[id__] == \\\"number\\\"\\r\\n            ? `\\\"${id__}\\\":${item[id__]}`\\r\\n            : `\\\"${id__}\\\":\\\"${item[id__]}\\\"`;\\r\\n        let reg = RegExp(strItem);\\r\\n        let existed = reg.test(strData);\\r\\n\\r\\n        /*  for (let i of data) {\\r\\n          if (item.id == i.id) {\\r\\n            existed = true;\\r\\n          } else if (i.children.length > 0) {\\r\\n            inquireIsExist(item, i.children);\\r\\n          }\\r\\n        } */\\r\\n        return existed;\\r\\n      }\\r\\n\\r\\n      /*  // 选中项 从源数据移除\\r\\n      arrayCheckedNodes.forEach(item => {\\r\\n        recursive(item, this.self_from_data);\\r\\n      });\\r\\n\\r\\n      // 源树递归查询\\r\\n      function recursive(obj, data) {\\r\\n        for (let i of data) {\\r\\n          if (i.id == obj.id) {\\r\\n            console.log(\\\"f\\\", data);\\r\\n            let arr = data.filter(b => b.id != obj.id);\\r\\n            data = arr;\\r\\n            console.log(\\\"t\\\", data);\\r\\n\\r\\n            continue;\\r\\n          } else {\\r\\n            recursive(obj, i.children);\\r\\n          }\\r\\n        }\\r\\n      } */\\r\\n\\r\\n      // 左侧删掉选中数据\\r\\n      arrayCheckedNodes.forEach(item => {\\r\\n        this.$refs[\\\"from-tree\\\"].remove(item);\\r\\n      });\\r\\n\\r\\n      // 处理完毕按钮恢复禁用状态\\r\\n      this.from_check_keys = [];\\r\\n\\r\\n      // 目标数据节点展开\\r\\n      this.to_expanded_keys = keys;\\r\\n\\r\\n      // 传递信息给父组件\\r\\n      this.$emit(\\\"addBtn\\\",this.self_from_data,this.self_to_data,{ keys, nodes, harfKeys, halfNodes});\\r\\n    },\\r\\n    // 移除按钮\\r\\n    removeToSource() {\\r\\n      // 获取选中通过穿梭框的keys - 仅用于传送纯净的id数组到父组件同后台通信\\r\\n      let keys = this.$refs[\\\"to-tree\\\"].getCheckedKeys(this.leafOnly);\\r\\n      // 获取半选通过穿梭框的keys - 仅用于传送纯净的id数组到父组件同后台通信\\r\\n      let harfKeys = this.$refs[\\\"to-tree\\\"].getHalfCheckedKeys();\\r\\n      // 获取选中通过穿梭框的nodes 选中节点数据\\r\\n      let arrayCheckedNodes = this.$refs[\\\"to-tree\\\"].getCheckedNodes(\\r\\n        this.leafOnly\\r\\n      );\\r\\n      // 获取选中通过穿梭框的nodes - 仅用于传送选中节点数组到父组件同后台通信需求\\r\\n      let nodes = JSON.parse(JSON.stringify(arrayCheckedNodes));\\r\\n      // 半选中节点数据\\r\\n      let arrayHalfCheckedNodes = this.$refs[\\\"to-tree\\\"].getHalfCheckedNodes();\\r\\n      // 获取半选通过穿梭框的nodes - 仅用于传送选中节点数组到父组件同后台通信需求\\r\\n      let halfNodes = JSON.parse(JSON.stringify(arrayHalfCheckedNodes));\\r\\n\\r\\n      // 自定义参数读取设置\\r\\n      let children__ = this.defaultProps.children || \\\"children\\\";\\r\\n      let pid__ = this.pid || \\\"pid\\\";\\r\\n      let id__ = this[\\\"node_key\\\"] || \\\"id\\\";\\r\\n\\r\\n      /*\\r\\n       * 先整合目标树没有父节点的叶子节点选中，需要整理出来此叶子节点的父节点直到根节点路径 - 此时所有骨架节点已有\\r\\n       * 再将所有末端叶子节点根据pid直接推入目标树即可\\r\\n       * 声明新盒子将所有半选节点的子节点清除 - 只保留骨架 因为排序是先父后子 因此不存在子元素处理好插入时父元素还没处理的情况\\r\\n       * 下面一二步是为了搭建出来目标树没有根节点躯干节点时的叶子选中，给此叶子搭建出根节点和躯干节点\\r\\n       */\\r\\n\\r\\n      // let不存在状态提升 因此在函数调用之前赋值 并递归为以为数组！\\r\\n      let self_from_data = JSON.stringify(this.self_from_data);\\r\\n      // 第一步\\r\\n      let skeletonHalfCheckedNodes = JSON.parse(\\r\\n        JSON.stringify(arrayHalfCheckedNodes)\\r\\n      ); // 深拷贝数据 - 半选节点\\r\\n      // 筛选目标树不存在的骨架节点 - 半选内的节点\\r\\n      let newSkeletonHalfCheckedNodes = [];\\r\\n      skeletonHalfCheckedNodes.forEach(item => {\\r\\n        if (!inquireIsExist(item)) {\\r\\n          newSkeletonHalfCheckedNodes.push(item);\\r\\n        }\\r\\n      });\\r\\n      // 筛选到目标树不存在的骨架后在处理每个骨架节点-非末端叶子节点 - 半选节点\\r\\n      newSkeletonHalfCheckedNodes.forEach(item => {\\r\\n        item[children__] = [];\\r\\n        if (item[pid__] == 0) {\\r\\n          this.$refs[\\\"from-tree\\\"].append(item);\\r\\n        } else {\\r\\n          this.$refs[\\\"from-tree\\\"].append(item, item[pid__]);\\r\\n        }\\r\\n      });\\r\\n\\r\\n      // 第二步\\r\\n      let cloneSkeletonCheckedNodes = JSON.parse(\\r\\n        JSON.stringify(arrayCheckedNodes)\\r\\n      ); // 深拷贝数据 -选中节点\\r\\n      // 筛选目标树不存在的骨架节点 - 全选内的节点\\r\\n      let newSkeletonCheckedNodes = [];\\r\\n      cloneSkeletonCheckedNodes.forEach(item => {\\r\\n        if (!inquireIsExist(item)) {\\r\\n          newSkeletonCheckedNodes.push(item);\\r\\n        }\\r\\n      });\\r\\n      // 筛选到目标树不存在的骨架后在处理每个骨架节点-非末端叶子节点 - 全选节点\\r\\n      newSkeletonCheckedNodes.forEach(item => {\\r\\n        if (item[children__] && item[children__].length > 0) {\\r\\n          item[children__] = [];\\r\\n          this.$refs[\\\"from-tree\\\"].append(item, item[pid__]);\\r\\n        }\\r\\n      });\\r\\n\\r\\n      // 第三步 处理末端叶子元素 - 声明新盒子筛选出所有末端叶子节点\\r\\n      let leafCheckedNodes = arrayCheckedNodes.filter(\\r\\n        item => !item[children__] || item[children__].length == 0\\r\\n      );\\r\\n      // 末端叶子直接插入目标树\\r\\n      leafCheckedNodes.forEach(item => {\\r\\n        this.$refs[\\\"from-tree\\\"].append(item, item[pid__]);\\r\\n      });\\r\\n\\r\\n      // 递归查询data内是否存在item函数\\r\\n      function inquireIsExist(item, strData = self_from_data) {\\r\\n        // 将树形数据格式化成一维字符串 然后通过匹配来判断是否已存在\\r\\n        let strItem =\\r\\n          typeof item[id__] == \\\"number\\\"\\r\\n            ? `\\\"${id__}\\\":${item[id__]}`\\r\\n            : `\\\"${id__}\\\":\\\"${item[id__]}\\\"`;\\r\\n        let reg = RegExp(strItem);\\r\\n        let existed = reg.test(strData);\\r\\n        /*  for (let i of data) {\\r\\n          if (item.id == i.id) {\\r\\n            existed = true;\\r\\n          } else if (i.children.length > 0) {\\r\\n            inquireIsExist(item, i.children);\\r\\n          }\\r\\n        } */\\r\\n        return existed;\\r\\n      }\\r\\n\\r\\n      /*  // 选中项 从源数据移除\\r\\n      arrayCheckedNodes.forEach(item => {\\r\\n        recursive(item, this.self_from_data);\\r\\n      });\\r\\n\\r\\n      // 源树递归查询\\r\\n      function recursive(obj, data) {\\r\\n        for (let i of data) {\\r\\n          if (i.id == obj.id) {\\r\\n            console.log(\\\"f\\\", data);\\r\\n            let arr = data.filter(b => b.id != obj.id);\\r\\n            data = arr;\\r\\n            console.log(\\\"t\\\", data);\\r\\n\\r\\n            continue;\\r\\n          } else {\\r\\n            recursive(obj, i.children);\\r\\n          }\\r\\n        }\\r\\n      } */\\r\\n\\r\\n      // 右侧删掉选中数据\\r\\n      arrayCheckedNodes.forEach(item => {\\r\\n        this.$refs[\\\"to-tree\\\"].remove(item);\\r\\n      });\\r\\n\\r\\n      // 处理完毕按钮恢复禁用状态\\r\\n      this.to_check_keys = [];\\r\\n\\r\\n      // 目标数据节点展开\\r\\n      this.from_expanded_keys = keys;\\r\\n\\r\\n      // 传递信息给父组件\\r\\n      this.$emit(\\\"removeBtn\\\",this.self_from_data,this.self_to_data,{ keys, nodes, harfKeys, halfNodes});\\r\\n    },\\r\\n    // 源树选中事件 - 是否禁用穿梭按钮\\r\\n    fromTreeChecked(nodeObj, treeObj) {\\r\\n      this.from_check_keys = treeObj.checkedNodes;\\r\\n    },\\r\\n    // 目标树选中事件 - 是否禁用穿梭按钮\\r\\n    toTreeChecked(nodeObj, treeObj) {\\r\\n      this.to_check_keys = treeObj.checkedNodes;\\r\\n    },\\r\\n    // 源数据 总全选checkbox\\r\\n    fromAllBoxChange(val) {\\r\\n      if (this.self_from_data.length == 0) {\\r\\n        return;\\r\\n      }\\r\\n      if (val) {\\r\\n        // let array = [...this.from_data];\\r\\n        this.from_check_keys = this.self_from_data;\\r\\n        this.$refs[\\\"from-tree\\\"].setCheckedNodes(this.self_from_data);\\r\\n      } else {\\r\\n        this.$refs[\\\"from-tree\\\"].setCheckedNodes([]);\\r\\n        this.from_check_keys = [];\\r\\n      }\\r\\n    },\\r\\n    // 目标数据 总全选checkbox\\r\\n    toAllBoxChange(val) {\\r\\n      if (this.self_to_data.length == 0) {\\r\\n        return;\\r\\n      }\\r\\n      if (val) {\\r\\n        this.to_check_keys = this.self_to_data;\\r\\n        this.$refs[\\\"to-tree\\\"].setCheckedNodes(this.self_to_data);\\r\\n      } else {\\r\\n        this.$refs[\\\"to-tree\\\"].setCheckedNodes([]);\\r\\n        this.to_check_keys = [];\\r\\n      }\\r\\n    },\\r\\n    // 源数据 筛选\\r\\n    filterNodeFrom(value, data) {\\r\\n      if (!value) return true;\\r\\n      return data.label.indexOf(value) !== -1;\\r\\n    },\\r\\n    // 目标数据筛选\\r\\n    filterNodeTo(value, data) {\\r\\n      if (!value) return true;\\r\\n      return data.label.indexOf(value) !== -1;\\r\\n    }\\r\\n  },\\r\\n  computed: {\\r\\n    // 左侧数据\\r\\n    self_from_data() {\\r\\n      let from_array = [...this.from_data, ...this.self_from];\\r\\n      from_array.forEach(item => {\\r\\n        item[this.pid] = 0;\\r\\n      });\\r\\n      return from_array;\\r\\n    },\\r\\n    // 右侧数据\\r\\n    self_to_data() {\\r\\n      let to_array = [...this.to_data, ...this.self_to];\\r\\n      to_array.forEach(item => {\\r\\n        item[this.pid] = 0;\\r\\n      });\\r\\n      return to_array;\\r\\n    },\\r\\n    // 左侧菜单名\\r\\n    fromTitle() {\\r\\n      let [text] = this.title;\\r\\n      return text;\\r\\n    },\\r\\n    // 右侧菜单名\\r\\n    toTitle() {\\r\\n      let [, text] = this.title;\\r\\n      return text;\\r\\n    },\\r\\n    // 上部按钮名\\r\\n    fromButton() {\\r\\n      if (this.button_text == undefined) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      let [text] = this.button_text;\\r\\n      return text;\\r\\n    },\\r\\n    // 下部按钮名\\r\\n    toButton() {\\r\\n      if (this.button_text == undefined) {\\r\\n        return;\\r\\n      }\\r\\n      let [, text] = this.button_text;\\r\\n      return text;\\r\\n    }\\r\\n  },\\r\\n  watch: {\\r\\n    // 左侧 状态监测\\r\\n    from_check_keys(val) {\\r\\n      if (val.length > 0) {\\r\\n        // 穿梭按钮是否禁用\\r\\n        this.from_disabled = false;\\r\\n        // 总半选是否开启\\r\\n        this.from_is_indeterminate = true;\\r\\n\\r\\n        // 总全选是否开启 - 根据选中节点中为根节点的数量是否和源数据长度相等\\r\\n        let allCheck = val.filter(item => item[this.pid] == 0);\\r\\n        if (allCheck.length == this.self_from_data.length) {\\r\\n          // 关闭半选 开启全选\\r\\n          this.from_is_indeterminate = false;\\r\\n          this.from_check_all = true;\\r\\n        } else {\\r\\n          this.from_is_indeterminate = true;\\r\\n          this.from_check_all = false;\\r\\n        }\\r\\n      } else {\\r\\n        this.from_disabled = true;\\r\\n        this.from_is_indeterminate = false;\\r\\n        this.from_check_all = false;\\r\\n      }\\r\\n    },\\r\\n    // 右侧 状态监测\\r\\n    to_check_keys(val) {\\r\\n      if (val.length > 0) {\\r\\n        // 穿梭按钮是否禁用\\r\\n        this.to_disabled = false;\\r\\n        // 总半选是否开启\\r\\n        this.to_is_indeterminate = true;\\r\\n\\r\\n        // 总全选是否开启 - 根据选中节点中为根节点的数量是否和源数据长度相等\\r\\n        let allCheck = val.filter(item => item[this.pid] == 0);\\r\\n        if (allCheck.length == this.self_to_data.length) {\\r\\n          // 关闭半选 开启全选\\r\\n          this.to_is_indeterminate = false;\\r\\n          this.to_check_all = true;\\r\\n        } else {\\r\\n          this.to_is_indeterminate = true;\\r\\n          this.to_check_all = false;\\r\\n        }\\r\\n      } else {\\r\\n        this.to_disabled = true;\\r\\n        this.to_is_indeterminate = false;\\r\\n        this.to_check_all = false;\\r\\n      }\\r\\n    },\\r\\n    // 左侧 数据筛选\\r\\n    filterFrom(val) {\\r\\n      this.$refs[\\\"from-tree\\\"].filter(val);\\r\\n    },\\r\\n    // 右侧 数据筛选\\r\\n    filterTo(val) {\\r\\n      this.$refs[\\\"to-tree\\\"].filter(val);\\r\\n    }\\r\\n  }\\r\\n};\\r\\n</script>\\r\\n\\r\\n<style scoped>\\r\\n@import \\\"./clear.css\\\";\\r\\n.el-tree {\\r\\n  min-width: 100%;\\r\\n  display: inline-block !important;\\r\\n}\\r\\n\\r\\n.transfer {\\r\\n  position: relative;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.transfer-left {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n}\\r\\n\\r\\n.transfer-right {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.transfer-main {\\r\\n  padding: 10px;\\r\\n  height: calc(100% - 41px);\\r\\n  box-sizing: border-box;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.transfer-left,\\r\\n.transfer-right {\\r\\n  border: 1px solid #ebeef5;\\r\\n  width: 40%;\\r\\n  height: 100%;\\r\\n  box-sizing: border-box;\\r\\n  border-radius: 5px;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\\r\\n.transfer-center {\\r\\n  position: absolute;\\r\\n  top: 50%;\\r\\n  left: 40%;\\r\\n  width: 20%;\\r\\n  transform: translateY(-50%);\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.transfer-center-item {\\r\\n  padding: 10px;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.transfer-title {\\r\\n  border-bottom: 1px solid #ebeef5;\\r\\n  padding: 0 15px;\\r\\n  height: 40px;\\r\\n  line-height: 40px;\\r\\n  color: #333;\\r\\n  font-size: 16px;\\r\\n  background-color: #f5f7fa;\\r\\n}\\r\\n\\r\\n.transfer-title .el-checkbox {\\r\\n  margin-right: 10px;\\r\\n}\\r\\n\\r\\n.filter-tree {\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n</style>\\r\\n\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?sourceMap!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-20f1e172\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./lib/transfer-extend.vue\n// module id = 4\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 5\n// module chunks = 0","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/addStylesClient.js\n// module id = 6\n// module chunks = 0","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/listToStyles.js\n// module id = 7\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = 8\n// module chunks = 0","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"transfer\",\n      style: { width: _vm.width, height: _vm.height }\n    },\n    [\n      _c(\"div\", { staticClass: \"transfer-left\" }, [\n        _c(\n          \"h3\",\n          { staticClass: \"transfer-title\" },\n          [\n            _c(\"el-checkbox\", {\n              attrs: { indeterminate: _vm.from_is_indeterminate },\n              on: { change: _vm.fromAllBoxChange },\n              model: {\n                value: _vm.from_check_all,\n                callback: function($$v) {\n                  _vm.from_check_all = $$v\n                },\n                expression: \"from_check_all\"\n              }\n            }),\n            _vm._v(\" \"),\n            _c(\"span\", { staticClass: \"u-right\" }, [\n              _vm._v(_vm._s(_vm.fromTitle))\n            ])\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"transfer-main\" },\n          [\n            _vm.filter\n              ? _c(\"el-input\", {\n                  staticClass: \"filter-tree\",\n                  attrs: { placeholder: \"输入关键字进行过滤\", size: \"small\" },\n                  model: {\n                    value: _vm.filterFrom,\n                    callback: function($$v) {\n                      _vm.filterFrom = $$v\n                    },\n                    expression: \"filterFrom\"\n                  }\n                })\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\"el-tree\", {\n              ref: \"from-tree\",\n              attrs: {\n                data: _vm.self_from_data,\n                \"show-checkbox\": \"\",\n                \"node-key\": _vm.node_key,\n                \"default-expanded-keys\": _vm.from_expanded_keys,\n                props: _vm.defaultProps,\n                \"filter-node-method\": _vm.filterNodeFrom,\n                \"default-expand-all\": _vm.openAll,\n                \"render-content\": _vm.renderContent\n              },\n              on: { check: _vm.fromTreeChecked }\n            })\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"transfer-center\" },\n        [\n          _vm.button_text\n            ? [\n                _c(\n                  \"p\",\n                  { staticClass: \"transfer-center-item\" },\n                  [\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: { type: \"primary\", disabled: _vm.from_disabled },\n                        on: { click: _vm.addTo }\n                      },\n                      [\n                        _vm._v(\n                          \"\\n          \" +\n                            _vm._s(_vm.fromButton || \"添加\") +\n                            \"\\n          \"\n                        ),\n                        _c(\"i\", { staticClass: \"el-icon-arrow-right\" })\n                      ]\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"p\",\n                  { staticClass: \"transfer-center-item\" },\n                  [\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: {\n                          type: \"primary\",\n                          disabled: _vm.to_disabled,\n                          icon: \"el-icon-arrow-left\"\n                        },\n                        on: { click: _vm.removeTo }\n                      },\n                      [_vm._v(_vm._s(_vm.toButton || \"移除\"))]\n                    )\n                  ],\n                  1\n                )\n              ]\n            : [\n                _c(\n                  \"p\",\n                  { staticClass: \"transfer-center-item\" },\n                  [\n                    _c(\"el-button\", {\n                      attrs: {\n                        type: \"primary\",\n                        icon: \"el-icon-arrow-right\",\n                        circle: \"\",\n                        disabled: _vm.from_disabled\n                      },\n                      on: { click: _vm.addToAims }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"p\",\n                  { staticClass: \"transfer-center-item\" },\n                  [\n                    _c(\"el-button\", {\n                      attrs: {\n                        type: \"primary\",\n                        disabled: _vm.to_disabled,\n                        icon: \"el-icon-arrow-left\",\n                        circle: \"\"\n                      },\n                      on: { click: _vm.removeToSource }\n                    })\n                  ],\n                  1\n                )\n              ]\n        ],\n        2\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"transfer-right\" }, [\n        _c(\n          \"h3\",\n          { staticClass: \"transfer-title\" },\n          [\n            _c(\"el-checkbox\", {\n              attrs: { indeterminate: _vm.to_is_indeterminate },\n              on: { change: _vm.toAllBoxChange },\n              model: {\n                value: _vm.to_check_all,\n                callback: function($$v) {\n                  _vm.to_check_all = $$v\n                },\n                expression: \"to_check_all\"\n              }\n            }),\n            _vm._v(\" \"),\n            _c(\"span\", { staticClass: \"u-right\" }, [\n              _vm._v(_vm._s(_vm.toTitle))\n            ])\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"transfer-main\" },\n          [\n            _vm.filter\n              ? _c(\"el-input\", {\n                  staticClass: \"filter-tree\",\n                  attrs: { placeholder: \"输入关键字进行过滤\", size: \"small\" },\n                  model: {\n                    value: _vm.filterTo,\n                    callback: function($$v) {\n                      _vm.filterTo = $$v\n                    },\n                    expression: \"filterTo\"\n                  }\n                })\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\"el-tree\", {\n              ref: \"to-tree\",\n              attrs: {\n                slot: \"to\",\n                data: _vm.self_to_data,\n                \"show-checkbox\": \"\",\n                \"node-key\": _vm.node_key,\n                \"default-expanded-keys\": _vm.to_expanded_keys,\n                props: _vm.defaultProps,\n                \"filter-node-method\": _vm.filterNodeTo,\n                \"default-expand-all\": _vm.openAll,\n                \"render-content\": _vm.renderContent\n              },\n              on: { check: _vm.toTreeChecked },\n              slot: \"to\"\n            })\n          ],\n          1\n        )\n      ])\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-20f1e172\", esExports)\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-20f1e172\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./lib/transfer-extend.vue\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}