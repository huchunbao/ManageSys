{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\thread-loader\\dist\\cjs.js!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\login\\retrieve.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\login\\retrieve.vue","mtime":1577252313358},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Logo from \"./components/Logo\";\nimport { validUsername, validMobile } from '@/utils/validate';\nimport SIdentify from '@/components/SIdentify';\nimport { checkUsername, checkMobile, checkMobileCode, updatePW } from '@/api/user';\nexport default {\n  name: 'Retrieve',\n  components: {\n    Logo: Logo,\n    SIdentify: SIdentify\n  },\n  data: function data() {\n    var _this = this;\n\n    var validateUsername = function validateUsername(rule, value, callback) {\n      if (!validUsername(value)) {\n        callback(new Error('请输入用户名'));\n      } else {\n        callback();\n      }\n    };\n\n    var validateCode = function validateCode(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入验证码'));\n      } else if (value !== _this.identifyCode) {\n        callback(new Error('验证码不正确!'));\n      } else {\n        callback();\n      }\n    };\n\n    var validateMobile = function validateMobile(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入手机号码'));\n      } else if (!validMobile(value)) {\n        callback(new Error('手机号输入不正确!'));\n      } else {\n        callback();\n      }\n    };\n\n    var validateMobileCode = function validateMobileCode(rule, value, callback) {\n      console.log(value);\n      console.log(_this.mobileCode);\n\n      if (value === '') {\n        callback(new Error('请输入短信验证码'));\n      } else if (value !== _this.mobileCode && _this.mobileCode !== '') {\n        callback(new Error('短信验证码不正确!'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePassword1 = function validatePassword1(rule, value, callback) {\n      if (value.length < 6) {\n        callback(new Error('密码不能少于6位'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePassword2 = function validatePassword2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (value !== _this.retrieveForm.password1) {\n        callback(new Error('两次密码输入不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      retrieveForm: {\n        username: '',\n        code: '',\n        mobile: '',\n        mobilecode: '',\n        password1: '',\n        password2: ''\n      },\n      retrieveRules: {\n        username: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateUsername\n        }],\n        code: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateCode\n        }],\n        mobile: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateMobile\n        }],\n        mobilecode: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateMobileCode\n        }],\n        password1: [{\n          required: true,\n          trigger: 'blur',\n          validator: validatePassword1\n        }],\n        password2: [{\n          required: true,\n          trigger: 'blur',\n          validator: validatePassword2\n        }]\n      },\n      active: 0,\n      userInput: false,\n      codeInput: false,\n      mobileInput: false,\n      mobileCodeInput: false,\n      pass1Input: false,\n      pass2Input: false,\n      contentHeight: 100,\n      identifyCodes: '1234567890',\n      identifyCode: '',\n      mobileText: '获取短信',\n      mobileCode: '',\n      sendStatus: false,\n      leaveTime: 5\n    };\n  },\n  mounted: function mounted() {\n    this.identifyCode = '';\n    this.makeCode(this.identifyCodes, 4);\n  },\n  methods: {\n    focusinput: function focusinput(type) {\n      switch (type) {\n        case 1:\n          this.userInput = true;\n          break;\n\n        case 2:\n          this.codeInput = true;\n          break;\n\n        case 3:\n          this.mobileInput = true;\n          break;\n\n        case 4:\n          this.mobileCodeInput = true;\n          break;\n\n        case 5:\n          this.pass1Input = true;\n          break;\n\n        case 6:\n          this.pass2Input = true;\n          break;\n\n        default:\n          break;\n      }\n    },\n    blurinput: function blurinput(type) {\n      switch (type) {\n        case 1:\n          this.userInput = false;\n          break;\n\n        case 2:\n          this.codeInput = false;\n          break;\n\n        case 3:\n          this.mobileInput = false;\n          break;\n\n        case 4:\n          this.mobileCodeInput = false;\n          break;\n\n        case 5:\n          this.pass1Input = false;\n          break;\n\n        case 6:\n          this.pass2Input = false;\n          break;\n\n        default:\n          break;\n      }\n    },\n    randomNum: function randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    // 切换验证码\n    refreshCode: function refreshCode() {\n      this.identifyCode = '';\n      this.makeCode(this.identifyCodes, 4);\n    },\n    // 生成四位随机验证码\n    makeCode: function makeCode(o, l) {\n      for (var i = 0; i < l; i++) {\n        this.identifyCode += this.identifyCodes[this.randomNum(0, this.identifyCodes.length)];\n      }\n    },\n    getMobileCode: function getMobileCode() {\n      var _this2 = this;\n\n      // 获取短信验证码\n      this.$refs.retrieveForm.validateField('mobile', function (error) {\n        if (!error && !_this2.sendStatus) {\n          return new Promise(function (resolve, reject) {\n            checkMobile({\n              phone: _this2.retrieveForm.mobile,\n              username: _this2.retrieveForm.username,\n              num: ''\n            }).then(function (response) {\n              if (response.msg === 'SUCCESS') {\n                _this2.$message({\n                  message: '短信获取成功',\n                  type: 'success',\n                  duration: 3000\n                });\n\n                _this2.mobileCode = _this2.retrieveForm.mobilecode = response.data.validateNum;\n                var sendtime = 90;\n                _this2.mobileText = sendtime + 's';\n                _this2.sendStatus = true;\n                var timer = setInterval(function () {\n                  if (sendtime <= 0) {\n                    _this2.mobileText = '获取短信';\n                    _this2.sendStatus = false;\n                    clearInterval(timer);\n                  } else {\n                    sendtime--;\n                    _this2.mobileText = sendtime + 's';\n                  }\n                }, 1000);\n              } else {\n                _this2.$message({\n                  message: response.msg,\n                  type: 'warning',\n                  duration: 3000\n                });\n              }\n\n              resolve();\n            }).catch(function (error) {\n              reject(error);\n            });\n          }).then(function (res) {});\n        }\n      });\n    },\n    handleNext: function handleNext() {\n      var _this3 = this;\n\n      if (this.active === 0) {\n        this.$refs.retrieveForm.validateField('username', function (error) {\n          if (!error) {\n            _this3.$refs.retrieveForm.validateField('code', function (codeError) {\n              if (!codeError) {\n                return new Promise(function (resolve, reject) {\n                  checkUsername({\n                    phone: _this3.retrieveForm.username,\n                    username: ''\n                  }).then(function (response) {\n                    if (response.msg === 'SUCCESS') {\n                      _this3.active = 1;\n                    } else {\n                      _this3.$message({\n                        message: response.msg,\n                        type: 'warning',\n                        duration: 3000\n                      });\n                    }\n\n                    resolve();\n                  }).catch(function (error) {\n                    reject(error);\n                  });\n                }).then(function (res) {});\n              }\n            });\n          }\n        });\n      } else if (this.active === 1) {\n        this.$refs.retrieveForm.validateField('mobile', function (error) {\n          if (!error) {\n            _this3.$refs.retrieveForm.validateField('mobilecode', function (codeError) {\n              if (!codeError) {\n                return new Promise(function (resolve, reject) {\n                  checkMobileCode({\n                    phone: _this3.retrieveForm.mobile,\n                    username: '',\n                    num: _this3.retrieveForm.mobilecode\n                  }).then(function (response) {\n                    if (response.msg === 'SUCCESS') {\n                      _this3.active = 2;\n                    } else {\n                      _this3.$message({\n                        message: response.msg,\n                        type: 'warning',\n                        duration: 3000\n                      });\n                    }\n\n                    resolve();\n                  }).catch(function (error) {\n                    reject(error);\n                  });\n                }).then(function (res) {});\n              }\n            });\n          }\n        });\n      } else if (this.active === 2) {\n        this.$refs.retrieveForm.validateField('password1', function (error) {\n          if (!error) {\n            _this3.$refs.retrieveForm.validateField('password2', function (codeError) {\n              if (!codeError) {\n                return new Promise(function (resolve, reject) {\n                  updatePW({\n                    newpassword: _this3.retrieveForm.password1,\n                    username: _this3.retrieveForm.username\n                  }).then(function (response) {\n                    if (response.msg === 'SUCCESS') {\n                      _this3.active = 3;\n                      var leaveTimer = setInterval(function () {\n                        if (_this3.leaveTime <= 0) {\n                          clearInterval(leaveTimer);\n                          _this3.leaveTime = 5;\n\n                          _this3.$router.push({\n                            path: '/login'\n                          });\n                        } else {\n                          _this3.leaveTime--;\n                        }\n                      }, 1000);\n                    } else {\n                      _this3.$message({\n                        message: response.msg,\n                        type: 'warning',\n                        duration: 3000\n                      });\n                    }\n\n                    resolve();\n                  }).catch(function (error) {\n                    reject(error);\n                  });\n                }).then(function (res) {});\n              }\n            });\n          }\n        });\n      }\n    }\n  }\n};",null]}