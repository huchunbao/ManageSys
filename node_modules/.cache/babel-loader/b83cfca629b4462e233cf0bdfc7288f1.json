{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\components\\Cropper\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\components\\Cropper\\index.vue","mtime":1576638136259},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\\\u529E\\u516C\\\\projectwc\\\\\\u524D\\u7AEF\\\\ManageSys\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.typed.uint8-array\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.fill\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _cropperjs = _interopRequireDefault(require(\"cropperjs\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  props: {\n    id: {\n      type: String,\n      default: ''\n    },\n    uid: {\n      type: Number,\n      default: 0\n    },\n    defaultUrl: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      cropper: null,\n      url: this.defaultUrl,\n      imgCropperData: {\n        accept: 'image/jpeg, image/png, image/jpg'\n      }\n    };\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    this.$nextTick(function () {\n      this.init();\n    });\n  },\n  methods: {\n    init: function init() {\n      this.cropper = new _cropperjs.default(this.$refs.cropperImage, {\n        aspectRatio: 1,\n        viewMode: 1,\n        zoomOnWheel: false,\n        // 是否允许通过鼠标滚轮来缩放图片\n        background: true,\n        // 是否在容器上显示网格背景\n        rotatable: true,\n        // 是否允许旋转图片\n        ready: function ready() {}\n      });\n      this.cropper.replace(this.defaultUrl);\n    },\n    getObjectURL: function getObjectURL(file) {\n      var url = null;\n\n      if (window.createObjectURL !== undefined) {\n        // basic\n        url = window.createObjectURL(file);\n      } else if (window.URL !== undefined) {\n        // mozilla(firefox)\n        url = window.URL.createObjectURL(file);\n      } else if (window.webkitURL !== undefined) {\n        // webkit or chrome\n        url = window.webkitURL.createObjectURL(file);\n      }\n\n      return url;\n    },\n    change: function change(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length) return;\n      var type = files[0].type; // 文件的类型，判断是否是图片\n\n      var size = files[0].size; // 文件的大小，判断图片的大小\n\n      if (this.imgCropperData.accept.indexOf(type) === -1) {\n        this.$message({\n          message: '请选择jpg、jpeg、png格式图片文件',\n          type: 'warning'\n        });\n        return false;\n      }\n\n      if (size > 2097152) {\n        this.$message({\n          message: '请选择2M以下图片文件',\n          type: 'warning'\n        });\n        return false;\n      }\n\n      this.url = this.getObjectURL(files[0]); // 每次替换图片要重新得到新的url\n\n      if (this.cropper) {\n        this.cropper.replace(this.url);\n      } // $('#change').val('')\n\n    },\n    getRoundedCanvas: function getRoundedCanvas(sourceCanvas) {\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      var width = sourceCanvas.width;\n      var height = sourceCanvas.height;\n      canvas.width = width;\n      canvas.height = height;\n      context.imageSmoothingEnabled = true;\n      context.drawImage(sourceCanvas, 0, 0, width, height);\n      context.globalCompositeOperation = 'destination-in';\n      context.beginPath();\n      context.arc(width / 2, height / 2, Math.min(width, height) / 2, 0, 2 * Math.PI, true);\n      context.fill();\n      return canvas;\n    },\n    // 裁剪提交\n    submit: function submit() {\n      var _this = this;\n\n      // var croppedCanvas = null\n      var roundedCanvas = null; // Crop\n\n      roundedCanvas = this.cropper.getCroppedCanvas();\n\n      if (roundedCanvas === null) {\n        return;\n      } // Round\n      // roundedCanvas = this.getRoundedCanvas(croppedCanvas) // 绘制成圆型\n      // 上传图片\n\n\n      var formData = new FormData();\n      var file = this.dataURLtoFile(roundedCanvas.toDataURL(), '');\n      this.url = this.getObjectURL(file);\n\n      if (this.cropper) {\n        this.cropper.replace(this.url);\n      }\n\n      formData.append('file', file);\n      this.$store.dispatch('user/updateAvatar', {\n        uid: this.uid,\n        formData: formData\n      }).then(function () {\n        _this.$message({\n          message: '头像修改成功',\n          type: 'success',\n          duration: 2000\n        });\n      }).catch(function (e) {\n        _this.$message({\n          message: '修改失败，请稍后重试',\n          type: 'warning',\n          duration: 2000\n        });\n      });\n    },\n    dataURLtoFile: function dataURLtoFile(dataurl, filename) {\n      // 将base64转换为文件\n      var arr = dataurl.split(',');\n      var mime = arr[0].match(/:(.*?);/)[1];\n      var bstr = atob(arr[1]);\n      var n = bstr.length;\n      var u8arr = new Uint8Array(n);\n\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n\n      return new File([u8arr], filename, {\n        type: mime\n      });\n    }\n  }\n};\nexports.default = _default;",null]}