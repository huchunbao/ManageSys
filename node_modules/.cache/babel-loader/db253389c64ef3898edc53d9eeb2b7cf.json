{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\map\\watchman.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\map\\watchman.vue","mtime":1576811950355},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\\\u529E\\u516C\\\\projectwc\\\\\\u524D\\u7AEF\\\\ManageSys\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _vueAmap = _interopRequireDefault(require(\"vue-amap\"));\n\nvar _axios = require(\"@/api/axios\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar amapManager = new _vueAmap.default.AMapManager();\nvar _default = {\n  name: 'Map',\n  data: function data() {\n    return {\n      disabled: false,\n      tank: '',\n      name: '',\n      bei: '',\n      zoom: 16,\n      center: [116.336496, 39.942178],\n      mapStyle1: 'amap://styles/whitesmoke',\n      amapManager: amapManager,\n      events: {},\n      overlayGroups: [],\n      data: [],\n      // table 列表数据集合\n      rowindex: '',\n      dataid: 0,\n      value: '',\n      options2: [],\n      value2: '',\n      line: ''\n    };\n  },\n  computed: {\n    isopen: function isopen() {\n      return this.name && this.value2 && this.data;\n    }\n  },\n  watch: {\n    data: function data() {},\n    disabled: function disabled() {\n      if (!this.disabled) {\n        this.data = [];\n        this.name = [];\n        this.bei = [];\n        this.value2 = '';\n        this.addmarker();\n      }\n    }\n  },\n  created: function created() {\n    this.addfun();\n    this.shebei();\n  },\n  methods: {\n    shebei: function shebei() {\n      var _this = this;\n\n      (0, _axios.get)('/camara/getEqType?', {\n        system_id: 5\n      }).then(function (res) {\n        console.log(res);\n        _this.options2 = res;\n      });\n    },\n    ti: function ti() {\n      var _this2 = this;\n\n      if (this.name !== '' && this.value2 !== '' && this.data.length > 0) {\n        var markers = [];\n\n        for (var i = 0; i < this.data.length; i++) {\n          markers.push({\n            pointName: this.data[i].name,\n            circuitName: this.name,\n            orderNumber: i + 1,\n            circuitPointLon: this.data[i].indt[0],\n            circuitPointLat: this.data[i].indt[1]\n          });\n        }\n\n        var data = {\n          cpid: this.$store.state.user.companyId,\n          circuitTypeId: 1,\n          circuitType: '巡更',\n          circuitName: this.name,\n          remark: this.bei,\n          // 设备id    equimentId\n          circuitpointlist: markers,\n          equimentId: this.value2\n        };\n        (0, _axios.post)('/mngCircuitInfo/savemngcircuitinfo', data).then(function (res) {\n          (0, _axios.post)('/camara/updpoint', {\n            pid: data.equimentId * 1,\n            binding: 1\n          }).then(function (res) {\n            _this2.shebei();\n\n            _this2.disabled = !_this2.disabled;\n\n            _this2.$message({\n              message: '保存成功',\n              type: 'success'\n            });\n          });\n        });\n      } else {\n        this.$message({\n          message: '请认真检查填写项',\n          type: 'warning'\n        });\n      }\n    },\n    addfun: function addfun() {\n      var that = this;\n      this.events = {\n        init: function init(o) {\n          o.on('click', function (e) {\n            that.wei(e.lnglat.getLng(), e.lnglat.getLat(), that);\n          });\n        }\n      };\n    },\n    addmarker: function addmarker() {\n      console.log(123);\n      var that = this;\n      var o = amapManager.getMap();\n      var markers = [];\n      var open = [];\n      o.remove(that.overlayGroups);\n      o.remove(that.line);\n\n      for (var i = 0; i < that.data.length; i++) {\n        if (that.data[i].indt !== '') {\n          var marker = new AMap.Marker({\n            position: that.data[i].indt,\n            rowindex: that.rowindex,\n            text: '123',\n            icon: 'https://webapi.amap.com/theme/v1.3/markers/n/mark_b' + (markers.length + 1) + '.png'\n          });\n          open.push(that.data[i].indt);\n          markers.push(marker);\n        }\n      }\n\n      if (open.length > 1) {\n        console.log(open);\n        that.line = new AMap.Polyline({\n          map: o,\n          strokeColor: '#80d8ff',\n          isOutline: true,\n          strokeStyle: 'dashed',\n          outlineColor: 'white',\n          path: open\n        });\n      }\n\n      this.overlayGroups = new AMap.OverlayGroup(markers);\n      o.add(that.overlayGroups);\n    },\n    wei: function wei(a, b, that) {\n      console.log(that.rowindex);\n\n      if (that.rowindex !== '') {\n        that.data[that.rowindex].indt = [a, b];\n      } else {\n        that.data[that.dataid].indt = [a, b];\n      }\n\n      this.addmarker();\n    },\n    jia: function jia() {\n      this.data.push({\n        name: '',\n        indt: ''\n      });\n      this.dataid = this.data.length - 1;\n      this.rowindex = this.dataid;\n      this.$refs.singleTable.setCurrentRow(this.data[this.dataid]);\n    },\n    jian: function jian() {\n      if (this.rowindex || this.rowindex === 0) {\n        this.data.splice(this.rowindex, 1);\n      } else {\n        this.data.splice(this.dataid, 1);\n      }\n\n      this.rowindex = this.data.length - 1;\n      this.$refs.singleTable.setCurrentRow(this.data[this.data.length - 1]);\n      this.addmarker();\n    },\n    shang: function shang() {\n      if (this.dataid > 1 || this.dataid === 1) {\n        var a = this.data[this.dataid];\n        this.data[this.dataid] = this.data[this.dataid - 1];\n        this.data[this.dataid - 1] = a;\n        this.dataid -= 1;\n        this.$refs.singleTable.setCurrentRow(this.data[this.dataid]);\n      }\n\n      this.addmarker();\n    },\n    xia: function xia() {\n      console.log(this.rowindex);\n      console.log(this.dataid);\n\n      if (this.dataid !== this.data.length - 1 && this.data.length > 1) {\n        var a = this.data[this.dataid];\n        this.data[this.dataid] = this.data[this.dataid + 1];\n        this.data[this.dataid + 1] = a;\n        this.dataid += 1;\n        this.$refs.singleTable.setCurrentRow(this.data[this.dataid]);\n      }\n\n      this.addmarker();\n    },\n    indexMethod: function indexMethod(index) {\n      return index + 1;\n    },\n    tableRowClassName: function tableRowClassName(_ref) {\n      var row = _ref.row,\n          rowIndex = _ref.rowIndex;\n      row.index = rowIndex; // 把每一行的索引放进row\n    },\n    onRowClick: function onRowClick(row, event, column) {\n      var index = row.index;\n      this.rowindex = index; // 点击当前行的行数\n\n      this.dataid = index;\n      console.log(this.data);\n    }\n  }\n};\nexports.default = _default;",null]}