{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\income\\components\\charts.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\income\\components\\charts.vue","mtime":1576811950110},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\\\u529E\\u516C\\\\projectwc\\\\\\u524D\\u7AEF\\\\ManageSys\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.fill\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _car = require(\"@/api/car\");\n\nvar _RingChart = _interopRequireDefault(require(\"@/components/Charts/RingChart\"));\n\nvar _StackChart = _interopRequireDefault(require(\"@/components/Charts/StackChart\"));\n\nvar _LineChart = _interopRequireDefault(require(\"@/components/Charts/LineChart\"));\n\nvar _data = _interopRequireDefault(require(\"./data\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'Charts',\n  components: {\n    RingChart: _RingChart.default,\n    StackChart: _StackChart.default,\n    LineChart: _LineChart.default\n  },\n  props: {\n    scenicName: {\n      type: String,\n      default: '全部景区'\n    }\n  },\n  data: function data() {\n    var now = new Date();\n    return {\n      activeName: '汇总',\n      tabList: [{\n        id: 1,\n        name: '汇总',\n        chartName: '总收入',\n        itemName: ['总收入数据统计', '今年业态收入占比', '历年业态收入统计', '今年每月收入统计'],\n        url: '/income/findAllIncome',\n        tabClick: true,\n        data: _data.default['tab1']\n      }, {\n        id: 2,\n        name: '门票',\n        chartName: '门票销售',\n        itemName: ['门票销售数据统计', '今年门票销售额占比', '历年门票销售额统计', '今年每月门票销售额统计'],\n        url: '/income/findTicketIncome',\n        tabClick: false,\n        data: _data.default['tab2']\n      }, {\n        id: 3,\n        name: '餐饮',\n        chartName: '餐饮营业',\n        itemName: ['餐饮营业数据统计', '今年餐饮营业额占比', '历年餐饮营业额统计', '今年每月餐饮营业额统计'],\n        url: '/income/findFoodIncome',\n        tabClick: false,\n        data: _data.default['tab3']\n      }, {\n        id: 4,\n        name: '零售',\n        chartName: '零售营业',\n        itemName: ['零售营业数据统计', '今年零售营业额占比', '历年零售营业额统计', '今年每月零售营业额统计'],\n        url: '/income/findSaleIncome',\n        tabClick: false,\n        data: _data.default['tab4']\n      }, {\n        id: 5,\n        name: '剧场',\n        chartName: '剧场营业',\n        itemName: ['剧场营业数据统计', '今年剧场营业额占比', '历年剧场营业额统计', '今年每月剧场营业额统计'],\n        url: '/income/findTheatreIncome',\n        tabClick: false,\n        data: _data.default['tab5']\n      }, {\n        id: 6,\n        name: '酒店',\n        chartName: '酒店营业',\n        itemName: ['酒店营业数据统计', '今年酒店营业额占比', '历年酒店营业额统计', '今年每月酒店营业额统计'],\n        url: '/income/findHotelIncome',\n        tabClick: false,\n        data: _data.default['tab6']\n      }, {\n        id: 7,\n        name: '停车场',\n        chartName: '停车场营业',\n        itemName: ['停车场营业数据统计', '今年停车场营业额占比', '历年停车场营业额统计', '今年每月停车场营业额统计'],\n        url: '/income/findParkcarIncome',\n        tabClick: false,\n        data: _data.default['tab7']\n      }],\n      jdActive: 1,\n      thisY: now.getFullYear(),\n      lastY: now.getFullYear() - 1,\n      beforeY: now.getFullYear() - 2,\n      monthCount: now.getMonth() + 1\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.getTabList('/income/findAllIncome', {\n        areaName: _this.scenicName\n      }).then(function (data) {\n        _this.formatAllData(data.data, 0);\n      });\n    });\n  },\n  methods: {\n    handleClick: function handleClick(tab, event) {\n      var _this2 = this;\n\n      var that = this;\n      var tabItem = that.tabList[parseInt(tab.index)];\n\n      if (!tabItem.tabClick) {\n        this.getTabList(tabItem.url, {\n          areaName: this.scenicName\n        }).then(function (data) {\n          _this2.formatAllData(data.data, parseInt(tab.index));\n        });\n      }\n    },\n    getTabList: function getTabList(url, query) {\n      return new Promise(function (resolve, reject) {\n        (0, _car.getList)(url, query).then(function (response) {\n          resolve(response);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    formatAllData: function formatAllData(data, tabId) {\n      if (data.length > 0) {\n        var that = this;\n        var itemData = that.tabList[tabId].data;\n        var chart1 = itemData.chart1;\n        var chart2 = itemData.chart2.sdata;\n        var chart3 = itemData.chart3.sdata;\n        var table1 = itemData.table1;\n        var lineData = {};\n        data.forEach(function (item) {\n          if (item.dateYear === 0) {\n            if (item.imcomeType <= 5 || item.imcomeType === 8) {\n              var itemIndex = item.imcomeType - 1;\n\n              if (tabId > 0) {\n                itemIndex = 0;\n              } else {\n                if (item.imcomeType === 8) {\n                  itemIndex = 5;\n                }\n              }\n\n              switch (parseInt(item.dateName)) {\n                case that.beforeY:\n                  chart2[itemIndex][0] = item.imcomeValue;\n                  break;\n\n                case that.lastY:\n                  chart2[itemIndex][1] = item.imcomeValue;\n                  break;\n\n                case that.thisY:\n                  chart2[itemIndex][2] = item.imcomeValue;\n\n                  if (tabId === 0) {\n                    chart1.sdata[itemIndex].value = item.imcomeValue;\n                  }\n\n                  break;\n\n                default:\n                  break;\n              }\n            }\n          } else if (item.dateYear === 1) {\n            if (item.imcomeType <= 5 || item.imcomeType === 8) {\n              if (tabId > 0) {\n                if (!lineData.hasOwnProperty(item.name)) {\n                  lineData[item.name] = new Array(that.monthCount).fill(0);\n                }\n\n                lineData[item.name][parseInt(item.dateName) - 1] = item.imcomeValue;\n              } else {\n                var _itemIndex = item.imcomeType - 1;\n\n                if (item.imcomeType === 8) {\n                  _itemIndex = 5;\n                }\n\n                chart3[_itemIndex][parseInt(item.dateName) - 1] = item.imcomeValue;\n              }\n            }\n          } else if (item.dateYear === 8) {\n            table1.monthSum = item.thismonthIncome || 0;\n            table1.monthTB = item.thismonthSame;\n            table1.monthHB = item.thismonthDis;\n            table1.weekSum = item.thisweekIncome || 0;\n            table1.weekTB = item.thisweekSame;\n            table1.weekHB = item.thisweekDis;\n\n            if (tabId > 0) {\n              var pieLData = [];\n              var pieSData = [];\n\n              for (var pie in item.rateMap) {\n                pieLData.push(pie);\n                pieSData.push({\n                  'name': pie,\n                  'value': item.rateMap[pie]\n                });\n              }\n\n              chart1.ldata = pieLData;\n              chart1.sdata = pieSData;\n\n              if (tabId === 5) {\n                // 酒店入住率\n                var checkIn = {};\n                item.upMonthHotelRateMap.forEach(function (rate) {\n                  if (!checkIn.hasOwnProperty(rate.hotelName)) {\n                    var days = 31;\n                    var upMonth = that.monthCount - 1;\n\n                    if (upMonth === 2) {\n                      days = that.thisY % 4 === 0 ? 29 : 28;\n                    } else if (upMonth === 4 || upMonth === 6 || upMonth === 9 || upMonth === 11) {\n                      days = 30;\n                    }\n\n                    checkIn[rate.hotelName] = new Array(days).fill(0);\n                  }\n\n                  var rateDate = new Date(rate.date);\n                  checkIn[rate.hotelName][rateDate.getDate() - 1] = parseFloat(rate.roomPrice.toFixed(2));\n                });\n                itemData.chart4.ldata = Object.keys(checkIn);\n                var checkSData = [];\n\n                for (var check in checkIn) {\n                  checkSData.push(checkIn[check]);\n                }\n\n                itemData.chart4.sdata = checkSData;\n              }\n            }\n          }\n        });\n        that.$set(that.tabList[tabId].data.chart2, 'sdata', null);\n        that.$set(that.tabList[tabId].data.chart2, 'sdata', chart2);\n\n        if (tabId > 0) {\n          that.$set(that.tabList[tabId].data.chart3, 'ldata', Object.keys(lineData));\n          var sdata = [];\n\n          for (var line in lineData) {\n            sdata.push(lineData[line]);\n          }\n\n          chart3 = sdata;\n        }\n\n        that.$set(that.tabList[tabId].data.chart3, 'sdata', null);\n        that.$set(that.tabList[tabId].data.chart3, 'sdata', chart3);\n      }\n    }\n  }\n};\nexports.default = _default;",null]}