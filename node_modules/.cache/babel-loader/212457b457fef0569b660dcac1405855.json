{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\yingzhi\\components\\EcharClomnThtee.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\yingzhi\\components\\EcharClomnThtee.vue","mtime":1576638136685},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\\\u529E\\u516C\\\\projectwc\\\\\\u524D\\u7AEF\\\\ManageSys\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _echarts = _interopRequireDefault(require(\"echarts\"));\n\n//\n//\n//\n//\n// import resize from './mixins/resize'\nvar _default2 = {\n  // mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    getdata: {\n      type: Object,\n      default: function _default() {\n        return {\n          id: 'echar',\n          // *\n          height: '100%',\n          // *\n          width: '100%',\n          // *\n          grid: '',\n          // 非必传\n          legend: [],\n          // *\n          series_data: [],\n          // *\n          datax: [],\n          // *\n          color: [],\n          // *\n          row_nums: 2,\n          // x轴每行几个字\n          x_name: '',\n          y_name: '分布',\n          y_fomatter: '',\n          // y轴返回参数格式\n          stickx: '',\n          // 刻度线是否有\n          sticky: '',\n          xyline_color: '#16C7FB',\n          // xy轴颜色\n          font_color: '#fff',\n          // xy轴字体颜色\n          legend_color: '#16C7FB',\n          // legend字体颜色\n          stack: '1' // 若series 下stack  为空或者null---多柱状图  若相同且不为null---多柱状图\n\n        };\n      }\n    }\n  },\n  data: function data() {\n    return {\n      chart: null,\n      colorlist: ['#89A2FF', '#A2BCFF', '#FF9F9C', '#FFDC79'] // 扇形区域以及列表颜色\n\n    };\n  },\n  watch: {\n    getdata: {\n      // immediate: true,\n      handler: function handler(val) {\n        var _this = this;\n\n        this.$nextTick(function () {\n          // this.LineClomn(val)\n          _this.clomnthree(val);\n        });\n      },\n      deep: true\n    }\n  },\n  mounted: function mounted() {\n    this.chart = _echarts.default.init(document.getElementById(this.getdata.id));\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    clomnthree: function clomnthree(data) {\n      var that = this;\n      var legend = data.legend;\n      var datax = data.datax;\n      var color = data.color;\n      var stack = data.stack;\n\n      if (stack === '' || stack === undefined) {\n        stack = null;\n      } // series 数组处理\n\n\n      var series_data = data.series_data;\n      var series = [];\n\n      for (var i = 0; i < series_data.length; i++) {\n        series.push({\n          'name': legend[i],\n          'type': 'bar',\n          'stack': stack,\n          'data': series_data[i]\n        });\n      } // 以下为非必传参数\n\n\n      var row_nums = data.row_nums;\n\n      if (row_nums === '' || row_nums === undefined) {\n        row_nums = 2;\n      }\n\n      var x_name = data.x_name;\n\n      if (x_name === '' || x_name === undefined) {\n        x_name = '';\n      }\n\n      var y_name = data.y_name;\n\n      if (y_name === '' || y_name === undefined) {\n        y_name = '';\n      }\n\n      var xyline_color = data.xyline_color; // xy轴颜色\n\n      if (xyline_color === '' || x_name === undefined) {\n        xyline_color = '#080808';\n      }\n\n      var font_color = data.font_color; // xy轴字体颜色\n\n      if (font_color === '' || font_color === undefined) {\n        font_color = '080808';\n      }\n\n      var legend_color = data.legend_color; // legend字体颜色\n\n      if (legend_color === '' || legend_color === undefined) {\n        legend_color = '080808';\n      }\n\n      var stickx = data.stickx; // x轴刻度线\n\n      if (stickx === '' || stickx === undefined) {\n        stickx = false;\n      }\n\n      var sticky = data.sticky; // y轴刻度线\n\n      if (sticky === '' || sticky === undefined) {\n        sticky = false;\n      }\n\n      var y_fomatter = data.y_fomatter;\n\n      if (y_fomatter === '' || y_fomatter === undefined) {\n        y_fomatter = '{value}';\n      }\n\n      var grid = data.grid;\n\n      if (grid === '' || grid === undefined) {\n        grid = {\n          x: 30,\n          y: 40,\n          x2: 0,\n          y2: 30,\n          containLabel: false\n        };\n      }\n\n      var option = {\n        grid: grid,\n        tooltip: {\n          // 鼠标移动触发事件\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' | cross\n\n          }\n        },\n        legend: {\n          orient: 'horizontal',\n          // 'vertical'\n          x: 'center',\n          // 'center' | 'left' | {number},\n          y: 'top',\n          // 'center' | 'bottom' | {number}\n          top: 8,\n          textStyle: {\n            // fontSize: 12, // 字体大小\n            color: legend_color // 字体颜色\n\n          },\n          data: legend\n        },\n        color: color,\n        xAxis: [{\n          type: 'category',\n          name: x_name,\n          triggerEvent: false,\n          data: datax,\n          axisTick: {\n            // 刻度\n            show: stickx\n          },\n          axisLabel: {\n            show: true,\n            formatter: function formatter(params) {\n              var newParamsName = ''; // 最终拼接成的字符串\n\n              var paramsNameNumber = params.length; // 实际标签的个数\n\n              var provideNumber = row_nums; // 每行能显示的字的个数\n\n              var rowNumber = Math.ceil(paramsNameNumber / provideNumber); // 换行的话，需要显示几行，向上取整\n\n              /**\r\n              * 判断标签的个数是否大于规定的个数， 如果大于，则进行换行处理 如果不大于，即等于或小于，就返回原标签\r\n              */\n              // 条件等同于rowNumber>1\n\n              if (paramsNameNumber > provideNumber) {\n                /** 循环每一行,p表示行 */\n                for (var p = 0; p < rowNumber; p++) {\n                  var tempStr = ''; // 表示每一次截取的字符串\n\n                  var start = p * provideNumber; // 开始截取的位置\n\n                  var end = start + provideNumber; // 结束截取的位置\n                  // 此处特殊处理最后一行的索引值\n\n                  if (p === rowNumber - 1) {\n                    // 最后一次不换行\n                    tempStr = params.substring(start, paramsNameNumber);\n                  } else {\n                    // 每一次拼接字符串并换行\n                    tempStr = params.substring(start, end) + '\\n';\n                  }\n\n                  newParamsName += tempStr; // 最终拼成的字符串\n                }\n              } else {\n                // 将旧标签的值赋给新标签\n                newParamsName = params;\n              } // 将最终的字符串返回\n\n\n              return newParamsName;\n            },\n            textStyle: {\n              color: '#fff'\n            }\n          },\n          axisLine: {\n            // 轴线style\n            lineStyle: {\n              color: xyline_color\n            }\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          name: y_name,\n          axisTick: {\n            // 刻度\n            show: sticky\n          },\n          splitLine: {\n            // 网格线\n            show: false\n          },\n          axisLabel: {\n            formatter: y_fomatter,\n            textStyle: {\n              color: font_color\n            }\n          },\n          axisLine: {\n            // 轴线style\n            lineStyle: {\n              color: xyline_color\n            }\n          }\n        }],\n        series: series\n      };\n      that.chart.setOption(option);\n      window.addEventListener('resize', function () {\n        that.chart.resize();\n      });\n    }\n  }\n};\nexports.default = _default2;",null]}