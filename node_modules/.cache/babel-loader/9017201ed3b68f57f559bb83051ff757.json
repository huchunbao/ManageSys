{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\integral\\components\\EchartRing.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\integral\\components\\EchartRing.vue","mtime":1576812978549},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\\\u529E\\u516C\\\\projectwc\\\\\\u524D\\u7AEF\\\\ManageSys\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _echarts = _interopRequireDefault(require(\"echarts\"));\n\n//\n//\n//\n//\n// import resize from './mixins/resize'\nvar _default2 = {\n  // mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    getdata: {\n      type: Object,\n      default: function _default() {\n        return {\n          id: 'echar',\n          series: [],\n          legend: [],\n          height: '',\n          width: ''\n        };\n      }\n    }\n  },\n  data: function data() {\n    return {\n      chart: null,\n      colorlist: this.$store.state.settings.chartColors // 扇形区域以及列表颜色\n\n    };\n  },\n  watch: {\n    getdata: {\n      // immediate: true,\n      handler: function handler(val) {\n        var _this = this;\n\n        this.$nextTick(function () {\n          _this.EchartsRing(val);\n        });\n      },\n      deep: true\n    }\n  },\n  mounted: function mounted() {\n    this.chart = _echarts.default.init(document.getElementById(this.getdata.id));\n  },\n  beforeDestroy: function beforeDestroy() {\n    var that = this;\n    window.removeEventListener('resize', that.resizeHandler);\n  },\n  methods: {\n    EchartsRing: function EchartsRing(data) {\n      // console.log(data)\n      var series = data.series;\n      var legend = data.legend;\n      var that = this;\n      var option = {\n        /* eslint-disable */\n        title: {\n          show: series.length < 1 && legend.length < 1,\n          textStyle: {\n            color: '#909399',\n            fontWeight: 'normal',\n            fontSize: 14\n          },\n          text: '暂无数据',\n          left: 'center',\n          top: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: function formatter(params) {\n            var result = '';\n            result += params.seriesName + '</br>' + params.marker + '' + params.data.name + ' : ' + params.data.value + '(' + params.percent + '%' + ')' + '</br>';\n            return result;\n          }\n        },\n        legend: {\n          orient: 'vertical',\n          icon: 'circle',\n          x: '80%',\n          y: 'center',\n          data: legend\n        },\n        color: this.$store.state.settings.chartColors,\n        series: [{\n          name: '消费来源',\n          type: 'pie',\n          center: ['40%', '55%'],\n          radius: ['30%', '50%'],\n          //minAngle: 5, // 最小的扇区角度（0 ~ 360），用于防止某个值过小导致扇区太小影响交互\n          avoidLabelOverlap: true,\n          // 是否启用防止标签重叠策略\n          hoverAnimation: true,\n          // 是否开启 hover 在扇区上的放大动画效\n          labelLine: {\n            // 设置延长线的长度\n            normal: {\n              show: true // length: 15 // 设置延长线的长度// length2: 10,//设置第二段延长线的长度\n\n            }\n          },\n          label: {\n            normal: {\n              show: true,\n              formatter: function formatter(params) {\n                var result = ''; // result =params.seriesName+''+\"</br>\"\n\n                result += params.data.value + '(' + params.percent + '%' + ')';\n                return result;\n              }\n            },\n            emphasis: {\n              show: true // textStyle: {\n              //   // fontSize: '16',\n              //   // fontWeight: 'bold'\n              // }\n\n            }\n          },\n          data: series\n        }]\n      };\n      that.chart.setOption(option);\n      window.addEventListener('resize', that.resizeHandler);\n    },\n    resizeHandler: function resizeHandler() {\n      if (this.chart) {\n        this.chart.resize();\n      }\n    }\n  }\n};\nexports.default = _default2;",null]}