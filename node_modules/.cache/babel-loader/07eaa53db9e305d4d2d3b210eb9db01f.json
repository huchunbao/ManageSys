{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\thread-loader\\dist\\cjs.js!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\car\\list.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\car\\list.vue","mtime":1577252313341},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CarSearch from \"./components/CarSearch\";\nimport CarTable from \"./components/CarTable\";\nimport CarChart from '@/components/Charts/CarChart';\nimport { getList, excelList } from '@/api/car';\nimport { parseTime } from '@/utils';\nexport default {\n  name: 'CarList',\n  components: {\n    CarSearch: CarSearch,\n    CarChart: CarChart,\n    CarTable: CarTable\n  },\n  data: function data() {\n    return {\n      tabsInfo: [{\n        label: '行驶统计',\n        // tab名称\n        name: 'xs',\n        // 简称，用于判断\n        chart: true,\n        // 是否又图表\n        tabClick: true,\n        // 是否点击过，用于判断是否获取tab页的数据\n        url: '/dataStatistics/findGoData',\n        // 接口地址\n        excelUrl: '/dataExport/excelGoData',\n        // 导出接口地址\n        tableSize: 5,\n        // 表格每页数据条数，有图表是5  没有图表是10\n        query: [] // 默认查询条件，根据接口要求定义\n\n      }, {\n        label: '超速统计',\n        name: 'cs',\n        chart: true,\n        tabClick: false,\n        url: '/dataStatistics/findSpeedData',\n        excelUrl: '/dataExport/excelSpeedData',\n        tableSize: 5,\n        query: [{\n          'speedValue': null,\n          'speedTime': 0\n        }]\n      }, {\n        label: '位置统计',\n        name: 'wz',\n        chart: false,\n        tabClick: false,\n        url: '/dataStatistics/findSeatData',\n        excelUrl: '/dataExport/excelSeatData',\n        tableSize: 5,\n        query: [{\n          'intervalTime': 0\n        }]\n      }, {\n        label: '停车统计',\n        name: 'tc',\n        chart: true,\n        tabClick: false,\n        url: '/dataStatistics/findStopCarData',\n        excelUrl: '/dataExport/excelStopCarData',\n        tableSize: 5,\n        query: [{\n          'intervalTime': 0\n        }]\n      }, {\n        label: '里程统计',\n        name: 'lc',\n        chart: true,\n        tabClick: false,\n        url: '/dataStatistics/findDisData',\n        excelUrl: '/dataExport/excelDisData',\n        tableSize: 5,\n        query: []\n      }, {\n        label: '命令统计',\n        name: 'ml',\n        chart: false,\n        tabClick: false,\n        url: '/dataStatistics/findOrderData',\n        excelUrl: '/dataExport/excelOrderData',\n        tableSize: 10,\n        query: []\n      }, {\n        label: '趟数统计',\n        name: 'ts',\n        chart: true,\n        tabClick: false,\n        url: '/dataStatistics/findPassesData',\n        excelUrl: '/dataExport/excelPassesData',\n        tableSize: 5,\n        query: []\n      }, {\n        label: '设备信息统计',\n        name: 'sbxx',\n        chart: false,\n        tabClick: false,\n        url: '/dataStatistics/findWellData',\n        excelUrl: '/dataExport/excelWellData',\n        tableSize: 10,\n        query: [{\n          'power': 0\n        }]\n      }, {\n        label: '加油统计',\n        name: 'jy',\n        chart: true,\n        tabClick: false,\n        url: '/dataStatistics/findOilData',\n        excelUrl: '/dataExport/excelOilData',\n        tableSize: 5,\n        query: [{\n          'oilType': 0\n        }]\n      }, // {\n      //   label: '漏油统计',\n      //   name: 'ly',\n      //   chart: true,\n      //   tabClick: false,\n      //   url: '/dataStatistics/findOilData',\n      //   excelUrl: '/dataExport/excelOilData',\n      //   tableSize: 5,\n      //   query: [{\n      //     'oilType': 1\n      //   }]\n      // },\n      {\n        label: '周期统计',\n        name: 'zq',\n        chart: true,\n        tabClick: false,\n        url: '/dataStatistics/findCycleData',\n        excelUrl: '/dataExport/excelCycleData',\n        tableSize: 5,\n        query: []\n      }],\n      activeName: 'xs',\n      childchart: 'childchart',\n      // chart id前缀\n      nameList: [{\n        id: 0,\n        veh_code: '全部车辆'\n      }],\n      // 选择车辆下拉菜单默认项\n      defaultQuery: {\n        // 查询默认条件，每次查询需加上\n        'startTime': '',\n        // 开始时间\n        'endTime': '',\n        // 结束时间\n        'id': null,\n        // 车船ID 暂无用\n        'vehCode': '',\n        // 车船牌号\n        'pageNum': 1,\n        // 当前显示页数\n        'pageSize': 5 // 每页显示条数\n\n      }\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.getTabList('/boatsInfo/cardList', {}).then(function (data) {\n      // 获取选择车辆下拉列表数据\n      _this.nameList = _this.nameList.concat(data.data);\n    });\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      _this2.defaultQuery.startTime = parseTime(_this2.$refs.childsearch[0].time[0]);\n      _this2.defaultQuery.endTime = parseTime(_this2.$refs.childsearch[0].time[1]);\n\n      _this2.getTabList(_this2.tabsInfo[0].url, _this2.defaultQuery).then(function (data) {\n        // 初始化获取行驶统计数据\n        _this2.$refs['childchartxs'][0].chartData = _this2.data2Chart('xs', data.data.picList); // piclist 图表显示的数据，条件检索的所有数据没有分页\n\n        _this2.$refs['childchartxs'][0].initChart();\n\n        _this2.$refs.childtable[0].datalist = data.data.list.content; // 表格显示的数据，条件检索的分页数据\n\n        _this2.$refs.childtable[0].total = data.data.allCount; // 总记录数\n\n        _this2.$refs.childsearch[0].queryData = Object.assign({}, _this2.defaultQuery); // 查询条件，每个页面都保存各自的查询条件\n      });\n    });\n  },\n  methods: {\n    handleClick: function handleClick(tab, event) {\n      // tab点击事件\n      var that = this;\n      var tabItem = that.tabsInfo[parseInt(tab.index)];\n      var childChart = 'childchart' + tabItem.name;\n\n      if (!tabItem.tabClick) {\n        // 第一次点击加载默认数据，再次进入不请求数据，需点击按钮查询\n        var query = Object.assign({}, this.defaultQuery); // 每个页面各自的查询条件\n\n        query.startTime = parseTime(this.$refs.childsearch[tab.index].time[0]);\n        query.endTime = parseTime(this.$refs.childsearch[tab.index].time[1]);\n\n        if (tabItem.query.length > 0) {\n          query = Object.assign(query, tabItem.query[0]);\n        }\n\n        query.pageSize = tabItem.tableSize;\n        this.getTabList(tabItem.url, query).then(function (data) {\n          if (data) {\n            var picList = that.data2Chart(tabItem.name, data.data.picList); // 图表数据\n\n            var list = data.data.list.content || []; // 列表数据\n\n            if (tabItem.chart) {\n              // 有图表更新图表数据\n              that.$refs[childChart][0].chartData = picList;\n              that.$refs[childChart][0].initChart();\n            }\n\n            that.$refs.childtable[tab.index].datalist = list;\n            that.$refs.childtable[tab.index].total = data.data.allCount; // 总记录数\n          }\n        });\n        that.$refs.childsearch[tab.index].queryData = query; // 更新查询条件\n\n        that.tabsInfo[parseInt(tab.index)].tabClick = true; // 更新点击状态\n      } else {\n        if (tabItem.chart) {\n          // 再次进入tab页，重新加载图表\n          setTimeout(function () {\n            that.$refs[childChart][0].initChart();\n          }, 0);\n        }\n      }\n    },\n    search: function search(query) {\n      // 查询\n      this.searchData(query[0], query[1]);\n    },\n    pageChange: function pageChange(page) {\n      // 表格页数切换\n      var tabIndex = page[0];\n      var query = this.$refs.tabItem[tabIndex].$children[0].queryData;\n      query.pageNum = page[1].page;\n      this.searchData(tabIndex, query);\n    },\n    searchData: function searchData(tabIndex, query) {\n      // 查询请求\n      var that = this;\n      var tabItem = that.tabsInfo[tabIndex]; // tab页\n\n      var childChart = 'childchart' + tabItem.name;\n      query.pageSize = tabItem.tableSize; // 当前页\n\n      that.getTabList(tabItem.url, query).then(function (data) {\n        that.$refs.childsearch[tabIndex].searchLoading = false; // 查询按钮loading状态\n\n        if (data) {\n          if (tabItem.chart) {\n            that.$refs[childChart][0].chartData = that.data2Chart(tabItem.name, data.data.picList);\n            that.$refs[childChart][0].initChart();\n          }\n\n          that.$refs.childtable[tabIndex].datalist = data.data.list.content || [];\n          that.$refs.childtable[tabIndex].total = data.data.allCount || 0;\n        }\n      });\n    },\n    excel: function excel(query) {\n      // 导出，后台已经生成excel，前端直接下载\n      var that = this;\n      var tabIndex = query[0];\n      var tabItem = that.tabsInfo[tabIndex];\n      new Promise(function (resolve, reject) {\n        excelList(tabItem.excelUrl, query[1]).then(function (response) {\n          resolve(response);\n        }).catch(function (error) {\n          reject(error);\n        });\n      }).then(function (response) {\n        // 保存excel\n        var blob = new Blob([response], {\n          type: 'application/vnd.ms-excel'\n        });\n\n        if (window.navigator.msSaveOrOpenBlob) {\n          navigator.msSaveBlob(blob);\n        } else {\n          var link = document.createElement('a');\n          var evt = document.createEvent('HTMLEvents');\n          evt.initEvent('click', false, false);\n          link.href = URL.createObjectURL(blob);\n          link.download = tabItem.label + parseTime(new Date());\n          link.style.display = 'none';\n          document.body.appendChild(link);\n          link.click();\n          window.URL.revokeObjectURL(link.href);\n        }\n\n        that.$refs.childsearch[tabIndex].downloadLoading = false; // 导出loading状态\n      }).catch(function (e) {\n        // console.log(e)\n        that.$refs.childsearch[tabIndex].downloadLoading = false; // 导出loading状态\n      });\n    },\n    getTabList: function getTabList(url, query) {\n      return new Promise(function (resolve, reject) {\n        getList(url, query).then(function (response) {\n          resolve(response);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    data2Chart: function data2Chart(type, data) {\n      // 图表数据格式化\n      var chart = [];\n\n      switch (type) {\n        case 'xs':\n          chart = [['product'], ['行驶时长'], ['行驶里程'], ['油耗/耗电量'], ['最大速度'], ['平均速度']];\n\n          if (data !== null) {\n            data.forEach(function (item) {\n              chart[0].push(item.vehCode);\n              chart[1].push(item.speedTime);\n              chart[2].push(item.speedMake);\n              chart[3].push(item.oilEat);\n              chart[4].push(item.maxSpeed);\n              chart[5].push(item.avSpeed);\n            });\n          }\n\n          break;\n\n        case 'cs':\n          chart = [['product'], ['超速时长'], ['超速里程'], ['超速次数'], ['最大速度'], ['最小速度']];\n\n          if (data !== null) {\n            data.forEach(function (item) {\n              chart[0].push(item.vehCode);\n              chart[1].push(item.speedTime);\n              chart[2].push(item.speedMake);\n              chart[3].push(item.speedNum);\n              chart[4].push(item.maxSpeed);\n              chart[5].push(item.minSpeed);\n            });\n          }\n\n          break;\n\n        case 'tc':\n          chart = [['product'], ['停车时长'], ['停车次数']];\n\n          if (data !== null) {\n            data.forEach(function (item) {\n              chart[0].push(item.vehCode);\n              chart[1].push(item.stopTime);\n              chart[2].push(item.stopCount);\n            });\n          }\n\n          break;\n\n        case 'lc':\n          chart = [['product'], ['行驶里程'], ['油耗/耗电量']];\n\n          if (data !== null) {\n            data.forEach(function (item) {\n              chart[0].push(item.vehCode);\n              chart[1].push(item.dis);\n              chart[2].push(item.oilEat);\n            });\n          }\n\n          break;\n\n        case 'ts':\n          chart = [['product'], ['行驶时长'], ['趟数']];\n\n          if (data !== null) {\n            data.forEach(function (item) {\n              chart[0].push(item.vehCode);\n              chart[1].push(item.disTime);\n              chart[2].push(item.passes);\n            });\n          }\n\n          break;\n\n        case 'jy':\n          chart = [['product'], ['加油/充电量'], ['加油/充电次数']];\n\n          if (data !== null) {\n            data.forEach(function (item) {\n              chart[0].push(item.vehCode);\n              chart[1].push(item.oilNum);\n              chart[2].push(item.oilCount);\n            });\n          }\n\n          break;\n\n        case 'ly':\n          chart = [['product'], ['漏油/亏电量'], ['漏油/亏电次数']];\n\n          if (data !== null) {\n            data.forEach(function (item) {\n              chart[0].push(item.vehCode);\n              chart[1].push(item.oilNum);\n              chart[2].push(item.oilCount);\n            });\n          }\n\n          break;\n\n        case 'zq':\n          chart = [['product'], ['总里程'], ['总油耗/能耗'], ['超速次数'], ['超时停车次数'], ['加油/充电量'], ['漏油/亏电量'], ['百公里油耗/能耗']];\n\n          if (data !== null) {\n            data.forEach(function (item) {\n              chart[0].push(item.vehCode);\n              chart[1].push(item.totalDis);\n              chart[2].push(item.totalOilEat);\n              chart[3].push(item.speedNum);\n              chart[4].push(item.outtimeStopcarNum);\n              chart[5].push(item.oilNum);\n              chart[6].push(item.oilleakNum);\n              chart[7].push(item.oilEat);\n            });\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      return chart;\n    }\n  }\n};",null]}