{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\integral\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\integral\\index.vue","mtime":1576818721810},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\\\u529E\\u516C\\\\projectwc\\\\\\u524D\\u7AEF\\\\ManageSys\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"D:\\\\\\u529E\\u516C\\\\projectwc\\\\\\u524D\\u7AEF\\\\ManageSys\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/defineProperty\"));\n\nvar _axios = require(\"@/api/axios\");\n\nvar _echarts = _interopRequireDefault(require(\"echarts\"));\n\nvar _EchartRing = _interopRequireDefault(require(\"./components/EchartRing\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nvar _default = {\n  /* eslint-disable */\n  name: 'Integral',\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      //tab按钮\n      //  tab: [\"标题一\",\"标题二\",\"标题三\"],\n      //  default_bar: 0,\n      memberTotalNum: 0,\n      // 会员总数\n      addMemberTotalNum: 0,\n      // 新增会员\n      totalExchangeNum: 0,\n      // 兑换积分\n      totalSendNum: 0\n    }, (0, _defineProperty2.default)(_ref, \"memberTotalNum\", ''), (0, _defineProperty2.default)(_ref, \"memberList\", ''), (0, _defineProperty2.default)(_ref, \"memberIntegralInfos\", ''), (0, _defineProperty2.default)(_ref, \"series_data\", {\n      id: 'echartring',\n      series: [],\n      legend: [],\n      height: '100%',\n      width: '100%'\n    }), (0, _defineProperty2.default)(_ref, \"echart2\", null), (0, _defineProperty2.default)(_ref, \"echart3\", null), _ref;\n  },\n  components: {\n    EchartRing: _EchartRing.default\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var that = this;\n    this.$nextTick(function () {\n      (0, _axios.get)('/income/findMemberCardIncome').then(function (data) {\n        if (data.msg === \"SUCCESS\") {\n          var data = data.data;\n          _this.memberTotalNum = data.memberTotalNum ? data.memberTotalNum : 0;\n          _this.addMemberTotalNum = data.addMemberTotalNum ? data.addMemberTotalNum : 0;\n          _this.totalExchangeNum = data.totalExchangeNum ? data.totalExchangeNum : 0;\n          _this.totalSendNum = data.totalSendNum ? data.totalSendNum : 0;\n          var echarts = data.memberList;\n          var data_series = [],\n              data_legend = []; // 环状图\n\n          var data_active = [],\n              data_close = [],\n              datax = []; // 双柱状图\n\n          for (var i = 0; i < echarts.length; i++) {\n            if (echarts[i].dateYear == '4' && echarts[i].name) {\n              data_series.push({\n                \"value\": echarts[i].imcomeValue,\n                \"name\": echarts[i].name\n              });\n              data_legend.push(echarts[i].name);\n            } else if (echarts[i].dateYear == '0') {\n              if (echarts[i].active == '0') {\n                data_active.push(echarts[i].imcomeValue);\n                datax.push(parseInt(echarts[i].dateName));\n              } else {\n                data_close.push(echarts[i].imcomeValue);\n              }\n            }\n          } // 环状图\n\n\n          that.series_data.series = data_series;\n          that.series_data.legend = data_legend; // that.EchartsRing(data_series, data_legend)\n          // 双柱状图\n\n          console.log(data_active, data_close);\n          that.DoubleColumn(data_active, data_close, datax);\n          var LineColumn = data.memberIntegralInfos;\n          var data_send = [],\n              data_exchange = [],\n              datax = []; //柱状折线图\n\n          for (var i = 0; i < LineColumn.length; i++) {\n            if (LineColumn[i].integralType == 0) {\n              data_send.push(LineColumn[i].integral);\n              datax.push(parseInt(LineColumn[i].dateName));\n            } else {\n              data_exchange.push(LineColumn[i].integral);\n            }\n          }\n\n          that.EchartsLineColumn(data_send, data_exchange, datax);\n        }\n      });\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.resizeHandler);\n  },\n  methods: {\n    TabClick: function TabClick(index) {\n      this.default_bar = index;\n    },\n    EchartsLineColumn: function EchartsLineColumn(data_send, data_exchange, datax) {\n      var that = this;\n      var data_legend = [{\n        name: '送出积分'\n      }, {\n        name: '兑换积分',\n        icon: 'circle'\n      }];\n      var option = {\n        title: {\n          show: data_send.length < 1 || data_exchange.length < 1 || datax.length < 1,\n          textStyle: {\n            color: '#909399',\n            fontWeight: 'normal',\n            fontSize: 14\n          },\n          text: '暂无数据',\n          left: 'center',\n          top: 'center'\n        },\n        grid: {\n          left: '20',\n          right: '70',\n          bottom: '50'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          },\n          // axisPointer: {\n          // type: 'shadow'\n          // },\n          formatter: function formatter(params) {\n            var result = '';\n            result = params[0].name + '月份积分出入情况' + \"</br>\";\n            params.forEach(function (item) {\n              result += item.marker + \" \" + item.seriesName + \" : \" + item.value + \"</br>\";\n            });\n            return result;\n          } // \"{b}月会员积分情况 <br/>{a} :{c}<br/>{a1}: {c1}\"\n          // a ---legend第一个 名字  a1---第二个名字\n          // b --- 第一个表x轴\n          // b1 --- 第二标x轴\n          // c  ---第一个y轴值\n          // c1 ---第二个y轴\n\n        },\n        legend: {\n          // 'circle', 'rect', 'roundRect', 'triangle', 'diamond', 'pin', 'arrow', 'none'\n          data: data_legend\n        },\n        color: ['#3F6AFF', '#A2BCFF'],\n        xAxis: [{\n          name: '月份(月)',\n          type: 'category',\n          splitLine: {\n            show: false\n          },\n          data: datax,\n          axisPointer: {\n            type: 'shadow'\n          },\n          axisTick: {\n            alignWithLabel: true,\n            show: false\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          name: '积分(分)',\n          splitLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            formatter: '{value}'\n          }\n        }],\n        series: [{\n          name: '送出积分',\n          type: 'line',\n          data: data_send\n        }, {\n          name: '兑换积分',\n          type: 'bar',\n          // yAxisIndex: 1,\n          data: data_exchange\n        }]\n      };\n      that.echart2 = _echarts.default.init(document.getElementById('echartslinecolumn'));\n      option.grid.left = this.getYWidth(Math.max.apply(null, option.series[0].data), Math.max.apply(null, option.series[0].data));\n      that.echart2.setOption(option);\n      window.addEventListener('resize', that.resizeHandler);\n    },\n    DoubleColumn: function DoubleColumn(data_active, data_close, datax) {\n      var _ref2;\n\n      var datax = ['2016', '2017', '2018', '2019'];\n      var data_active = [1, 2, 8, 9];\n      var data_close = [5, 1, 9, 10];\n      var option = {\n        title: {\n          show: datax.length < 1 || data_active.length < 1 || data_close.length < 1,\n          textStyle: {\n            color: '#909399',\n            fontWeight: 'normal',\n            fontSize: 14\n          },\n          text: '暂无数据',\n          left: 'center',\n          top: 'center'\n        },\n        grid: {\n          left: '20',\n          right: '70',\n          bottom: '50'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          },\n          // axisPointer: {\n          // type: 'shadow'\n          // },\n          formatter: function formatter(params) {\n            var result = '';\n            result = params[0].name + '年会员活跃度统计' + \"</br>\";\n            params.forEach(function (item) {\n              result += item.marker + '' + item.seriesName + ' : ' + item.value + '</br>';\n            });\n            return result;\n          }\n        },\n        legend: {\n          data: [{\n            name: '活跃会员',\n            icon: 'circle'\n          }, {\n            name: '沉默会员',\n            icon: 'circle'\n          }]\n        },\n        color: ['#89A2FF', '#A2BCFF'],\n        yAxis: [{\n          type: 'value',\n          name: '人数(人)',\n          axisLabel: {\n            formatter: '{value}'\n          },\n          splitLine: {\n            show: false\n          },\n          axisTick: {\n            // 刻度\n            show: false\n          }\n        }],\n        xAxis: [(_ref2 = {\n          type: 'value',\n          name: '日期(年)',\n          splitLine: {\n            show: false\n          },\n          axisTick: {\n            // 刻度\n            show: false\n          }\n        }, (0, _defineProperty2.default)(_ref2, \"type\", 'category'), (0, _defineProperty2.default)(_ref2, \"data\", datax), _ref2)],\n        series: [{\n          name: '活跃会员',\n          type: 'bar',\n          barMaxWidth: 50,\n          // 最大宽度\n          data: data_active\n        }, {\n          name: '沉默会员',\n          type: 'bar',\n          barMaxWidth: 50,\n          // 最大宽度\n          data: data_close\n        }]\n      };\n      var that = this;\n      that.echart3 = _echarts.default.init(document.getElementById('doublecolumn'), 'light'); // window.onresize = myChart.resize\n\n      option.grid.left = this.getYWidth(Math.max.apply(null, option.series[0].data), Math.max.apply(null, option.series[0].data));\n      that.echart3.setOption(option);\n      window.addEventListener('resize', that.resizeHandler);\n    },\n    resizeHandler: function resizeHandler() {\n      // 自适应echarts\n      if (this.echart2) {\n        this.echart2.resize();\n      }\n\n      if (this.echart3) {\n        this.echart3.resize();\n      }\n    },\n    getYWidth: function getYWidth(data1, data2) {\n      // 根据数值长度计算显示宽度\n      return ((data1 > data2 ? data1.toString().length : data2.toString().length) * 12).toString();\n    }\n  }\n};\nexports.default = _default;",null]}