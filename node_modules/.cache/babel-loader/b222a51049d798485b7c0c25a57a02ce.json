{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\structure\\components\\role.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\structure\\components\\role.vue","mtime":1577252313188},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\\\u529E\\u516C\\\\projectwc\\\\\\u524D\\u7AEF\\\\ManageSys\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\nrequire(\"core-js/modules/es7.object.values\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:\\\\\\u529E\\u516C\\\\projectwc\\\\\\u524D\\u7AEF\\\\ManageSys\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _axios = require(\"@/api/axios\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  props: {\n    companyId: {\n      type: Number,\n      default: 0\n    },\n    addType: {\n      type: Number,\n      default: 0\n    },\n    roleId: {\n      type: Number,\n      default: 0\n    },\n    roleName: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      loading: false,\n      companyLoading: '暂无数据',\n      addRoleForm: {\n        name: this.roleName\n      },\n      addRoleRules: {\n        name: [{\n          required: true,\n          message: '请输入角色名称',\n          trigger: 'blur'\n        }]\n      },\n      sysData: [],\n      sysRootNode: [],\n      setData: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      defaultAuthList: [],\n      // 修改角色，默认id列表\n      functionData: [],\n      getList: {},\n      // 存储点击树列表获取到的功能列表\n      clickList: {},\n      // 存储有点击的功能列表\n      addList: {},\n      // 添加的功能\n      updateList: {},\n      // 修改的功能\n      deleteList: {},\n      // 删除的功能\n      defaultFuncAuth: {\n        roleId: this.roleId,\n        cpFuncId: 0,\n        cpFuncPid: 0,\n        rightSelect: 0,\n        rightInsert: 0,\n        rightDelete: 0,\n        rightUpdate: 0,\n        rightAudit: 0,\n        rightPrint: 0,\n        rightExport: 0,\n        type: 0 // 0表示没有添加默认赋值  1表示存在，读取接口获取的数据\n\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.initAuthList();\n  },\n  methods: {\n    initAuthList: function initAuthList() {\n      // 加载授权树列表\n      var that = this;\n\n      if (that.companyId > 0) {\n        that.companyLoading = '数据加载中...';\n        (0, _axios.get)('/cpfunc/truncated-tree/' + that.companyId, {\n          truncateLvl: 2,\n          roleId: that.roleId\n        }).then(function (response) {\n          if (response.status === 0) {\n            that.companyLoading = '暂无数据';\n            that.sysData = response.data.tree;\n            that.defaultAuthList = response.data.roleFuncAuthIds;\n            that.sysRootNode = JSON.parse(JSON.stringify(response.data.tree));\n\n            if (that.sysRootNode.length > 0) {\n              that.sysRootNode[0].children = [];\n            }\n\n            that.$nextTick(function () {\n              for (var c = 0; c < response.data.checkedIds.length; c++) {\n                that.$refs.sysTree.setChecked(response.data.checkedIds[c], true, false);\n              }\n            });\n          }\n        });\n      }\n    },\n    getTreeNode: function getTreeNode(data) {\n      // 判断节点是否为根节点\n      var list = [];\n\n      var fn = function fn(source) {\n        source.forEach(function (el) {\n          list.push(el);\n          el.children && el.children.length > 0 ? fn(el.children) : '';\n        });\n      };\n\n      fn(data); // 获取树列表转为数组\n\n      return list;\n    },\n    sysClick: function sysClick(node, all) {\n      var _this = this;\n\n      // 授权树列表点击事件\n      if (node.children === null) {\n        (0, _axios.get)('/cpfunc/' + this.companyId + '/' + node.funcId + '/' + this.roleId, null).then(function (response) {\n          if (response.status === 0) {\n            var fd = response.data;\n\n            for (var i = 0; i < fd.length; i++) {\n              if (fd[i].roleFuncAuth === null) {\n                // 具体权限为空 传入默认值\n                if (!_this.clickList.hasOwnProperty(fd[i].id)) {\n                  fd[i].roleFuncAuth = JSON.parse(JSON.stringify(_this.defaultFuncAuth));\n                  fd[i].roleFuncAuth.cpFuncId = fd[i].id;\n                  fd[i].roleFuncAuth.cpFuncPid = fd[i].funcPid;\n                } else {\n                  fd[i].roleFuncAuth = _this.clickList[fd[i].id];\n                }\n              } else {\n                fd[i].roleFuncAuth.type = 1;\n                fd[i].roleFuncAuth.cpFuncPid = fd[i].funcPid;\n                fd[i].roleFuncAuth.rightSelect = !!fd[i].roleFuncAuth.rightSelect;\n                fd[i].roleFuncAuth.rightInsert = !!fd[i].roleFuncAuth.rightInsert;\n                fd[i].roleFuncAuth.rightDelete = !!fd[i].roleFuncAuth.rightDelete;\n                fd[i].roleFuncAuth.rightUpdate = !!fd[i].roleFuncAuth.rightUpdate;\n                fd[i].roleFuncAuth.rightAudit = !!fd[i].roleFuncAuth.rightAudit;\n                fd[i].roleFuncAuth.rightPrint = !!fd[i].roleFuncAuth.rightPrint;\n                fd[i].roleFuncAuth.rightExport = !!fd[i].roleFuncAuth.rightExport;\n              }\n\n              if (!_this.getList.hasOwnProperty(fd[i].id)) {\n                // 添加存储获取的功能列表\n                _this.getList[fd[i].id] = JSON.parse(JSON.stringify(fd[i].roleFuncAuth));\n              }\n            }\n\n            _this.functionData = fd;\n          }\n        });\n      } else {\n        this.functionData = [];\n      }\n    },\n    handleCheck: function handleCheck(data, parms) {\n      // table功能列表点击事件\n      var func = data.row.roleFuncAuth;\n      this.clickList[data.row.id] = func;\n    },\n    saveRole: function () {\n      var _saveRole = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var that;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // 保存角色\n                that = this;\n                this.$refs.addRoleForm.validate(function (valid) {\n                  if (valid) {\n                    var role = {\n                      cpid: _this2.companyId,\n                      showName: _this2.addRoleForm.name,\n                      roleFuncAuth: []\n                    };\n                    var c = that.$refs.sysTree.getCheckedNodes(false, true); // 功能树列表勾选项\n\n                    var checkData = []; // 存储树列表勾选项\n\n                    var checkListData = []; // 存储表格列表有勾选的行\n\n                    var listItem = Object.values(_this2.clickList);\n                    _this2.loading = true;\n\n                    if (that.addType === 0) {\n                      // 添加\n                      for (var check = 0; check < c.length; check++) {\n                        // 遍历树勾选节点\n                        checkData.push({\n                          // 添加树勾选项\n                          cpFuncId: c[check].id,\n                          rightSelect: 1\n                        });\n\n                        if (c[check].children === null && listItem.length > 0) {\n                          // 页面节点\n                          var has = listItem.filter(function (item) {\n                            // 匹配树勾选后对应的列表\n                            return item.cpFuncPid === c[check].funcId;\n                          });\n                          checkListData = checkListData.concat(has);\n                        }\n                      }\n\n                      checkListData = checkListData.filter(function (func) {\n                        // 筛选掉空的\n                        return func.rightAudit || func.rightDelete || func.rightExport || func.rightInsert || func.rightPrint || func.rightSelect || func.rightUpdate;\n                      });\n                      role.roleFuncAuth = checkData.concat(_this2.trueToOne(checkListData));\n                      console.log(role);\n                      (0, _axios.post)('/role/save', role).then(function (response) {\n                        _this2.loading = false;\n\n                        if (response.status === 0) {\n                          _this2.$message({\n                            message: '角色添加成功',\n                            type: 'success',\n                            duration: 3000\n                          });\n                        } else {\n                          _this2.$message({\n                            message: response.msg,\n                            type: 'warning',\n                            duration: 3000\n                          });\n                        }\n\n                        that.$emit('submitrole');\n                      });\n                    } else {\n                      // 修改\n                      var old = JSON.parse(JSON.stringify(that.defaultAuthList)); // 原有勾选项\n\n                      var add = [];\n\n                      for (var j = 0; j < c.length; j++) {\n                        if (c[j].roleFuncAuth !== null) {\n                          // 筛选出删除的node\n                          var delIndex = old.findIndex(function (item) {\n                            return item === c[j].roleFuncAuth.id;\n                          });\n\n                          if (delIndex >= 0) {\n                            old.splice(delIndex, 1);\n                          }\n                        } else {\n                          // 添加的node\n                          add.push({\n                            roleId: that.roleId,\n                            cpFuncId: c[j].id,\n                            rightSelect: 1\n                          });\n                        }\n\n                        if (c[j].children === null && listItem.length > 0) {\n                          // 页面节点\n                          var hasClick = listItem.filter(function (ft) {\n                            // 匹配树勾选后对应的列表\n                            return ft.cpFuncPid === c[j].funcId;\n                          });\n                          checkListData = checkListData.concat(hasClick);\n                        }\n                      }\n\n                      var addFunction = [];\n                      var updateFunction = [];\n                      var deleteFunction = [];\n\n                      for (var v = 0; v < checkListData.length; v++) {\n                        var f = checkListData[v];\n\n                        if (f.rightAudit || f.rightDelete || f.rightExport || f.rightInsert || f.rightPrint || f.rightSelect || f.rightUpdate) {\n                          if (f.type === 0) {\n                            // 类型为默认值则为添加\n                            addFunction.push(f);\n                          } else {\n                            if (f !== _this2.getList[f.cpFuncId]) {\n                              // 修改\n                              updateFunction.push(f);\n                            }\n                          }\n                        } else {\n                          if (_this2.getList[f.cpFuncId].type === 1) {\n                            // 删除\n                            deleteFunction.push(f.id);\n                          }\n                        }\n                      }\n\n                      (0, _axios.post)('/role/updateName', {\n                        id: _this2.roleId,\n                        showName: _this2.addRoleForm.name\n                      }).then(function (nameRe) {\n                        // 修改角色名称\n                        if (nameRe.status === 0) {\n                          (0, _axios.byDelete)('/rolefunc', old.concat(deleteFunction)).then(function (response) {\n                            if (response.status === 0) {\n                              (0, _axios.put)('/rolefunc', _this2.trueToOne(updateFunction)).then(function (updateRe) {\n                                if (updateRe.status === 0) {\n                                  add = that.trueToOne(add);\n                                  (0, _axios.post)('/rolefunc', add.concat(_this2.trueToOne(addFunction))).then(function (addRe) {\n                                    if (addRe.status === 0) {\n                                      _this2.loading = false;\n\n                                      _this2.$message({\n                                        message: '角色修改成功',\n                                        type: 'success',\n                                        duration: 3000\n                                      });\n\n                                      that.$emit('submitrole');\n                                    } else {\n                                      _this2.loading = false;\n\n                                      _this2.$message({\n                                        message: response.msg,\n                                        type: 'warning',\n                                        duration: 3000\n                                      });\n\n                                      that.$emit('submitrole');\n                                    }\n                                  });\n                                } else {\n                                  _this2.loading = false;\n\n                                  _this2.$message({\n                                    message: response.msg,\n                                    type: 'warning',\n                                    duration: 3000\n                                  });\n\n                                  that.$emit('submitrole');\n                                }\n                              });\n                            } else {\n                              _this2.loading = false;\n\n                              _this2.$message({\n                                message: response.msg,\n                                type: 'warning',\n                                duration: 3000\n                              });\n\n                              that.$emit('submitrole');\n                            }\n                          });\n                        } else {\n                          _this2.loading = false;\n\n                          _this2.$message({\n                            message: nameRe.msg,\n                            type: 'warning',\n                            duration: 3000\n                          });\n                        }\n                      });\n                    }\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function saveRole() {\n        return _saveRole.apply(this, arguments);\n      }\n\n      return saveRole;\n    }(),\n    cancelRole: function cancelRole() {\n      this.$emit('cancelrole');\n    },\n    trueToOne: function trueToOne(list) {\n      // true false 转换为1  0 后台需要数字\n      for (var cl = 0; cl < list.length; cl++) {\n        list[cl].rightSelect = list[cl].rightSelect * 1;\n        list[cl].rightInsert = list[cl].rightInsert * 1;\n        list[cl].rightDelete = list[cl].rightDelete * 1;\n        list[cl].rightUpdate = list[cl].rightUpdate * 1;\n        list[cl].rightAudit = list[cl].rightAudit * 1;\n        list[cl].rightPrint = list[cl].rightPrint * 1;\n        list[cl].rightExport = list[cl].rightExport * 1;\n      }\n\n      return list;\n    }\n  }\n};\nexports.default = _default;",null]}