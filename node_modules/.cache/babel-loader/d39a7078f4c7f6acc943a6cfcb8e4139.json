{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\yingzhi\\yingji\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\yingzhi\\yingji\\Home.vue","mtime":1576638136753},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { setTimeout } from 'timers'\nvar _default = {\n  name: 'Home',\n  components: {},\n  data: function data() {\n    return {\n      map: null,\n      ce: '监控',\n      marker: [],\n      bjxx: '风平浪静',\n      heatmap: null,\n      trafficLayer: null\n    };\n  },\n  computed: {},\n  watch: {},\n  mounted: function mounted() {\n    this.log();\n    this.map = new AMap.Map('container', {\n      resizeEnable: true,\n      // 是否监控地图容器尺寸变化\n      zoom: 11,\n      // 初始化地图层级\n      center: [116.397428, 39.90923] // 初始化地图中心点\n\n    });\n    this.gaojing();\n    this.relichu();\n    this.qingmark(); // this.$axios(\n    //     url: \"http://192.168.1.121:8081/getSysDispatchType\",\n    //     method: \"get\",\n    // }).then(response => {\n    //   console.log(response)\n    // })\n  },\n  methods: {\n    // 点击切换坐标点\n    jing1: function jing1(dat) {\n      this.ce = dat;\n      this.qingmark();\n    },\n    jing2: function jing2(dat) {\n      this.map.remove(this.marker);\n      this.map.setFitView(); // const the = this\n\n      this.marker = [];\n      this.ce = dat; // this.$axios({\n      //   url: 'http://192.168.1.121:8081/notifyDate/getPatrolNotify',\n      //   method: 'get',\n      //   headers: {\n      //     'Content-Type': 'application/x-www-form-urlencoded'\n      //   }\n      // }).then(response => {\n      //   this.marker.push(\n      //     new AMap.Marker({\n      //       icon: 'https://webapi.amap.com/theme/v1.3/markers/n/mark_b.png',\n      //       position: [\n      //         response.data.data.Longitude / 360000 + 0.006216,\n      //         response.data.data.Latitude / 360000 + 0.001256\n      //       ]\n      //     })\n      //   )\n      //   // this.marker[i].DeviceName\n      //   this.marker[0].setTitle(response.data.data.DeviceName)\n      //   this.marker[0].on('click', function() {\n      //     const da = response.data.data.DeviceID * 1 + 1\n      //     the.$emit('fatherMethod', '00' + da)\n      //     console.log(response.data.data.DeviceID)\n      //   })\n      //   this.map.add(this.marker)\n      //   this.map.setFitView()\n      // })\n    },\n    log: function log() {// var qs = require('querystring')\n      // const data = { username: 'admin', password: '111111' }\n      // this.$axios({\n      //   url: \"http://192.168.1.121:8081/user/login\",\n      //   method: \"post\",\n      //   data: qs.stringify(data),\n      //   headers: {\n      //     \"Content-Type\": \"application/x-www-form-urlencoded\"\n      //   }\n      // }).then(response => {});\n    },\n    qingmark: function qingmark() {\n      this.heatmap.hide();\n      this.trafficLayer.hide(); // const the = this\n      // const qs = require('querystring')\n      // const data = {\n      //   pointtype: this.ce\n      // }\n      // this.$axios({\n      //   url: 'http://192.168.1.121:8081/dispatch/getDispatchByPointtype',\n      //   method: 'post',\n      //   data: qs.stringify(data),\n      //   headers: {\n      //     'Content-Type': 'application/x-www-form-urlencoded'\n      //   }\n      // }).then(response => {\n      //   // this.tiao('map')\n      //   this.map.remove(this.marker)\n      //   this.map.setFitView()\n      //   this.marker = []\n      //   for (let i = 0; i < response.data.data.length; i++) {\n      //     // if(response.data.data[i].latitude!=''&&response.data.data[i].longitude!=''&&response.data.data[i].pointname!=''){\n      //     if (response.data.data[i].carema) {\n      //       the.marker.push(\n      //         new AMap.Marker({\n      //           icon: 'https://webapi.amap.com/theme/v1.3/markers/n/mark_b.png',\n      //           position: [\n      //             response.data.data[i].latitude,\n      //             response.data.data[i].longitude\n      //           ],\n      //           ipd: response.data.data[i].carema\n      //         })\n      //       )\n      //       the.marker[i].setTitle(response.data.data[i].pointname)\n      //       the.marker[i].on('click', function() {\n      //         the.$emit('fatherMethod', response.data.data[i].carema)\n      //       })\n      //     } else if (response.data.data[i].pointtype) {\n      //       the.marker.push(\n      //         new AMap.Marker({\n      //           icon: 'https://webapi.amap.com/theme/v1.3/markers/n/mark_b.png',\n      //           position: [\n      //             response.data.data[i].latitude,\n      //             response.data.data[i].longitude\n      //           ]\n      //         })\n      //       )\n      //       the.marker[i].setTitle('当前占用坑位' + i)\n      //     } else {\n      //       the.marker.push(\n      //         new AMap.Marker({\n      //           icon: 'https://webapi.amap.com/theme/v1.3/markers/n/mark_b.png',\n      //           position: [\n      //             response.data.data[i].latitude,\n      //             response.data.data[i].longitude\n      //           ]\n      //         })\n      //       )\n      //       the.marker[i].setTitle(response.data.data[i].pointname)\n      //     }\n      //     // }\n      //   }\n      //   this.map.add(this.marker)\n      //   this.map.setFitView()\n      // })\n    },\n    gaojing: function gaojing() {// const the = this\n      // http://192.168.1.29:8081/notifyDate/getVigilanceNotify\n      // this.$axios({\n      //   url: 'http://192.168.1.121:8081/notifyDate/getVigilanceNotify',\n      //   method: 'get',\n      //   headers: {\n      //     'Content-Type': 'application/x-www-form-urlencoded'\n      //   }\n      // }).then(response => {\n      //   this.bjxx = response.data.data\n      //   setTimeout(function() {\n      //     the.$refs.bao.scrollTop = the.$refs.bao.scrollHeight\n      //   }, 0)\n      // })\n    },\n    // 热力图\n    reli: function reli(da) {\n      this.ce = da;\n      this.map.remove(this.marker);\n      this.map.setFitView();\n      this.heatmap.show();\n      this.trafficLayer.hide();\n    },\n    lukuang: function lukuang(da) {\n      this.ce = da;\n      this.map.remove(this.marker);\n      this.map.setFitView();\n      this.trafficLayer.show();\n      this.heatmap.hide();\n    },\n    relichu: function relichu() {\n      this.trafficLayer = new AMap.TileLayer.Traffic({\n        zIndex: 10\n      });\n      this.trafficLayer.setMap(this.map);\n      var the = this;\n      the.map.plugin(['AMap.Heatmap'], function () {\n        the.heatmap = new AMap.Heatmap(the.map, {\n          radius: 35,\n          // 给定半径\n          opacity: [0, 0.8]\n        });\n        the.heatmap.setDataSet({\n          data: [{\n            'lng': 100.244161,\n            'lat': 25.835082,\n            'count': 8\n          }, {\n            'lng': 100.236945,\n            'lat': 25.831451,\n            'count': 5\n          }, {\n            'lng': 100.236973,\n            'lat': 25.831456,\n            'count': 10\n          }, {\n            'lng': 100.236945,\n            'lat': 25.831467,\n            'count': 80\n          }, {\n            'lng': 100.232345,\n            'lat': 25.831451,\n            'count': 5\n          }, {\n            'lng': 100.276973,\n            'lat': 25.831366,\n            'count': 10\n          }, {\n            'lng': 100.237845,\n            'lat': 25.832347,\n            'count': 80\n          }],\n          max: 100\n        });\n      });\n    }\n  }\n};\nexports.default = _default;",null]}