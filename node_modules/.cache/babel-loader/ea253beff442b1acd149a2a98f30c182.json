{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\thread-loader\\dist\\cjs.js!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\structure\\components\\TreeTransfer.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\structure\\components\\TreeTransfer.vue","mtime":1577252313190},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\\\u529E\\u516C\\\\projectwc\\\\\\u524D\\u7AEF\\\\ManageSys\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"D:\\\\\\u529E\\u516C\\\\projectwc\\\\\\u524D\\u7AEF\\\\ManageSys\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread2\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { get, post, byDelete } from '@/api/axios';\nimport { mapGetters } from 'vuex';\nexport default {\n  props: {\n    selectCompanyId: {\n      type: Number,\n      default: 0\n    },\n    btnStatus: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      authLoading: '暂无数据',\n      setLoading: '暂无数据',\n      sysRootNode: [],\n      sysData: [],\n      setKey: 'id',\n      setPKey: 'pid',\n      setData: [],\n      setDefault: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['companyId'])),\n  watch: {\n    selectCompanyId: {\n      handler: function handler(newVal, oldVal) {\n        this.getCompanySys(newVal);\n      }\n    }\n  },\n  created: function created() {\n    this.getAllSys();\n  },\n  methods: {\n    getAllSys: function getAllSys() {\n      var _this = this;\n\n      this.authLoading = '数据加载中...';\n\n      if (this.companyId === 12) {\n        // 银科环企成员获取总的功能树\n        get('/sysfunc/tree', null).then(function (response) {\n          if (response.status === 0) {\n            _this.sysData = response.data;\n            _this.sysRootNode = JSON.parse(JSON.stringify(response.data));\n            _this.sysRootNode[0].children = [];\n          }\n\n          _this.authLoading = '暂无数据';\n        });\n      } else {\n        // 客户公司获取授权后的功能树\n        this.setKey = 'funcId';\n        this.setPKey = 'funcPid';\n        get('/cpfunc/tree/' + this.companyId, null).then(function (response) {\n          if (response.status === 0) {\n            _this.sysData = response.data;\n            _this.sysRootNode = JSON.parse(JSON.stringify(response.data));\n            _this.sysRootNode[0].children = [];\n          }\n\n          _this.authLoading = '暂无数据';\n        });\n        this.getCompanySys(this.selectCompanyId);\n      }\n    },\n    getCompanySys: function getCompanySys(companyId) {\n      var _this2 = this;\n\n      // 已授权的功能列表\n      if (this.selectCompanyId > 0) {\n        this.setLoading = '数据加载中...';\n        get('/cpfunc/tree/' + this.selectCompanyId, null).then(function (response) {\n          if (response.status === 0) {\n            _this2.setData = response.data;\n\n            if (response.data.length > 0) {\n              _this2.setDefault = _this2.getTreeNode(response.data);\n            } else {\n              _this2.setDefault = [];\n            }\n          }\n\n          _this2.setLoading = '暂无数据';\n        });\n      }\n    },\n    addAuth: function addAuth() {\n      var _this3 = this;\n\n      // 添加授权功能\n      if (this.btnStatus === 0) {\n        return;\n      }\n\n      var that = this;\n      var c = this.$refs.sysTree.getCheckedNodes(false, true);\n\n      if (c.length <= 1 || c === null) {\n        return;\n      } else {\n        that.setData = JSON.parse(JSON.stringify(this.sysRootNode));\n        that.$nextTick(function () {\n          var d = JSON.parse(JSON.stringify(c));\n          var node;\n\n          for (var i = 1; i < d.length; i++) {\n            node = d[i];\n            node.children = [];\n            that.$refs.setTree.append(node, node[_this3.setPKey]);\n          }\n        });\n      }\n    },\n    removeAuth: function removeAuth() {\n      // 删除授权功能\n      if (this.btnStatus === 0) {\n        return;\n      }\n\n      var that = this;\n      var sc = that.$refs.setTree.getCheckedKeys();\n\n      for (var r = 0; r < sc.length; r++) {\n        that.$refs.setTree.remove(sc[r]);\n        that.$refs.sysTree.setChecked(sc[r], false);\n      }\n    },\n    saveAuth: function () {\n      var _saveAuth = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this4 = this;\n\n        var set, authList, old, auth, j, delIndex, delRet, i, index;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // 保存授权功能\n                set = this.$refs.setTree.data;\n\n                if (!(set === null)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                if (!(this.setDefault.length > 0)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 5;\n                return this.deleteAuth(this.setDefault);\n\n              case 5:\n                if (!_context.sent) {\n                  _context.next = 10;\n                  break;\n                }\n\n                this.$message({\n                  message: '授权保存成功',\n                  type: 'success',\n                  duration: 3000\n                });\n                this.setDefault = [];\n                _context.next = 11;\n                break;\n\n              case 10:\n                this.$message({\n                  message: '授权保存失败',\n                  type: 'warning',\n                  duration: 3000\n                });\n\n              case 11:\n                _context.next = 14;\n                break;\n\n              case 13:\n                this.$message({\n                  message: '授权保存成功',\n                  type: 'success',\n                  duration: 3000\n                });\n\n              case 14:\n                _context.next = 53;\n                break;\n\n              case 16:\n                authList = this.getTreeNode(set);\n\n                if (!(this.setDefault.length > 0)) {\n                  _context.next = 44;\n                  break;\n                }\n\n                old = JSON.parse(JSON.stringify(this.setDefault));\n                auth = JSON.parse(JSON.stringify(authList));\n\n                for (j = 0; j < authList.length; j++) {\n                  // 删除\n                  delIndex = old.findIndex(function (item) {\n                    return item.name === authList[j].name;\n                  });\n\n                  if (delIndex >= 0) {\n                    old.splice(delIndex, 1);\n                  }\n                }\n\n                delRet = true;\n\n                if (!(old.length > 0)) {\n                  _context.next = 26;\n                  break;\n                }\n\n                _context.next = 25;\n                return this.deleteAuth(old);\n\n              case 25:\n                delRet = _context.sent;\n\n              case 26:\n                if (!delRet) {\n                  _context.next = 41;\n                  break;\n                }\n\n                for (i = 0; i < this.setDefault.length; i++) {\n                  // 新增\n                  index = auth.findIndex(function (item) {\n                    return item.name === _this4.setDefault[i].name;\n                  });\n\n                  if (index >= 0) {\n                    auth.splice(index, 1);\n                  }\n                }\n\n                if (!(auth.length > 0)) {\n                  _context.next = 38;\n                  break;\n                }\n\n                _context.next = 31;\n                return this.postAuth(auth);\n\n              case 31:\n                if (!_context.sent) {\n                  _context.next = 35;\n                  break;\n                }\n\n                this.$message({\n                  message: '授权保存成功',\n                  type: 'success',\n                  duration: 3000\n                });\n                _context.next = 36;\n                break;\n\n              case 35:\n                this.$message({\n                  message: '授权保存失败',\n                  type: 'warning',\n                  duration: 3000\n                });\n\n              case 36:\n                _context.next = 39;\n                break;\n\n              case 38:\n                this.$message({\n                  message: '授权保存成功',\n                  type: 'success',\n                  duration: 3000\n                });\n\n              case 39:\n                _context.next = 42;\n                break;\n\n              case 41:\n                this.$message({\n                  message: '授权保存失败',\n                  type: 'warning',\n                  duration: 3000\n                });\n\n              case 42:\n                _context.next = 51;\n                break;\n\n              case 44:\n                _context.next = 46;\n                return this.postAuth(authList);\n\n              case 46:\n                if (!_context.sent) {\n                  _context.next = 50;\n                  break;\n                }\n\n                this.$message({\n                  message: '授权保存成功',\n                  type: 'success',\n                  duration: 3000\n                });\n                _context.next = 51;\n                break;\n\n              case 50:\n                this.$message({\n                  message: '授权保存失败',\n                  type: 'warning',\n                  duration: 3000\n                });\n\n              case 51:\n                this.getCompanySys(this.selectCompanyId);\n                this.$emit('authend');\n\n              case 53:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function saveAuth() {\n        return _saveAuth.apply(this, arguments);\n      }\n\n      return saveAuth;\n    }(),\n    getTreeNode: function getTreeNode(data) {\n      // 判断节点是否有子节点\n      var list = [];\n\n      var fn = function fn(source) {\n        source.forEach(function (el) {\n          list.push(el);\n          el.children && el.children.length > 0 ? fn(el.children) : '';\n        });\n      };\n\n      fn(data); // 获取树列表转为数组\n\n      return list;\n    },\n    deleteAuth: function deleteAuth(list) {\n      // 清空授权\n      var delList = [];\n      list.forEach(function (item) {\n        delList.push(item.id);\n      });\n      return new Promise(function (resolve, reject) {\n        byDelete('/cpfunc', delList).then(function (response) {\n          resolve(response.status === 0);\n        }).catch(function () {\n          reject(false);\n        });\n      });\n    },\n    postAuth: function postAuth(list) {\n      var _this5 = this;\n\n      // 新增授权\n      if (this.setPKey === 'funcPid') {\n        for (var c = 0; c < list.length; c++) {\n          list[c].id = list[c].funcId;\n          list[c].pid = list[c].funcPid;\n        }\n      }\n\n      return new Promise(function (resolve, reject) {\n        post('/cpfunc/' + _this5.selectCompanyId, list).then(function (response) {\n          resolve(response.status === 0);\n        }).catch(function () {\n          reject(false);\n        });\n      });\n    }\n  }\n};",null]}