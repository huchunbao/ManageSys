{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\thread-loader\\dist\\cjs.js!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\grmessage\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\grmessage\\index.vue","mtime":1577252313561},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport _objectSpread from \"D:\\\\\\u529E\\u516C\\\\projectwc\\\\\\u524D\\u7AEF\\\\ManageSys\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { validMobile } from '@/utils/validate';\nimport Cropper from '@/components/Cropper';\nimport { updatePWByOld } from '@/api/user';\nexport default {\n  components: {\n    Cropper: Cropper\n  },\n  data: function data() {\n    var _this = this;\n\n    var validateMobile = function validateMobile(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入新手机号码'));\n      } else if (!validMobile(value)) {\n        callback(new Error('手机号输入不正确!'));\n      } else if (value === _this.mobile) {\n        callback(new Error('新手机号不能是原手机号!'));\n      } else {\n        callback();\n      }\n    };\n\n    var validateOldPassword = function validateOldPassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入原密码'));\n      } else {\n        callback();\n      }\n    };\n\n    var validateNewPassword = function validateNewPassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入新密码'));\n      } else {\n        callback();\n      }\n    };\n\n    var validateNewPasswordAgain = function validateNewPasswordAgain(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入确认新密码'));\n      } else if (value !== _this.passwordForm.newPassword) {\n        callback(new Error('两次密码输入不一致'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      defaultUrl: '',\n      showCropper: false,\n      showMobile: false,\n      mobileForm: {\n        newMobile: ''\n      },\n      mobileRules: {\n        newMobile: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateMobile\n        }]\n      },\n      showPassword: false,\n      passwordForm: {\n        oldPassword: '',\n        newPassword: '',\n        newPasswordAgain: ''\n      },\n      passwordRules: {\n        oldPassword: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateOldPassword\n        }, {\n          min: 6,\n          message: '密码必须大于6位',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateNewPassword\n        }, {\n          min: 6,\n          message: '密码必须大于6位',\n          trigger: 'blur'\n        }],\n        newPasswordAgain: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateNewPasswordAgain\n        }, {\n          min: 6,\n          message: '密码必须大于6位',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['avatar', 'uid', 'ucode', 'name', 'mobile', 'post', 'section', 'company'])),\n  created: function created() {\n    this.defaultUrl = this.avatar; // 头像\n  },\n  methods: {\n    updateAvatar: function updateAvatar() {\n      this.showCropper = true;\n    },\n    // 父组件调用子组件裁剪方法\n    toCropper: function toCropper() {\n      this.$refs.cropper.submit();\n      this.cancelCropper();\n    },\n    cancelCropper: function cancelCropper() {\n      this.showCropper = false;\n      this.$refs.cropper.url = this.avatar;\n      this.$refs.cropper.cropper.replace(this.avatar);\n      this.$refs.cropper.$refs.imageFile.value = null;\n    },\n    toMobile: function toMobile() {\n      var _this2 = this;\n\n      // 修改手机号\n      this.$refs.mobileForm.validate(function (valid) {\n        if (valid) {\n          _this2.$store.dispatch('user/updateMobile', {\n            uid: _this2.uid,\n            mobile: {\n              phone: _this2.mobileForm.newMobile\n            }\n          }).then(function () {\n            _this2.$message({\n              message: '手机号修改成功，登录账号为新手机号',\n              type: 'success',\n              duration: 2000\n            });\n\n            _this2.resetMobile();\n          }).catch(function (e) {\n            _this2.$message({\n              message: '手机号修改失败，请稍后重试',\n              type: 'warning',\n              duration: 2000\n            });\n          });\n        } else {\n          return;\n        }\n      });\n    },\n    resetMobile: function resetMobile() {\n      // 取消修改手机号\n      this.showMobile = false;\n      this.$refs.mobileForm.resetFields();\n    },\n    toPassword: function toPassword() {\n      var _this3 = this;\n\n      // 修改密码\n      this.$refs.passwordForm.validate(function (valid) {\n        if (valid) {\n          new Promise(function (resolve, reject) {\n            updatePWByOld(_this3.uid, {\n              newpwd: _this3.passwordForm.newPasswordAgain,\n              oldpwd: _this3.passwordForm.oldPassword\n            }).then(function (response) {\n              if (response.msg === 'SUCCESS') {\n                _this3.$message({\n                  message: '密码修改成功',\n                  type: 'success',\n                  duration: 3000\n                });\n\n                _this3.resetPassword();\n              } else {\n                _this3.$message({\n                  message: response.msg,\n                  type: 'warning',\n                  duration: 3000\n                });\n\n                return;\n              }\n\n              resolve();\n            }).catch(function (error) {\n              reject(error);\n            });\n          }).then(function (res) {});\n        } else {\n          return;\n        }\n      });\n    },\n    resetPassword: function resetPassword() {\n      // 取消密码修改\n      this.showPassword = false;\n      this.$refs.passwordForm.resetFields();\n    }\n  }\n};",null]}