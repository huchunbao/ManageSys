{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\thread-loader\\dist\\cjs.js!D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js!D:\\办公\\projectwc\\前端\\ManageSys\\src\\permission.js","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\permission.js","mtime":1576638138406},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"D:\\\\\\u529E\\u516C\\\\projectwc\\\\\\u524D\\u7AEF\\\\ManageSys\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread2\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\\\u529E\\u516C\\\\projectwc\\\\\\u524D\\u7AEF\\\\ManageSys\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport { Message } from 'element-ui';\nimport NProgress from 'nprogress'; // progress bar\n\nimport 'nprogress/nprogress.css'; // progress bar style\n\nimport { getToken } from '@/utils/auth'; // get token from cookie\n\nimport getPageTitle from '@/utils/get-page-title';\nNProgress.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\nvar whiteList = ['/login', '/auth-redirect', '/retrieve', '/authorize', '/home', '/baogao', '/yingzhi']; // no redirect whitelist\n\nrouter.beforeEach(\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(to, from, next) {\n    var hasToken, hasRoles, _ref2, roles, func, cpid, accessRoutes;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // start progress bar\n            NProgress.start();\n\n            if (!(to.name && to.meta.meta)) {\n              _context.next = 5;\n              break;\n            }\n\n            if (!(store.getters.topMenuIndex !== to.meta.meta.index)) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 5;\n            return store.dispatch('app/setTopMenuIndex', to.meta.meta.index);\n\n          case 5:\n            // set page title\n            document.title = getPageTitle(to.meta.title); // determine whether the user has logged in\n\n            hasToken = getToken();\n\n            if (!hasToken) {\n              _context.next = 41;\n              break;\n            }\n\n            if (!(to.path === '/login')) {\n              _context.next = 13;\n              break;\n            }\n\n            // if is logged in, redirect to the home page\n            next({\n              path: '/'\n            });\n            NProgress.done();\n            _context.next = 39;\n            break;\n\n          case 13:\n            // determine whether the user has obtained his permission roles through getInfo\n            hasRoles = store.getters.roles && store.getters.roles.length > 0;\n\n            if (!hasRoles) {\n              _context.next = 18;\n              break;\n            }\n\n            next();\n            _context.next = 39;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.next = 21;\n            return store.dispatch('user/getInfo');\n\n          case 21:\n            _ref2 = _context.sent;\n            roles = _ref2.roles;\n            func = _ref2.func;\n            cpid = _ref2.cpid;\n            _context.next = 27;\n            return store.dispatch('permission/generateRoutes', {\n              roles: roles,\n              func: func,\n              cpid: cpid\n            });\n\n          case 27:\n            accessRoutes = _context.sent;\n            // dynamically add accessible routes\n            router.addRoutes(accessRoutes); // hack method to ensure that addRoutes is complete\n            // set the replace: true, so the navigation will not leave a history record\n\n            next(_objectSpread({}, to, {\n              replace: true\n            }));\n            _context.next = 39;\n            break;\n\n          case 32:\n            _context.prev = 32;\n            _context.t0 = _context[\"catch\"](18);\n            _context.next = 36;\n            return store.dispatch('user/resetToken');\n\n          case 36:\n            Message.error(_context.t0 || 'Has Error');\n            next(\"/login?redirect=\".concat(to.path));\n            NProgress.done();\n\n          case 39:\n            _context.next = 42;\n            break;\n\n          case 41:\n            /* has no token*/\n            if (whiteList.indexOf(to.path) !== -1) {\n              // in the free login whitelist, go directly\n              next();\n            } else {\n              // other pages that do not have permission to access are redirected to the login page.\n              next(\"/login?redirect=\".concat(to.path));\n              NProgress.done();\n            }\n\n          case 42:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[18, 32]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.afterEach(function () {\n  // finish progress bar\n  NProgress.done();\n});",null]}