{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\yingzhi\\jilu.vue?vue&type=script&scoped=true&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\yingzhi\\jilu.vue","mtime":1576638136815},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport daoy from './daoyou.vue'\n// import { constants } from \"crypto\";\nexport default {\n  name: 'About',\n  components: {\n    daoy\n  },\n  data() {\n    return {\n      dh: false,\n      pickerOptions2: {\n        shortcuts: [\n          {\n            text: '最近一周',\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n              picker.$emit('pick', [start, end])\n            }\n          },\n          {\n            text: '最近一个月',\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\n              picker.$emit('pick', [start, end])\n            }\n          },\n          {\n            text: '最近三个月',\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\n              picker.$emit('pick', [start, end])\n            }\n          }\n        ]\n      },\n      value6: '',\n      value6End: '',\n      pickerOptions: {\n        disabledDate: date => {\n          return date >= Date.now()\n        }\n      },\n      pickerOptionsEnd: {\n        disabledDate: date => {\n          return date >= Date.now()\n        }\n      },\n      value7: '',\n      all: 1, // 总页数\n      cur: 1\n    }\n  },\n  computed: {\n    indexs() {\n      var left = 1\n      var right = this.all\n      var ar = []\n      if (this.all >= 5) {\n        if (this.cur > 3 && this.cur < this.all - 2) {\n          left = this.cur - 2\n          right = this.cur + 2\n        } else {\n          if (this.cur <= 3) {\n            left = 1\n            right = 5\n          } else {\n            right = this.all\n            left = this.all - 4\n          }\n        }\n        while (left <= right) {\n          ar.push(left)\n          left++\n        }\n      } else {\n        left = 1\n        right = this.all\n        while (left <= right) {\n          ar.push(left)\n          left++\n        }\n      }\n      return ar\n    }\n  },\n  watch: {\n    value6(val) {\n      this.pickerOptionsEnd = {\n        disabledDate: date => {\n          var begin = new Date(val).getTime()\n          var days = 60 * 24 * 60 * 60 * 1000\n          var endDays = begin + days\n          return (\n            date < begin ||\n            date >= (endDays > Date.now() ? Date.now() : endDays)\n          )\n        }\n      }\n    },\n    value6End(val) {\n      this.pickerOptions = {\n        disabledDate: date => {\n          var end = new Date(val).getTime()\n          var days = 60 * 24 * 60 * 60 * 1000\n          var beginDays = end - days\n          return date > end || date <= beginDays\n        }\n      }\n    }\n  },\n  mounted() {\n    // var qs = require('querystring')\n    // let data = { username: 'admin', password: '111111' }\n  },\n  methods: {\n    dhf() {\n      this.dh = !this.dh\n    },\n    handleSizeChange(val) {\n      console.log(`每页 ${val} 条`)\n    },\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`)\n    },\n\n    tiao(i) {\n      this.$router.push({\n        path: i\n      })\n    }\n  }\n}\n",null]}