{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\map\\transportline.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\map\\transportline.vue","mtime":1577670779935},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VueAMap from 'vue-amap'\nimport { get, post } from '@/api/axios'\nvar amapManager = new VueAMap.AMapManager()\nexport default {\n  name: 'Map',\n  data() {\n    return {\n      divtab: false,\n      linecolor: '#e79f3c',\n      linecolor2: '#7f85f5',\n      linetab: '1',\n      tank: '',\n      currentRow: '',\n      name: '',\n      bei: '',\n      zoom: 16,\n      center: [116.336496, 39.942178],\n      mapStyle1: 'amap://styles/whitesmoke',\n      amapManager,\n      events: {},\n      overlayGroups: [],\n      data: [], // table 列表数据集合\n      rowindex: '',\n      dataid: 0,\n      options: [\n        {\n          value: '1',\n          label: '小火车'\n        },\n        {\n          value: '2',\n          label: '缆车'\n        },\n        {\n          value: '3',\n          label: '大巴'\n        },\n        {\n          value: '4',\n          label: '游船'\n        }\n      ],\n      value: '',\n      options2: [\n        {\n          value: '1',\n          label: '单兵'\n        },\n        {\n          value: '2',\n          label: '对讲机'\n        }\n      ],\n      value2: '',\n      line: '',\n      markers: [],\n      shijian: '',\n      shijian2: '',\n      shijian3: ''\n    }\n  },\n  computed: {\n    isopen: function() {\n      return (this.value && this.name && this.value2 && this.data)\n    }\n  },\n  watch: {\n    data() {\n    },\n    divtab() {\n      if (!this.divtab) {\n        this.data = []\n        this.name = ''\n        this.bei = ''\n        this.value = ''\n        this.value2 = ''\n        this.shijian = ''\n        this.shijian2 = ''\n        this.shijian3 = ''\n        this.addmarker()\n      }\n    }\n  },\n  created() {\n    this.addfun()\n    this.shebei()\n    this.shua()\n  },\n  methods: {\n    vehiclesType(data) {\n      for (var i = 0; i < this.options.length; i++) {\n        if (data === this.options[i].value) {\n          return this.options[i].label\n        }\n      }\n    },\n    handleCurrentChange(val) {\n      this.currentRow = val\n      this.linetab = val.id\n    },\n    shebei() {\n      get('/camara/getEqType?', { cpid: this.$store.state.user.companyId, system_id: 2 }).then(res => {\n        console.log(res)\n        this.options2 = res\n      })\n    },\n    shua() {\n      get('/mngCircuitInfo/getmngcircuitinfobytype', { cpid: this.$store.state.user.companyId, typeid: 2 }).then(res => {\n        console.log(res)\n        var data = res.data\n        this.markers = []\n        for (var i = 0; i < data.length; i++) {\n          var path = []\n          for (var y = 0; y < data[i].circuitpointlist.length; y++) {\n            path.push([data[i].circuitpointlist[y].circuitPointLon, data[i].circuitpointlist[y].circuitPointLat])\n          }\n          this.markers.push({\n            id: data[i].id,\n            position: [data[i].circuitpointlist[data[i].circuitpointlist.length - 1].circuitPointLon, data[i].circuitpointlist[data[i].circuitpointlist.length - 1].circuitPointLat],\n            label: {\n              content1: data[i].circuitName,\n              linetype: data[i].circuitType,\n              remark: data[i].remark,\n              vehiclesType: data[i].vehiclesType,\n              vehiclesType2: this.vehiclesType(data[i].vehiclesType + ''),\n              equimentId: data[i].equimentId + '',\n              shijian: data[i].firstBusTime,\n              shijian2: data[i].lastBusTime,\n              shijian3: data[i].busIntervalTime\n            },\n            path: path,\n            fanglist: data[i].circuitpointlist\n          })\n        }\n        console.log(this.markers)\n      })\n    },\n    linecontent(index, marker) {\n      if (index + 1 === marker.path.length) {\n        return '<div style=\"height: 20px; width: 20px;color: #fff; line-height: 20px; border-radius: 20px; font-size: 12px; text-align: center; background-color: #fd3d10;margin-left:1px; margin-top: 21px;\">终<div>'\n      } else if (index === 0) {\n        return '<div style=\"height: 20px; width: 20px;color: #fff; line-height: 20px; border-radius: 20px; font-size: 12px; text-align: center; background-color: #07a803;margin-left:1px; margin-top: 21px;\">起<div>'\n      } else {\n        return '<div style=\"height: 15px; width: 15px; border: 1.5px solid  #7f85f5; border-radius: 15px; background-color: rgba(255,255,255, 1);margin-left:3px; margin-top: 23px;\"></div>'\n      }\n    },\n    bian(obj) {\n      console.log(obj)\n      this.divtab = !this.divtab\n      this.linetab = obj.row.id\n      this.name = obj.row.label.content1\n      this.bei = obj.row.label.remark\n      this.value = obj.row.label.vehiclesType + ''\n      this.value2 = obj.row.label.equimentId\n      this.shijian = obj.row.label.shijian\n      this.shijian2 = obj.row.label.shijian2\n      this.shijian3 = obj.row.label.shijian3\n      this.data = []\n      for (var i = 0; i < obj.row.fanglist.length; i++) {\n        this.data.push({\n          id: obj.row.fanglist[i].id,\n          name: obj.row.fanglist[i].pointName,\n          indt: [obj.row.fanglist[i].circuitPointLon, obj.row.fanglist[i].circuitPointLat]\n        })\n      }\n    },\n    shan(obj) {\n      console.log(obj.row.id)\n      get('/mngCircuitInfo/delmngcircuitinfobyid', { id: obj.row.id }).then(res => {\n        console.log(res)\n        this.shua()\n      })\n    },\n    ti() {\n      if (this.name !== '' && this.value !== '' && this.value2 !== '') {\n        var markers = []\n        for (var i = 0; i < this.data.length; i++) {\n          markers.push({\n            pointName: this.data[i].name,\n            circuitName: this.name,\n            orderNumber: i + 1,\n            circuitPointLon: this.data[i].indt[0],\n            circuitPointLat: this.data[i].indt[1]\n          })\n          if (this.data[i].id) {\n            markers[i].id = this.data[i].id\n          }\n        }\n        var data = {\n          cpid: this.$store.state.user.companyId,\n          circuitTypeId: 2,\n          circuitType: '车船',\n          vehiclesType: this.value,\n          circuitName: this.name,\n          remark: this.bei,\n          circuitpointlist: markers,\n          equimentId: this.value2 * 1\n        }\n        if (this.value * 1 === 3) {\n          data.firstBusTime = this.shijian.substring(0, 5) + ':00'\n          data.lastBusTime = this.shijian2.substring(0, 5) + ':00'\n          data.busIntervalTime = this.shijian3\n        }\n        if (this.linetab !== '') {\n          data.id = this.linetab\n        }\n        post('/mngCircuitInfo/savemngcircuitinfo', data).then(res => {\n          post('/camara/updpoint', { pid: data.equimentId * 1, binding: 1 }).then(res => {\n            this.divtab = !this.divtab\n            this.shebei()\n            this.shua()\n            this.$message({\n              message: '保存成功',\n              type: 'success'\n            })\n          })\n          // setTimeout(() => {\n          //   this.tank = ''\n          //   this.$router.push({ path: '/map/mapsets' })\n          // }, 2000)\n        })\n      } else {\n        this.$message({\n          message: '请认真检查填写项',\n          type: 'warning'\n        })\n      }\n    },\n    addfun() {\n      var that = this\n      this.events = {\n        init(o) {\n          o.on('click', function(e) {\n            that.wei(e.lnglat.getLng(), e.lnglat.getLat(), that)\n          })\n        }\n      }\n    },\n    addmarker() {\n      console.log(123)\n      var that = this\n      var o = amapManager.getMap()\n      var markers = []\n      var open = []\n      o.remove(that.overlayGroups)\n      o.remove(that.line)\n      for (var i = 0; i < that.data.length; i++) {\n        if (that.data[i].indt !== '') {\n          var marker = new AMap.Marker({\n            position: that.data[i].indt,\n            rowindex: that.rowindex,\n            text: '123',\n            icon: 'https://webapi.amap.com/theme/v1.3/markers/n/mark_b' + (markers.length + 1) + '.png'\n          })\n          marker.on('click', function() {\n            console.log('111')\n          })\n          open.push(that.data[i].indt)\n          markers.push(marker)\n        }\n      }\n      if (open.length > 1) {\n        console.log(open)\n        that.line = new AMap.Polyline({\n          map: o,\n          strokeColor: '#80d8ff',\n          isOutline: true,\n          strokeStyle: 'dashed',\n          outlineColor: 'white',\n          path: open\n        })\n      }\n      this.overlayGroups = new AMap.OverlayGroup(markers)\n      o.add(that.overlayGroups)\n    },\n    wei(a, b, that) {\n      console.log(that.rowindex)\n      if (that.rowindex !== '') {\n        that.data[that.rowindex].indt = [a, b]\n      } else {\n        that.data[that.dataid].indt = [a, b]\n      }\n      this.addmarker()\n    },\n    handleClick(tab, event) {\n      console.log(tab, event)\n    },\n    jia() {\n      this.data.push({ name: '', indt: '' })\n      this.dataid = this.data.length - 1\n      this.rowindex = this.dataid\n      this.$refs.singleTable.setCurrentRow(this.data[this.dataid])\n    },\n    datafun(i) {\n      console.log(i)\n      this.dataid = i\n    },\n    jian() {\n      if (this.rowindex || this.rowindex === 0) {\n        this.data.splice(this.rowindex, 1)\n      } else {\n        this.data.splice(this.dataid, 1)\n      }\n      this.rowindex = this.data.length - 1\n      this.$refs.singleTable.setCurrentRow(this.data[this.data.length - 1])\n      this.addmarker()\n    },\n    shang() {\n      if (this.dataid > 1 || this.dataid === 1) {\n        var a = this.data[this.dataid]\n        this.data[this.dataid] = this.data[this.dataid - 1]\n        this.data[this.dataid - 1] = a\n        this.dataid -= 1\n        this.$refs.singleTable.setCurrentRow(this.data[this.dataid])\n      }\n      this.addmarker()\n    },\n    xia() {\n      console.log(this.rowindex)\n      console.log(this.dataid)\n      if (this.dataid !== this.data.length - 1 && this.data.length > 1) {\n        var a = this.data[this.dataid]\n        this.data[this.dataid] = this.data[this.dataid + 1]\n        this.data[this.dataid + 1] = a\n        this.dataid += 1\n        this.$refs.singleTable.setCurrentRow(this.data[this.dataid])\n      }\n      this.addmarker()\n    },\n    indexMethod(index) {\n      return index + 1\n    },\n    tableRowClassName({ row, rowIndex }) {\n      row.index = rowIndex // 把每一行的索引放进row\n    },\n    onRowClick(row, event, column) {\n      var index = row.index\n      this.rowindex = index // 点击当前行的行数\n      this.dataid = index\n      console.log(this.data)\n    }\n  }\n}\n",null]}