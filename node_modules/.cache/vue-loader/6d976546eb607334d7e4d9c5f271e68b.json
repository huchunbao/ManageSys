{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\energy\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\energy\\index.vue","mtime":1576811950421},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport echarts from 'echarts'\nimport { getList } from '@/api/car'\nexport default {\n  name: 'Traffic',\n  data() {\n    return {\n      yearData: {\n        electricity: 0,\n        electricityMoney: 0,\n        water: 0,\n        waterMoney: 0,\n        gas: 0,\n        gasMoney: 0\n      },\n      seldata: '2',\n      echarts2: null,\n      echarts3: null,\n      echarts4: null,\n      option2: {\n        color: ['#86a0ff', '#c2d8ff'],\n        title: {\n          text: '今年每月水能源消耗统计',\n          left: '10',\n          top: '0',\n          textStyle: {\n            color: 'black',\n            fontWeight: 'normal',\n            fontSize: 13\n          }\n        },\n        legend: {\n          data: [{ name: '立方', icon: 'circle' }, { name: '金额', icon: 'circle' }]\n        },\n        grid: {\n          left: '20',\n          right: '70',\n          bottom: '50'\n        },\n        tooltip: {\n          trigger: 'item',\n          axisPointer: {\n            type: 'cross'\n          },\n          formatter: function(param) {\n            var dan = param.seriesName === '金额' ? '元' : '吨'\n            var data = '水能源消耗统计<br>' + param.name + ':' + param.data + '' + dan\n            return data\n          }\n        },\n        dataset: {\n        },\n        xAxis: {\n          data: [],\n          type: 'category',\n          name: '日期(月)'\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: { formatter: '{value} ' },\n          splitLine: {\n            show: true\n          }\n        },\n        series: [\n          {\n            type: 'bar',\n            name: '立方',\n            data: [\n              300,\n              260,\n              450,\n              500,\n              230,\n              320,\n              340,\n              400,\n              240\n            ]\n          },\n          {\n            type: 'bar',\n            name: '金额',\n            data: [\n              1800,\n              1560,\n              2700,\n              3000,\n              1380,\n              1920,\n              2040,\n              2400,\n              1440\n            ]\n          }\n        ]\n      },\n      option3: {\n        color: ['#315dfc', '#a0bbff'],\n        title: {\n          text: '今年每月电能消耗统计',\n          left: '10',\n          top: '0',\n          textStyle: {\n            color: 'black',\n            fontWeight: 'normal',\n            fontSize: 13\n          }\n        },\n        grid: {\n          left: '20',\n          right: '70',\n          bottom: '50'\n        },\n        tooltip: {\n          trigger: 'item',\n          axisPointer: {\n            type: 'cross'\n          },\n          formatter: function(param) {\n            var dan = param.seriesName === '金额' ? '元' : '度'\n            var data = '电能消耗统计<br>' + param.name + ':' + param.data + '' + dan\n            return data\n          }\n        },\n        calculable: true,\n        legend: {\n          data: [{ name: '度数' }, { name: '金额', icon: 'circle' }]\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: [],\n            axisLine: {\n              show: true\n            },\n            axisTick: {\n              show: false\n            },\n            // axisLabel: { formatter: '{value} 月' },\n            name: '日期(月)'\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value'\n          },\n          {\n            show: false,\n            type: 'value',\n            name: '金额'\n          }\n        ],\n        series: [\n          {\n            name: '度数',\n            type: 'line',\n            yAxisIndex: 1,\n            data: [\n              100,\n              210,\n              330,\n              450,\n              363,\n              410,\n              203,\n              234,\n              230\n            ]\n          },\n          {\n            barWidth: '43%',\n            name: '金额',\n            type: 'bar',\n            data: [\n              120,\n              252,\n              396,\n              540,\n              435.6,\n              492,\n              243.6,\n              280.8,\n              276\n            ]\n          }\n        ]\n      },\n      option4: {\n        title: {\n          text: '今年每月燃气能源消耗统计',\n          left: '10',\n          top: '0',\n          textStyle: {\n            color: 'black',\n            fontWeight: 'normal',\n            fontSize: 13\n          }\n        },\n        color: ['#86a0ff', '#c2d8ff'],\n        legend: {\n          data: [{ name: '立方', icon: 'circle' }, { name: '金额', icon: 'circle' }]\n        },\n        grid: {\n          left: '20',\n          right: '70',\n          bottom: '50'\n        },\n        tooltip: {\n          trigger: 'item',\n          axisPointer: {\n            type: 'cross'\n          },\n          formatter: function(param) {\n            var dan = param.seriesName === '金额' ? '元' : 'm3'\n            var data = '燃气能源消耗统计<br>' + param.name + ':' + param.data + '' + dan\n            return data\n          }\n        },\n        xAxis: {\n          data: [],\n          type: 'category',\n          name: '日期(月)'\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: { formatter: '{value} ' },\n          splitLine: {\n            show: true\n          }\n        },\n        series: [\n          {\n            type: 'bar',\n            name: '立方',\n            data: [\n              300,\n              260,\n              450,\n              640,\n              500,\n              430,\n              320,\n              280,\n              240\n            ]\n          },\n          {\n            type: 'bar',\n            name: '金额',\n            data: [\n              780,\n              676,\n              1170,\n              1664,\n              1300,\n              1118,\n              832,\n              728,\n              624\n            ]\n          }\n        ]\n      }\n    }\n  },\n  mounted() {\n    this.getAllData()\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.resizeHandler)\n  },\n  methods: {\n    getDataList(url) {\n      return new Promise((resolve, reject) => {\n        getList(url, null).then(response => {\n          resolve(response)\n        }).catch(error => {\n          reject(error)\n        })\n      })\n    },\n    getAllData() {\n      var that = this\n      this.getDataList('/sourceeat/loadSourceData').then(data => {\n        var now = new Date()\n        var month = now.getMonth() + 1\n        var xAxis = new Array(month).fill(0)\n        that.option2.series[0].data = new Array(month).fill(0)\n        that.option2.series[1].data = new Array(month).fill(0)\n        that.option3.series[0].data = new Array(month).fill(0)\n        that.option3.series[1].data = new Array(month).fill(0)\n        that.option4.series[0].data = new Array(month).fill(0)\n        that.option4.series[1].data = new Array(month).fill(0)\n        for (let index = 0; index < month; index++) {\n          xAxis[index] = (index + 1) + '月'\n        }\n        that.option2.xAxis.data = xAxis\n        that.option3.xAxis[0].data = xAxis\n        that.option4.xAxis.data = xAxis\n        data.data.forEach(item => {\n          if (parseInt(item.dateName) > month && item.dateYear === 1) return\n          if (parseInt(item.disType) === 0) {\n            switch (parseInt(item.typeNum)) {\n              case 0:\n                if (item.dateYear === 0) {\n                  that.yearData.electricity = item.sourceValue\n                } else {\n                  that.option2.series[0].data[parseInt(item.dateName) - 1] = item.sourceValue\n                }\n                break\n              case 1:\n                if (item.dateYear === 0) {\n                  that.yearData.water = item.sourceValue\n                } else {\n                  that.option3.series[0].data[parseInt(item.dateName) - 1] = item.sourceValue\n                }\n                break\n              case 2:\n                if (item.dateYear === 0) {\n                  that.yearData.gas = item.sourceValue\n                } else {\n                  that.option4.series[0].data[parseInt(item.dateName) - 1] = item.sourceValue\n                }\n                break\n              default:\n                break\n            }\n          } else {\n            switch (parseInt(item.typeNum)) {\n              case 0:\n                if (item.dateYear === 0) {\n                  that.yearData.electricityMoney = item.sourceValue\n                } else {\n                  that.option2.series[1].data[parseInt(item.dateName) - 1] = item.sourceValue\n                }\n                break\n              case 1:\n                if (item.dateYear === 0) {\n                  that.yearData.waterMoney = item.sourceValue\n                } else {\n                  that.option3.series[1].data[parseInt(item.dateName) - 1] = item.sourceValue\n                }\n                break\n              case 2:\n                if (item.dateYear === 0) {\n                  that.yearData.gasMoney = item.sourceValue\n                } else {\n                  that.option4.series[1].data[parseInt(item.dateName) - 1] = item.sourceValue\n                }\n                break\n              default:\n                break\n            }\n          }\n        })\n        that.option2.grid.left = this.getYWidth(Math.max.apply(null, that.option2.series[0].data), Math.max.apply(null, that.option2.series[0].data))\n        that.option3.grid.left = this.getYWidth(Math.max.apply(null, that.option3.series[0].data), Math.max.apply(null, that.option3.series[0].data))\n        that.option4.grid.left = this.getYWidth(Math.max.apply(null, that.option4.series[0].data), Math.max.apply(null, that.option4.series[0].data))\n        that.echaers4fund()\n        that.echaers3fund()\n        that.echaers2fund()\n        window.addEventListener('resize', this.resizeHandler)\n      })\n    },\n    echaers2fund() {\n      this.echarts2 = echarts.init(document.getElementById('echarts2'))\n      this.echarts2.setOption(this.option2)\n    },\n    echaers3fund() {\n      this.echarts3 = echarts.init(document.getElementById('echarts3'))\n      this.echarts3.setOption(this.option3)\n    },\n    echaers4fund() {\n      this.echarts4 = echarts.init(document.getElementById('echarts4'))\n      this.echarts4.setOption(this.option4)\n    },\n    resizeHandler() {\n      if (this.echarts2) {\n        this.echarts2.resize()\n      }\n      if (this.echarts3) {\n        this.echarts3.resize()\n      }\n      if (this.echarts4) {\n        this.echarts4.resize()\n      }\n    },\n    getYWidth(data1, data2) { // 根据数值长度计算显示宽度\n      return ((data1 > data2 ? data1.toString().length : data2.toString().length) * 12).toString()\n    }\n  }\n}\n",null]}