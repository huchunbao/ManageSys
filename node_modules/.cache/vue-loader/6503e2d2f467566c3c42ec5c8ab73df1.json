{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\map\\equipment.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\map\\equipment.vue","mtime":1577670779938},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { post, get } from '@/api/axios'\nimport VueAMap from 'vue-amap'\n\n// import $ from 'jquery'\nvar amapManager = new VueAMap.AMapManager()\nexport default {\n  name: 'Map',\n  data() {\n    return {\n      zoom: 16,\n      center: [116.336496, 39.942178],\n      mapStyle1: 'amap://styles/whitesmoke',\n      activeName: 'qing',\n      tape: 1,\n      amapManager,\n      value1: '所有场所', // value1 ~ value7为页面从上往下数第几个value\n      value2: '',\n      value3: '',\n      value4: '',\n      value5: '',\n      value6: '',\n      value7: '',\n      value8: '',\n      value9: '',\n      new_built: true, // 默认可以点击\n      new_marker: false, // 新建的marker\n      new_marker_id: '', // 新建marker的id\n      new_marker_save: false, // 新建的marker是否点击了保存-默认false  未保存\n      old_id: '',\n      old_icon: '',\n      olc_click: 0,\n      maps: null,\n      data_all: null, // 页面所有加载的marker\n      markerid: '',\n      events: {\n        'click': (e) => {\n          if (this.new_built === false && this.new_marker) { // 若新建按钮已经点击--- 默认为true 点击之后为false\n            // this.click_map = (this.click_map + 1)\n            var marker = {}\n            this.new_marker = false\n            marker = {\n              position: [e.lnglat.lng, e.lnglat.lat],\n              icon: require('../../assets/icon/icon_address.png'),\n              draggable: false,\n              extData: {\n                id: 'a', // 每次新建 都需要一个id 后端传入 这个id仅供测试使用\n                pointName: this.value2// 带星号的选项必须都对应上\n              }\n            }\n            this.value8 = e.lnglat.lng\n            this.value9 = e.lnglat.lat\n            this.new_marker_id = 'a'\n            this.markerid = 'a'\n            this.markers.push(marker)\n            this.ups_load(this.markers)\n          } else if (this.markerid !== 'a') {\n            this.$message({\n              message: '请先点击新建按钮',\n              type: 'warning'\n            })\n          } else {\n            this.value8 = e.lnglat.lng\n            this.value9 = e.lnglat.lat\n            this.markers[this.markers.length - 1].position = [e.lnglat.lng, e.lnglat.lat]\n          }\n        }\n      },\n      overlayGroups: [],\n      data: [],\n      markers: [],\n      windows: [],\n      window: '',\n      slotStyle: {\n        padding: '2px 8px',\n        color: '#333'\n      },\n      click_num: '', // 点击的第几个marker\n      option: [ // 点位类型\n        {\n          value: '1',\n          label: '游客中心'\n        },\n        {\n          value: '2',\n          label: '景点'\n        },\n        {\n          value: '3',\n          label: '休息区'\n        },\n        {\n          value: '4',\n          label: '观景台'\n        }\n      ],\n      datas: [],\n      attractions1: [],\n      attractions2: [],\n      attractions3: [],\n      option10: []\n    }\n  },\n  computed: {\n    open: function() {\n      return (this.value2 && this.value5 && this.value6 && this.value7 && this.value8 && this.value9)\n    }\n  },\n  watch: {\n    data() {\n      // this.addmarker()\n    },\n    new_built() {\n      this.markerid = ''\n      this.value2 = ''\n      this.value3 = ''\n      this.value4 = ''\n      this.value5 = ''\n      this.value6 = ''\n      this.qing()\n    }\n  },\n  created() {\n    // this.addfun()\n    // 获取数据或者加载数据\n    window.handler = this.handler\n  },\n  mounted: function() {\n    // this.ups_load(this.datas)\n    get('/mngpoint/getpointtypeByProperties', { cpid: this.$store.state.user.companyId, properties: 3 }).then(res => {\n      var that = this\n      this.option10 = res.data\n      for (var i = 0; i < that.option10.length; i++) {\n        that.option10[i].icon = process.env.VUE_APP_BASE_API + '/mngpoint/img/icon/' + that.option10[i].url + '?t=' + new Date().getTime()\n      }\n      this.value1 = JSON.stringify(res.data[0])\n      this.qing()\n    })\n    get('/mngpoint/getPointInfoByTypeId', { cpid: this.$store.state.user.companyId, typeid: 1 }).then(res => {\n      this.attractions2 = res.data\n    })\n    get('/mngpoint/getpointtypeByProperties', { cpid: this.$store.state.user.companyId, properties: 2 }).then(res => {\n      this.attractions3 = []\n      for (var i = 0; i < res.data.length; i++) {\n        get('/mngpoint/getPointInfoByTypeId', { cpid: this.$store.state.user.companyId, typeid: res.data[i].id }).then(res2 => {\n          for (let i2 = 0; i2 < res2.data.length; i2++) {\n            this.attractions3.push(res2.data[i2])\n          }\n        })\n      }\n    })\n    this.shebei()\n  },\n  methods: {\n    shebei() {\n      console.log(1232132)\n      get('/camara/getAll', { cpid: this.$store.state.user.companyId }).then(res => {\n        this.attractions1 = res\n      })\n    },\n    qing() {\n      var that = this\n      get('/mngpoint/getPointInfoByTypeId', { cpid: this.$store.state.user.companyId, typeid: JSON.parse(this.value1).id }).then(res => {\n        var data = []\n        for (var i = 0; i < res.data.length; i++) {\n          var icon\n          for (var i1 = 0; i1 < that.option10.length; i1++) {\n            if (that.option10[i1].id === res.data[0].pointTypeId) {\n              icon = that.option10[i1].icon\n            }\n          }\n          data.push({\n            icon: icon,\n            position: [res.data[i].mngPointLon, res.data[i].mngPointLat],\n            id: res.data[i].id,\n            pointName: res.data[i].pointName,\n            remarks: res.data[i].remarks,\n            pointType: '景点',\n            mngPointLon: res.data[i].mngPointLon,\n            mngPointLat: res.data[i].mngPointLat,\n            label: res.data[i].placeName,\n            name: res.data[i].pointName,\n            path: [res.data[i].mngPointLon, res.data[i].mngPointLat],\n            draggable: false,\n            extData: {\n              id: res.data[i].id,\n              pointName: res.data[i].pointName,\n              remarks: res.data[i].remarks,\n              pointType: '景点',\n              mngPointLon: res.data[i].mngPointLon,\n              mngPointLat: res.data[i].mngPointLat,\n              label: res.data[i].placeName,\n              name: res.data[i].pointName,\n              path: [res.data[i].mngPointLon, res.data[i].mngPointLat]\n            }\n          })\n        }\n        this.data_all = data\n        this.ups_load(data)\n      })\n    },\n    change(val) {\n      var that = this\n      if (this.click_num !== null && this.windows[this.click_num] !== undefined) {\n        this.windows[this.click_num].visible = false\n      }\n      const nums = parseInt(val) - 1\n      const obj = {}\n      this.option.forEach((value, index) => {\n        if (nums === index) {\n          obj.label = value.label\n          obj.value = nums\n        }\n      })\n      // console.log(obj) //点击change 切换的内容\n      // 每次点击change 重新调用ups_load 并修改\n      const asd = [\n        {\n          value: '1',\n          label: '游客中心',\n          name: '游客中心',\n          path: [116.337033, 39.938723],\n          icon: require('../../assets/icon/icon_youke.png')\n        },\n        {\n          value: '2',\n          label: '景点',\n          name: '景点',\n          path: [116.333878, 39.941471],\n          icon: require('../../assets/icon/icon_jingdian.png')\n        }\n      ]\n      that.ups_load(asd)\n      // this.windows = asd\n      // this.markers = asd\n    },\n    ups_load(data) {\n      const markers = []\n      const windows = []\n      const self = this\n      for (let i = 0; i < data.length; i++) {\n        var marker = {\n          position: data[i].position,\n          icon: data[i].icon,\n          draggable: false,\n          extData: data[i].extData,\n          events: {\n            click(e) {\n              if (self.markerid !== 'a' && self.new_built === true) {\n                self.markerid = e.target.Uh.extData.extData.id\n                self.windows.forEach(window => {\n                  window.visible = false\n                })\n                self.window = self.windows[i]\n                self.$nextTick(() => {\n                  self.window.visible = true\n                  self.window.position = self.markers[i].position\n                })\n                // 左侧数据同步----只有坐标-其他未写\n                self.value8 = this.getPosition().lng\n                self.value9 = this.getPosition().lat\n                self.value2 = this.Uh.extData.extData.name\n                self.value3 = this.Uh.extData.extData.pointName\n                self.value4 = this.Uh.extData.extData.remarks\n                self.markers.forEach((marker, nowindex) => {\n                  if (marker.extData.id === self.markerid) {\n                    marker.icon = require('../../assets/icon/icon_address.png')\n                  } else {\n                    if (marker.extData.id === self.new_marker_id && !self.new_marker_save) {\n                      marker.icon = ''\n                    } else {\n                      marker.icon = JSON.parse(self.value1).icon\n                      // require('../../assets/icon/icon_jingdian.png')\n                    }\n                  }\n                })\n              } else {\n                console.log(e)\n                if (this.Uh.extData.extData.id === 'a') {\n                  self.windows.forEach(window => {\n                    window.visible = false\n                  })\n                  self.window = self.windows[i]\n                  self.$nextTick(() => {\n                    self.window.visible = true\n                    self.window.position = self.markers[i].position\n                  })\n                }\n              }\n            },\n            dragstart() {\n              self.window.visible = false\n            },\n            dragging() {\n              self.value6 = this.getPosition().lng\n              self.value7 = this.getPosition().lat\n              self.markers.forEach((marker, index) => {\n                if (marker.extData.id === self.markerid) {\n                  marker.position = [this.getPosition().lng, this.getPosition().lat]\n                }\n              })\n            }\n          }\n        }\n        markers.push(marker)\n        windows.push({\n          position: data[i].position,\n          visible: false,\n          offset: [10, -20],\n          closeWhenClickMap: true\n        })\n      }\n      this.markers = markers\n      this.data_all = markers\n      this.windows = windows\n    },\n    edit_btn() {\n      this.new_built = false // 新建置灰\n      this.click_map = 2\n      this.markers.forEach((marker) => {\n        if (this.markerid === marker.extData.id) {\n          marker.draggable = true\n          this.window = {\n            position: marker.position,\n            visible: false,\n            offset: [10, -20],\n            closeWhenClickMap: true\n          }\n        }\n      })\n      this.windows.forEach(window => {\n        window.visible = false\n      })\n      // this.window = self.windows[this.click_num]\n      // this.$nextTick(() => {\n      //   this.window.visible = false\n      // })\n    },\n    delete_btn() {\n      var that = this\n      that.$confirm(that.markerid !== 'a' ? '此操作将永久删除该文件, 是否继续?' : '请确认是否取消', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then((e) => {\n        that.window.visible = false // 信息窗体隐藏\n        that.click_map = 0\n        if (that.markerid !== 'a') {\n          get('/mngpoint/delPointInfo', { id: that.markerid }).then(res => {\n            post('/camara/updpoint', { pid: that.markerid * 1, binding: 0 }).then(res => {\n              if (res.msg === 'SUCCESS') {\n                this.qing()\n              } else {\n                this.$message({\n                  message: res.msg,\n                  type: 'warning'\n                })\n              }\n            })\n          })\n        } else {\n          this.qing()\n        }\n        that.markerid = ''\n        that.value2 = ''\n        that.value3 = ''\n        that.value4 = ''\n        that.value5 = ''\n        that.value6 = ''\n        that.value7 = ''\n        that.value8 = ''\n        that.value9 = ''\n        that.new_built = true // 新建\n      })\n    },\n    ti() {\n      // 判断每一项数据中的参数都不是空，才能保存 new_marker_save: false,-----> 才能变为true\n      // this.markers.forEach((marker) => {\n      if (this.value1 !== '' && this.value2 !== '' && this.value5 !== '' && this.value6 !== '' && this.value7 !== '' && this.value8 !== '' && this.value9 !== '') { // 判断输入项都不为空才能保存\n        this.new_built = true // 新建按钮高亮\n        // 新建或者保存  都需要对window隐藏\n        if (this.click_num) {\n          this.windows[this.click_num].visible = false\n        }\n        var data = {\n          cpid: this.$store.state.user.companyId,\n          pointTypeId: JSON.parse(this.value1).id,\n          pointProperties: 3,\n          pointName: this.value2,\n          remarks: this.value3,\n          pointDescription: this.value4,\n          equipmentId: JSON.parse(this.value5).pid,\n          scenicSpotId: JSON.parse(this.value6).id,\n          scenicSpotName: JSON.parse(this.value6).pointName,\n          placeName: JSON.parse(this.value7).pointName,\n          placeId: JSON.parse(this.value7).id,\n          pointType: JSON.parse(this.value1).typeName,\n          mngPointLon: this.value8,\n          mngPointLat: this.value9\n        }\n        post('/mngpoint/savePointInfo', data).then(res => {\n          post('/camara/updpoint', { pid: data.equipmentId * 1, binding: 1 }).then(res => {\n            this.qing()\n            this.shebei()\n            this.markerid = ''\n            this.value2 = ''\n            this.value3 = ''\n            this.value4 = ''\n            this.value5 = ''\n            this.value6 = ''\n            this.value7 = ''\n            this.value8 = ''\n            this.value9 = ''\n            this.$message({\n              message: '保存成功',\n              type: 'success'\n            })\n          })\n        })\n      } else {\n        this.$message({\n          message: '请认真检查填写项',\n          type: 'warning'\n        })\n      }\n      // })\n    },\n    new_building() {\n      var that = this\n      this.click_map = 0 // 重新初始化 最新添加的marker\n      this.new_built = false // 新建按钮置灰\n      this.new_marker = true\n      this.window = false // window初始化\n      this.markers.forEach((marker) => {\n        if (this.old_icon) {\n          if (marker.extData.id === this.old_id) {\n            marker.icon = this.old_icon\n          }\n        }\n      })\n      that.value2 = ''\n      that.value3 = ''\n      that.value4 = ''\n      that.value5 = ''\n      that.value6 = ''\n      that.value7 = ''\n      that.value8 = ''\n      that.value9 = ''\n    },\n    addfun() {\n      var that = this\n      this.events = {\n        init(o) {\n          o.on('click', function(e) {\n            that.wei(e.lnglat.getLng(), e.lnglat.getLat(), that)\n          })\n        }\n      }\n    },\n    addmarker() {\n      var that = this\n      var o = amapManager.getMap()\n      var markers = []\n      // o.remove(that.overlayGroups)\n      var marker = new AMap.Marker({\n        position: [that.value6, that.value7],\n        text: '123'\n      })\n      markers.push(marker)\n      this.overlayGroups = new AMap.OverlayGroup(markers)\n      o.add(that.overlayGroups)\n    },\n    wei(a, b, that) {\n      this.data[this.data.length - 1] = [a, b]\n      that.value6 = a\n      that.value7 = b\n      this.addmarker()\n    },\n    handleClick(tab, event) {\n      console.log(tab, event)\n    }\n\n  }\n}\n",null]}