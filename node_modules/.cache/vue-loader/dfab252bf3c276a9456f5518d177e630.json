{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\components\\Charts\\LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\components\\Charts\\LineChart.vue","mtime":1576638136378},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport echarts from 'echarts'\nimport resize from './mixins/resize'\n\nexport default {\n  mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    id: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '200px'\n    },\n    height: {\n      type: String,\n      default: '200px'\n    },\n    stack: {\n      type: Boolean,\n      default: true\n    },\n    chartType: {\n      type: String,\n      default: ''\n    },\n    chartData: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    tipTitle: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      chart: null,\n      colorlist: this.$store.state.settings.chartColors\n    }\n  },\n  watch: {\n    chartData: {\n      immediate: true,\n      handler(val) {\n        if (!val) return\n        this.$nextTick(() => {\n          this.initChart(val)\n        })\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.chart = echarts.init(document.getElementById(this.id))\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return\n    }\n    this.chart.dispose()\n    this.chart = null\n  },\n  methods: {\n    initChart(chartData) {\n      if (this.chart) {\n        this.chart.clear()\n      }\n      const that = this\n      let unit = '元'\n      let yName = '营业额(元)'\n      let xName = '日期(月)'\n      var xItem = []\n      var now = new Date()\n      const month = now.getMonth() + 1\n      if (that.chartType === 'scale') {\n        unit = '%'\n        yName = '百分比(%)'\n        xName = '日期(日)'\n        let days = 31\n        if (month === 2) {\n          days = now.getFullYear() % 4 === 0 ? 29 : 28\n        } else if (month === 4 || month === 6 || month === 9 || month === 11) {\n          days = 30\n        }\n        for (var j = 1; j <= days; j++) {\n          xItem.push(j + '日')\n        }\n      } else {\n        for (var i = 1; i <= month; i++) {\n          xItem.push(i + '月')\n        }\n\n        if (that.chartType === 'jftj') {\n          unit = '分'\n          yName = '积分(分)'\n        } else if (that.chartType === 'parking') {\n          unit = '辆'\n          yName = '数量(辆)'\n        }\n      }\n      const xData = (function() {\n        const data = []\n        var datalen = chartData.ldata.length\n        for (let i = 0, j = 0; i < datalen; i++) {\n          if (j >= that.colorlist.length) {\n            j = 0\n          }\n          // console.log(chartData.ldata[i])\n          if (!that.stack) {\n            data.push({\n              name: chartData.ldata[i],\n              type: 'line',\n              stack: '总量',\n              itemStyle: {\n                normal: {\n                  color: that.colorlist[j]\n                }\n              },\n              data: chartData.sdata[i]\n            })\n          } else {\n            data.push({\n              name: chartData.ldata[i],\n              type: 'line',\n              itemStyle: {\n                normal: {\n                  color: that.colorlist[j]\n                }\n              },\n              data: chartData.sdata[i]\n            })\n          }\n          j++\n        }\n\n        return data\n      }())\n\n      that.chart.setOption({\n        title: {\n          show: xData.length <= 0,\n          textStyle: {\n            color: '#909399',\n            fontWeight: 'normal',\n            fontSize: 14\n          },\n          text: '暂无数据',\n          left: 'center',\n          top: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: function(params) {\n            var relVal = params[0].name + that.tipTitle.replace('今年每月', '')\n            for (var i = 0; i < params.length; i++) {\n              relVal += '<div class=\"circle\" >' + params[i].marker + params[i].seriesName + ' : ' + params[i].value + unit + '</div>'\n            }\n            return relVal\n          }\n        },\n        grid: {\n          left: '15%',\n          right: '10%',\n          bottom: 20\n        },\n        legend: {\n          top: 10,\n          data: chartData.ldata\n        },\n        xAxis: {\n          name: xName,\n          type: 'category',\n          axisLine: {\n            lineStyle: {\n              color: '#90979c'\n            }\n          },\n          boundaryGap: false,\n          data: xItem\n        },\n        yAxis: {\n          type: 'value',\n          name: yName,\n          axisLine: {\n            lineStyle: {\n              color: '#90979c'\n            }\n          },\n          axisLabel: { formatter: '{value}' + unit }\n        },\n        series: xData\n      })\n    }\n  }\n}\n",null]}