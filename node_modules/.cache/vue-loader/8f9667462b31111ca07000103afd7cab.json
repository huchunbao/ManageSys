{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\integral\\components\\EchartRing.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\integral\\components\\EchartRing.vue","mtime":1576812978549},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport echarts from 'echarts'\n// import resize from './mixins/resize'\nexport default {\n  // mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    getdata: {\n      type: Object,\n      default: () => {\n        return {\n          id: 'echar',\n          series: [],\n          legend: [],\n          height: '',\n          width: ''\n        }\n      }\n    }\n  },\n  data() {\n    return {\n      chart: null,\n      colorlist: this.$store.state.settings.chartColors // 扇形区域以及列表颜色\n    }\n  },\n  watch: {\n    getdata: {\n      // immediate: true,\n      handler(val) {\n        this.$nextTick(() => {\n          this.EchartsRing(val)\n        })\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.chart = echarts.init(document.getElementById(this.getdata.id))\n  },\n  beforeDestroy() {\n    var that = this\n    window.removeEventListener('resize', that.resizeHandler)\n  },\n  methods: {\n    EchartsRing(data) {\n      // console.log(data)\n      var series = data.series\n      var legend = data.legend\n      var that = this\n      var option = {\n        /* eslint-disable */\n        title: {\n          show:series.length < 1 && legend.length < 1,\n          textStyle: {\n            color: '#909399',\n            fontWeight: 'normal',\n            fontSize: 14\n          },\n          text: '暂无数据',\n          left: 'center',\n          top: 'center'\n        },\n        tooltip: {\n        trigger: 'item',\n        formatter:\n          function(params) {\n            var result = ''\n            result += params.seriesName + '</br>' + params.marker + '' + params.data.name + ' : ' + params.data.value + '(' + params.percent + '%' + ')' + '</br>'\n            return result\n          }\n        },\n        legend: {\n          orient: 'vertical',\n          icon: 'circle',\n          x: '80%',\n          y: 'center',\n          data: legend\n        },\n        color: this.$store.state.settings.chartColors,\n        series: [{\n          name: '消费来源',\n          type: 'pie',\n          center: ['40%', '55%'],\n          radius: ['30%', '50%'],\n          //minAngle: 5, // 最小的扇区角度（0 ~ 360），用于防止某个值过小导致扇区太小影响交互\n          avoidLabelOverlap: true, // 是否启用防止标签重叠策略\n          hoverAnimation: true, // 是否开启 hover 在扇区上的放大动画效\n          labelLine: { // 设置延长线的长度\n            normal: {\n              show: true,\n              // length: 15 // 设置延长线的长度// length2: 10,//设置第二段延长线的长度\n            }\n          },\n          label: {\n            normal: {\n              show: true,\n              formatter:\n                function(params) {\n                  var result = '' // result =params.seriesName+''+\"</br>\"\n                  result += params.data.value + '(' + params.percent + '%' + ')'\n                  return result\n                }\n            },\n            emphasis: {\n              show: true,\n              // textStyle: {\n              //   // fontSize: '16',\n              //   // fontWeight: 'bold'\n              // }\n            }\n          },\n          data: series\n        }]\n      }\n      that.chart.setOption(option)\n      window.addEventListener('resize', that.resizeHandler)\n    },\n    resizeHandler() {\n      if (this.chart) {\n        this.chart.resize()\n      }\n    }\n  }\n}\n",null]}