{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\integral\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\integral\\index.vue","mtime":1576832444043},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nimport { get } from '@/api/axios'\nimport echarts from 'echarts'\nimport EchartRing from './components/EchartRing'\nexport default {\n/* eslint-disable */\n  name: 'Integral',\n  data() {\n    return {\n      // tab按钮\n      // tab: [\"标题一\",\"标题二\",\"标题三\"],\n      // default_bar: 0,\n      memberTotalNum: 0, // 会员总数\n      addMemberTotalNum: 0, // 新增会员\n      totalExchangeNum: 0, // 兑换积分\n      totalSendNum: 0, // 送出积分\n      memberTotalNum: '', //会员统计数据分析\n      memberList: '', // 消费占比 活跃统计  dataYear 4 今年会员消费占比  dataYear 0 历年活跃不活跃\n      memberIntegralInfos: '', // 会员积分统计\n      series_data: {\n        id: 'echartring',\n        series: [],\n        legend: [],\n        height: '100%',\n        width: '100%'\n      },\n      echart2: null,\n      echart3: null\n    }\n  },\n  components:{\n    EchartRing\n  },\n  mounted() {\n    var that = this\n    this.$nextTick(() => {\n      get('/income/findMemberCardIncome').then(data => {\n        if (data.msg === 'SUCCESS') {\n          var data = data.data\n          // 左侧列表数据\n          this.memberTotalNum = data.memberTotalNum ? data.memberTotalNum : 0\n          this.addMemberTotalNum = data.addMemberTotalNum ? data.addMemberTotalNum : 0\n          this.totalExchangeNum = data.totalExchangeNum ? data.totalExchangeNum : 0\n          this.totalSendNum = data.totalSendNum ? data.totalSendNum : 0\n          var echarts = data.memberList // 图表数据初始化\n          var data_series = [], data_legend = [] // 环状图\n          var data_active = [], data_close = [], datax = [] // 双柱状图\n          for (let i = 0; i < echarts.length; i++) {\n            if (echarts[i].dateYear === 4 ) {\n              if (echarts[i].name) {\n                data_series.push({ 'value': echarts[i].imcomeValue, 'name': echarts[i].name })\n                data_legend.push(echarts[i].name)\n              }\n            } else if (echarts[i].dateYear === 0) {\n              if (echarts[i].active === 0) {\n                data_active.push(echarts[i].imcomeValue)\n                datax.push(parseInt(echarts[i].dateName))\n              } else {\n                data_close.push(echarts[i].imcomeValue)\n              }\n            }\n          }\n          // 环状图\n          that.series_data.series = data_series\n          that.series_data.legend = data_legend\n          // that.EchartsRing(data_series, data_legend)\n          // 双柱状图\n          that.DoubleColumn(data_active, data_close, datax)\n          var LineColumn = data.memberIntegralInfos // 柱状折线图数据初始化\n          var data_send = [], data_exchange = [], datax2 = [] // 柱状折线图\n          for (var p = 1; p <= 12; p++) {\n            datax2.push(p)\n            data_send.push(0)\n            data_exchange.push(0)\n          }\n          for (let i = 0; i < LineColumn.length; i++) {\n            if (LineColumn[i].integralType === 0) {\n              for (let j = 0; j < datax2.length; j++) {\n                if (datax2[j] === parseInt(LineColumn[i].dateName)) {\n                  data_send[j] = LineColumn[i].integral\n                }\n              }\n              // data_send.push(LineColumn[i].integral ? LineColumn[i].integral : 0)\n            } else if (LineColumn[i].integralType === 1) {\n              for (let j = 0; j < datax2.length; j++) {\n                if (datax2[j] === parseInt(LineColumn[i].dateName)) {\n                  data_exchange[j] = LineColumn[i].integral\n                }\n              }\n              // data_exchange.push(LineColumn[i].integral?LineColumn[i].integral : 0)\n            }\n          }\n          that.EchartsLineColumn(data_send, data_exchange, datax2)\n        }\n      })\n    })\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.resizeHandler)\n  },\n  methods: {\n    TabClick(index) {\n      this.default_bar = index\n    },\n    EchartsLineColumn(data_send, data_exchange, datax) {\n      var that = this\n      var data_legend = [{ name: '送出积分' }, { name: '兑换积分', icon: 'circle' }]\n      var option = {\n        title: {\n          show: data_send.length < 1 || data_exchange.length < 1 || datax.length < 1,\n          textStyle: {\n            color: '#909399',\n            fontWeight: 'normal',\n            fontSize: 14\n          },\n          text: '暂无数据',\n          left: 'center',\n          top: 'center'\n        },\n        grid: {\n          left: '20',\n          right: '70',\n          bottom: '50'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          },\n          // axisPointer: {\n          // type: 'shadow'\n          // },\n          formatter: function(params) {\n            var result = ''\n            result = params[0].name + '月份积分出入情况' + '</br>'\n            params.forEach(function(item) {\n              result += item.marker + ' ' + item.seriesName + ' : ' + item.value + '</br>'\n            })\n            return result\n          }\n          // \"{b}月会员积分情况 <br/>{a} :{c}<br/>{a1}: {c1}\"\n          // a ---legend第一个 名字  a1---第二个名字\n          // b --- 第一个表x轴\n          // b1 --- 第二标x轴\n          // c  ---第一个y轴值\n          // c1 ---第二个y轴\n        },\n        legend: { // 'circle', 'rect', 'roundRect', 'triangle', 'diamond', 'pin', 'arrow', 'none'\n          data: data_legend\n        },\n        color: ['#3F6AFF', '#A2BCFF'],\n        xAxis: [{\n          name: '月份(月)',\n          type: 'category',\n          splitLine: {\n            show: false\n          },\n          data: datax,\n          axisPointer: {\n            type: 'shadow'\n          },\n          axisTick: {\n            alignWithLabel: true,\n            show: false\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          name: '积分(分)',\n          splitLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            formatter: '{value}'\n          }\n        }],\n        series: [{\n          name: '送出积分',\n          type: 'line',\n          data: data_send\n        },\n        {\n          name: '兑换积分',\n          type: 'bar',\n          // yAxisIndex: 1,\n          data: data_exchange\n        }]\n      }\n      that.echart2 = echarts.init(document.getElementById('echartslinecolumn'))\n      option.grid.left = this.getYWidth(Math.max.apply(null, option.series[0].data), Math.max.apply(null, option.series[1].data))\n      that.echart2.setOption(option)\n      window.addEventListener('resize', that.resizeHandler)\n    },\n    DoubleColumn(data_active, data_close, datax) {\n      // var datax = ['2016','2017','2018','2019']\n      // var data_active = [1, 2, 8, 9]\n      // var data_close = [5, 1, 9, 10]\n      var option = {\n        title: {\n          show: datax.length < 1 || data_active.length < 1 || data_close.length < 1,\n          textStyle: {\n            color: '#909399',\n            fontWeight: 'normal',\n            fontSize: 14\n          },\n          text: '暂无数据',\n          left: 'center',\n          top: 'center'\n        },\n        grid: {\n          left: '20',\n          right: '70',\n          bottom: '50'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          },\n          // axisPointer: {\n          // type: 'shadow'\n          // },\n          formatter: function(params) {\n            var result = ''\n            result = params[0].name + '年会员活跃度统计' + '</br>'\n            params.forEach(function(item) {\n              result += item.marker + '' + item.seriesName + ' : ' + item.value + '</br>'\n            })\n            return result\n          }\n        },\n        legend: {\n          data: [{ name: '活跃会员', icon: 'circle' }, { name: '沉默会员', icon: 'circle' }]\n        },\n        color: ['#89A2FF', '#A2BCFF'],\n        yAxis: [{\n          type: 'value',\n          name: '人数(人)',\n          axisLabel: {\n            formatter: '{value}'\n          },\n          splitLine: {\n            show: false\n          },\n          axisTick: { // 刻度\n            show: false\n          }\n        }],\n        xAxis: [{\n          type: 'value',\n          name: '日期(年)',\n          splitLine: {\n            show: false\n          },\n          axisTick: { // 刻度\n            show: false\n          },\n          type: 'category',\n          data: datax\n        }],\n        series: [\n          {\n            name: '活跃会员',\n            type: 'bar',\n            barMaxWidth: 50, // 最大宽度\n            data: data_active\n          },\n          {\n            name: '沉默会员',\n            type: 'bar',\n            barMaxWidth: 50, // 最大宽度\n            data: data_close\n          }\n        ]\n      }\n      var that = this\n      that.echart3 = echarts.init(document.getElementById('doublecolumn'), 'light')\n      // window.onresize = myChart.resize\n      option.grid.left = this.getYWidth(Math.max.apply(null, option.series[0].data), Math.max.apply(null, option.series[1].data))\n      that.echart3.setOption(option)\n      window.addEventListener('resize', that.resizeHandler)\n    },\n    resizeHandler() { // 自适应echarts\n      if (this.echart2) {\n        this.echart2.resize()\n      }\n      if (this.echart3) {\n        this.echart3.resize()\n      }\n    },\n    getYWidth(data1, data2) { // 根据数值长度计算显示宽度\n      return ((data1 > data2 ? data1.toString().length : data2.toString().length) * 12).toString()\n    }\n  }\n}\n",null]}