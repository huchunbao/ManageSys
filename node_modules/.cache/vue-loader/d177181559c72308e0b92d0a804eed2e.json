{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\passenger\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\passenger\\index.vue","mtime":1577670779953},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport echarts from 'echarts'\nimport { get } from '@/api/axios'\nimport { AMapManager } from 'vue-amap'\n\nvar amapManager = new AMapManager()\nvar amapManager2 = new AMapManager()\nexport default {\n  name: 'PassenGer',\n  data() {\n    const colorlist = this.$store.state.settings.chartColors\n    return {\n      zoom: 16,\n      center: [116.336496, 39.942178],\n      mapStyle: 'amap://styles/whitesmoke',\n      zoom1: 14,\n      img: require('../../assets/images/didian.png'),\n      markers: [],\n      center1: [116.336496, 39.942178],\n      mapStyle1: 'amap://styles/fresh',\n      events: {},\n      amapManager,\n      amapManager2,\n      // 进入景区的人\n      enter: 0,\n      // 出景区的人\n      out: 0,\n      // 客流情况趋势图切换1代表客流情况2代表趋势图\n      activeName: 'qing',\n      supportData: [],\n      echarts1: null,\n      echarts2: null,\n      echarts3: null,\n      option1: {\n        title: {\n          text: '实时景点客流占比',\n          x: 'left',\n          textStyle: { fontSize: '14px', color: 'rgba(29,33,51,1)' }\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a}</br>{b}:{c}人({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          y: 'center',\n          right: '10%',\n          show: false,\n          data: []\n        },\n        series: [\n          {\n            name: '客流量',\n            type: 'pie',\n            radius: ['30%', '50%'],\n            center: ['38%', '50%'],\n            data: [],\n            label: {\n              position: 'outside',\n              formatter: '{d}%'\n            },\n            itemStyle: {\n              emphasis: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              },\n              normal: {\n                color: function(params) {\n                  return colorlist[params.dataIndex % colorlist.length]\n                }\n              }\n            }\n          }\n        ]\n      },\n      option2: {\n        grid: {\n          left: '15%',\n          right: '20%',\n          top: '18%',\n          bottom: '20%'\n        },\n        tooltip: {\n          type: 'axios',\n          axisPointer: {\n            type: 'cross'\n          },\n          formatter: '国庆节客流量统计<br>{b}:{c}人'\n        },\n        xAxis: {\n          type: 'category',\n          data: ['10.1', '10.2', '10.3', '10.4', '10.5', '10.6', '10.7'],\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          name: '日期（月/日）'\n        },\n        yAxis: {\n          type: 'value',\n          name: '金额（元）'\n          // axisLabel: { formatter: '{value} 人' }\n        },\n        series: [\n          {\n            data: new Array(7).fill(0),\n            type: 'bar',\n            color: '#A2BCFF',\n            barWidth: '15'\n          }\n        ]\n      },\n      option3: {\n        grid: {\n          left: '15%',\n          right: '18%',\n          top: '18%',\n          bottom: '20%'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          },\n          // axisPointer: {\n          //   type: 'cross'\n          // },\n          // backgroundColor: 'rgba(245, 245, 245, 0.8)',\n          // borderWidth: 1,\n          // borderColor: '#ccc',\n          // padding: 10,\n          // textStyle: {\n          //   color: '#000'\n          // },\n          // position: function(pos, params, el, elRect, size) {\n          //   var obj = { top: 10 }\n          //   obj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 30\n          //   return obj\n          // },\n          formatter: '去年客流趋势<br>{b}月:{c}人'\n        },\n        xAxis: {\n          type: 'category',\n          data: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          name: '日期（月）'\n        },\n        yAxis: {\n          type: 'value',\n          name: '人数（人）'\n          // axisLabel: { formatter: '{value} 人' }\n        },\n        series: [\n          {\n            data: new Array(12).fill(0),\n            type: 'line',\n            color: '#3F6AFF'\n          }\n        ]\n      }\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.init()\n    })\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.resizeHandler)\n  },\n  methods: {\n    init() {\n      get('/customerFlow/findCustomerFlowIndex', {}).then(data => {\n        // 获取数据\n        if (data.status === 0) {\n          data.data.forEach(item => {\n            switch (item.dateYear) {\n              case 0:\n                this.enter = item.enteringNumber\n                this.out = item.leaveNumber\n                break\n              case 1: // 地图点位\n                this.markers.push({\n                  position: [item.lng, item.lat],\n                  wen: {\n                    content: '<span style=\"color:#A0B5FF; font-size:3vh;\">' + item.baseHold + '</span>人<br>' + item.address\n                  }\n                })\n                this.supportData.push({\n                  lng: item.lng,\n                  lat: item.lat,\n                  count: item.baseHold\n                })\n                this.option1.series[0].data.push({\n                  value: item.baseHold,\n                  name: item.address\n                })\n                this.option1.legend.data.push(item.address)\n                break\n              case 2: // 去年\n                this.option3.series[0].data[parseInt(item.dateName) - 1] = item.baseHold\n                break\n              case 12: // 国庆节\n                this.option2.series[0].data[parseInt(item.dateName) - 1] = item.baseHold\n                break\n              default:\n                break\n            }\n          })\n          this.drawLine()\n          this.supportcanvas()\n          this.echaers2fund()\n          this.echaers3fund()\n          window.addEventListener('resize', this.resizeHandler)\n        }\n      })\n    },\n    resizeHandler() {\n      if (this.echarts1) {\n        this.echarts1.resize()\n      }\n      if (this.echarts2) {\n        this.echarts2.resize()\n      }\n      if (this.echarts3) {\n        this.echarts3.resize()\n      }\n    },\n    markerstyle() {\n      var divstyle = ''\n      divstyle += '<img :src=\"' + this.img + '\">'\n      divstyle\n    },\n    handleClick(tab, event) {\n      // console.log(tab, event)\n    },\n    drawLine() {\n      this.echarts1 = echarts.init(document.getElementById('echarts1'))\n      this.echarts1.setOption(this.option1)\n      window.addEventListener('resize', () => {\n        this.echarts1.resize()\n      })\n    },\n    // 热力图\n    supportcanvas() {\n      var that = this\n      const map = amapManager2.getMap()\n      if (map) {\n        var heatmap\n        map.plugin(['AMap.Heatmap'], function() {\n          heatmap = new AMap.Heatmap(map, {\n            radius: 25,\n            opacity: [0, 0.8],\n            gradient: {\n              0.5: 'blue',\n              0.65: 'rgb(117,211,248)',\n              0.7: 'rgb(0, 255, 0)',\n              0.9: '#ffea00',\n              1.0: 'red'\n            }\n          })\n          heatmap.setDataSet({\n            data: that.supportData,\n            max: 1600\n          })\n        })\n      } else {\n        this.events = {\n          init(o) {\n            console.log(o)\n            var heatmap\n            o.plugin(['AMap.Heatmap'], function() {\n              heatmap = new AMap.Heatmap(o, {\n                radius: 25,\n                opacity: [0, 0.8],\n                gradient: {\n                  0.5: 'blue',\n                  0.65: 'rgb(117,211,248)',\n                  0.7: 'rgb(0, 255, 0)',\n                  0.9: '#ffea00',\n                  1.0: 'red'\n                }\n              })\n              heatmap.setDataSet({\n                data: that.supportData,\n                max: 1600\n              })\n            })\n          }\n        }\n      }\n    },\n    echaers2fund() {\n      this.echarts2 = echarts.init(document.getElementById('echarts2'))\n      this.echarts2.setOption(this.option2)\n      window.addEventListener('resize', () => {\n        this.echarts2.resize()\n      })\n    },\n    echaers3fund() {\n      this.echarts3 = echarts.init(document.getElementById('echarts3'))\n      this.echarts3.setOption(this.option3)\n      window.addEventListener('resize', () => {\n        this.echarts3.resize()\n      })\n    }\n  }\n}\n",null]}