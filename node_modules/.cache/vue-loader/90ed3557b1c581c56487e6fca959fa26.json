{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\income\\components\\charts.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\income\\components\\charts.vue","mtime":1577252313493},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getList } from '@/api/car'\nimport RingChart from '@/components/Charts/RingChart'\nimport StackChart from '@/components/Charts/StackChart'\nimport LineChart from '@/components/Charts/LineChart'\nimport IncomeData from './data'\n\nexport default {\n  name: 'Charts',\n  components: { RingChart, StackChart, LineChart },\n  props: {\n    scenicName: {\n      type: String,\n      default: '全部景区'\n    }\n  },\n  data() {\n    const now = new Date()\n    return {\n      activeName: '汇总',\n      tabList: [\n        { id: 1, name: '汇总', chartName: '总收入', itemName: ['总收入数据统计', '今年业态收入占比', '历年业态收入统计', '今年每月收入统计'], url: '/income/findAllIncome', tabClick: true, data: IncomeData['tab1'] },\n        { id: 2, name: '门票', chartName: '门票销售', itemName: ['门票销售数据统计', '今年门票销售额占比', '历年门票销售额统计', '今年每月门票销售额统计'], url: '/income/findTicketIncome', tabClick: false, data: IncomeData['tab2'] },\n        { id: 3, name: '餐饮', chartName: '餐饮营业', itemName: ['餐饮营业数据统计', '今年餐饮营业额占比', '历年餐饮营业额统计', '今年每月餐饮营业额统计'], url: '/income/findFoodIncome', tabClick: false, data: IncomeData['tab3'] },\n        { id: 4, name: '零售', chartName: '零售营业', itemName: ['零售营业数据统计', '今年零售营业额占比', '历年零售营业额统计', '今年每月零售营业额统计'], url: '/income/findSaleIncome', tabClick: false, data: IncomeData['tab4'] },\n        { id: 5, name: '剧场', chartName: '剧场营业', itemName: ['剧场营业数据统计', '今年剧场营业额占比', '历年剧场营业额统计', '今年每月剧场营业额统计'], url: '/income/findTheatreIncome', tabClick: false, data: IncomeData['tab5'] },\n        { id: 6, name: '酒店', chartName: '酒店营业', itemName: ['酒店营业数据统计', '今年酒店营业额占比', '历年酒店营业额统计', '今年每月酒店营业额统计'], url: '/income/findHotelIncome', tabClick: false, data: IncomeData['tab6'] },\n        { id: 7, name: '停车场', chartName: '停车场营业', itemName: ['停车场营业数据统计', '今年停车场营业额占比', '历年停车场营业额统计', '今年每月停车场营业额统计'], url: '/income/findParkcarIncome', tabClick: false, data: IncomeData['tab7'] }\n      ],\n      jdActive: 1,\n      thisY: now.getFullYear(),\n      lastY: now.getFullYear() - 1,\n      beforeY: now.getFullYear() - 2,\n      monthCount: now.getMonth() + 1\n    }\n  },\n  mounted() {\n    this.$nextTick(() => { // 汇总统计\n      this.getTabList('/income/findAllIncome', { areaName: this.scenicName }).then(data => {\n        this.formatAllData(data.data, 0)\n      })\n    })\n  },\n  methods: {\n    handleClick(tab, event) { // tab点击事件\n      var that = this\n      const tabItem = that.tabList[parseInt(tab.index)]\n      if (!tabItem.tabClick) {\n        this.getTabList(tabItem.url, { areaName: this.scenicName }).then(data => {\n          this.formatAllData(data.data, parseInt(tab.index))\n        })\n      }\n    },\n    getTabList(url, query) {\n      return new Promise((resolve, reject) => {\n        getList(url, query).then(response => {\n          resolve(response)\n        }).catch(error => {\n          reject(error)\n        })\n      })\n    },\n    formatAllData(data, tabId) { // 生成报表数据\n      if (data.length > 0) {\n        var that = this\n        var itemData = that.tabList[tabId].data\n        var chart1 = itemData.chart1\n        var chart2 = itemData.chart2.sdata\n        var chart3 = itemData.chart3.sdata\n        var table1 = itemData.table1\n        var lineData = {}\n        data.forEach(item => {\n          if (item.dateYear === 0) { // 年度统计\n            if (item.imcomeType <= 5 || item.imcomeType === 8) {\n              let itemIndex = item.imcomeType - 1\n              if (tabId > 0) {\n                itemIndex = 0\n              } else {\n                if (item.imcomeType === 8) {\n                  itemIndex = 5\n                }\n              }\n              switch (parseInt(item.dateName)) {\n                case that.beforeY:\n                  chart2[itemIndex][0] = item.imcomeValue\n                  break\n                case that.lastY:\n                  chart2[itemIndex][1] = item.imcomeValue\n                  break\n                case that.thisY:\n                  chart2[itemIndex][2] = item.imcomeValue\n                  if (tabId === 0) {\n                    chart1.sdata[itemIndex].value = item.imcomeValue\n                  }\n                  break\n                default:\n                  break\n              }\n            }\n          } else if (item.dateYear === 1) { // 每月统计\n            if (item.imcomeType <= 5 || item.imcomeType === 8) {\n              if (tabId > 0) {\n                if (!lineData.hasOwnProperty(item.name)) {\n                  lineData[item.name] = new Array(that.monthCount).fill(0)\n                }\n                lineData[item.name][parseInt(item.dateName) - 1] = item.imcomeValue\n              } else {\n                let itemIndex = item.imcomeType - 1\n                if (item.imcomeType === 8) {\n                  itemIndex = 5\n                }\n                chart3[itemIndex][parseInt(item.dateName) - 1] = item.imcomeValue\n              }\n            }\n          } else if (item.dateYear === 8) { // 总额、同比、环比以及饼图\n            table1.monthSum = item.thismonthIncome || 0\n            table1.monthTB = item.thismonthSame\n            table1.monthHB = item.thismonthDis\n            table1.weekSum = item.thisweekIncome || 0\n            table1.weekTB = item.thisweekSame\n            table1.weekHB = item.thisweekDis\n            if (tabId > 0) {\n              var pieLData = []\n              var pieSData = []\n              for (var pie in item.rateMap) {\n                pieLData.push(pie)\n                pieSData.push({ 'name': pie, 'value': item.rateMap[pie] })\n              }\n              chart1.ldata = pieLData\n              chart1.sdata = pieSData\n\n              if (tabId === 5) { // 酒店入住率\n                var checkIn = {}\n                item.upMonthHotelRateMap.forEach(rate => {\n                  if (!checkIn.hasOwnProperty(rate.hotelName)) {\n                    var days = 31\n                    var upMonth = that.monthCount - 1\n                    if (upMonth === 2) {\n                      days = that.thisY % 4 === 0 ? 29 : 28\n                    } else if (upMonth === 4 || upMonth === 6 || upMonth === 9 || upMonth === 11) {\n                      days = 30\n                    }\n                    checkIn[rate.hotelName] = new Array(days).fill(0)\n                  }\n                  var rateDate = new Date(rate.date)\n                  checkIn[rate.hotelName][rateDate.getDate() - 1] = parseFloat(rate.roomPrice.toFixed(2))\n                })\n                itemData.chart4.ldata = Object.keys(checkIn)\n                var checkSData = []\n                for (var check in checkIn) {\n                  checkSData.push(checkIn[check])\n                }\n                itemData.chart4.sdata = checkSData\n              }\n            }\n          }\n        })\n        that.$set(that.tabList[tabId].data.chart2, 'sdata', null)\n        that.$set(that.tabList[tabId].data.chart2, 'sdata', chart2)\n        if (tabId > 0) {\n          that.$set(that.tabList[tabId].data.chart3, 'ldata', Object.keys(lineData))\n          var sdata = []\n          for (var line in lineData) {\n            sdata.push(lineData[line])\n          }\n          chart3 = sdata\n        }\n        that.$set(that.tabList[tabId].data.chart3, 'sdata', null)\n        that.$set(that.tabList[tabId].data.chart3, 'sdata', chart3)\n      }\n    }\n  }\n}\n",null]}