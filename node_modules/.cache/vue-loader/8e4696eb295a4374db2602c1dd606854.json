{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\login\\index.vue","mtime":1576638137209},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport LoginBG from '@/assets/images/login-background.jpg'\nimport LoginText from '@/assets/images/login-text.png'\nimport { validUsername } from '@/utils/validate'\nimport Logo from './components/Logo'\n\nexport default {\n  name: 'Login',\n  components: { Logo },\n  data() {\n    const validateUsername = (rule, value, callback) => {\n      if (!validUsername(value)) {\n        callback(new Error('请输入用户名'))\n      } else {\n        callback()\n      }\n    }\n    const validatePassword = (rule, value, callback) => {\n      if (value.length < 6) {\n        callback(new Error('密码不能少于6位'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      loginBG: {\n        backgroundImage: 'url(' + LoginBG + ')',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: '100% auto'\n      },\n      loginText: LoginText,\n      loginForm: {\n        username: 'admin',\n        password: '111111'\n      },\n      loginRules: {\n        username: [{ required: true, trigger: 'blur', validator: validateUsername }],\n        password: [{ required: true, trigger: 'blur', validator: validatePassword }]\n      },\n      passwordType: 'password',\n      capsTooltip: false,\n      loading: false,\n      showDialog: false,\n      redirect: undefined,\n      otherQuery: {},\n      userinput: false,\n      passinput: false,\n      checked: false\n    }\n  },\n  watch: {\n    $route: {\n      handler: function(route) {\n        const query = route.query\n        if (query) {\n          this.redirect = query.redirect\n          this.otherQuery = this.getOtherQuery(query)\n        }\n      },\n      immediate: true\n    }\n  },\n  created() {\n    // window.addEventListener('storage', this.afterQRScan)\n    this.keyupEnter()\n  },\n  mounted() {\n    if (this.loginForm.username === '') {\n      this.$refs.username.focus()\n    } else if (this.loginForm.password === '') {\n      this.$refs.password.focus()\n    }\n  },\n  destroyed() {\n    // window.removeEventListener('storage', this.afterQRScan)\n  },\n  methods: {\n    keyupEnter() {\n      document.onkeydown = e => {\n        const body = document.getElementsByTagName('body')[0]\n        if (e.keyCode === 13 && e.target.baseURI.match(/ManageSys/) && e.target === body) {\n          this.handleLogin()\n        }\n      }\n    },\n    checkCapslock({ shiftKey, key } = {}) {\n      if (key && key.length === 1) {\n        if (shiftKey && (key >= 'a' && key <= 'z') || !shiftKey && (key >= 'A' && key <= 'Z')) {\n          this.capsTooltip = true\n        } else {\n          this.capsTooltip = false\n        }\n      }\n      if (key === 'CapsLock' && this.capsTooltip === true) {\n        this.capsTooltip = false\n      }\n    },\n    showPwd() {\n      if (this.passwordType === 'password') {\n        this.passwordType = ''\n      } else {\n        this.passwordType = 'password'\n      }\n      this.$nextTick(() => {\n        this.$refs.password.focus()\n      })\n    },\n    focusinput(type) {\n      if (type === 1) {\n        this.userinput = true\n      } else {\n        this.passinput = true\n      }\n    },\n    blurinput(type) {\n      if (type === 1) {\n        this.userinput = false\n      } else {\n        this.capsTooltip = false\n        this.passinput = false\n      }\n    },\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true\n          this.$store.dispatch('user/login', this.loginForm)\n            .then(() => {\n              if (this.redirect === '/') {\n                this.redirect = '/home'\n              }\n              this.$router.push({ path: this.redirect || '/home', query: this.otherQuery })\n              if (this.redirect !== '/home') {\n                this.$store.dispatch('app/setTopMenuIndex', '3')\n              }\n              this.loading = false\n            })\n            .catch(() => {\n              this.loading = false\n            })\n        } else {\n          console.log('登录失败！')\n          return false\n        }\n      })\n    },\n    getOtherQuery(query) {\n      return Object.keys(query).reduce((acc, cur) => {\n        if (cur !== 'redirect') {\n          acc[cur] = query[cur]\n        }\n        return acc\n      }, {})\n    }\n  }\n}\n",null]}