{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\news\\guide.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\news\\guide.vue","mtime":1576638137672},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ConciseBG from '@/assets/images/guide_concise.png'\nimport GuideMap from '@/assets/images/guide_map.jpg'\nimport TrackBus from '@/assets/images/trackBus.png'\nimport TrackBus2 from '@/assets/images/trackBus2.png'\nimport Line1 from '@/assets/images/guide_line2.jpg'\nimport Line2 from '@/assets/images/guide_line1.jpg'\nimport Timg from '@/assets/images/guide_timg.png'\nimport Multi1 from '@/assets/images/guide_multi1.jpg'\nimport Multi2 from '@/assets/images/guide_multi2.jpg'\nimport Multi3 from '@/assets/images/guide_multi3.jpg'\nimport MultiShow from '@/assets/images/guide_show.png'\nimport MultiClose from '@/assets/images/guide_show_close.png'\nimport VueAMap from 'vue-amap'\n\nvar amapManager = new VueAMap.AMapManager()\nvar amapManager2 = new VueAMap.AMapManager()\nexport default {\n  name: 'Guide',\n  data() {\n    const self = this\n    return {\n      activeName: '简洁站台',\n      tabList: [{ id: 0, name: '简洁站台' }, { id: 1, name: '多功能站台' }],\n      conciseBG: ConciseBG,\n      time: '',\n      zoom: 13,\n      center: [103.51502, 30.783322],\n      amapManager,\n      amapManager2,\n      pathSimplifierIns: null,\n      pathSimplifierIns2: null,\n      url: GuideMap,\n      bounds: [[103.493247, 30.767875], [103.540969, 30.800025]],\n      events: {\n        init(o) {\n          o.setFeatures()\n          self.$nextTick(() => {\n            self.initStarck(1)\n          })\n        },\n        click(e) {\n          // const { lng, lat } = e.lnglat\n          // console.log(lng + ', ' + lat)\n        }\n      },\n      events2: {\n        init(o) {\n          o.setFeatures()\n          self.$nextTick(() => {\n            self.initStarck(2)\n          })\n        },\n        click(e) {\n          // const { lng, lat } = e.lnglat\n          // console.log(lng + ', ' + lat)\n        }\n      },\n      trackBus: TrackBus,\n      trackBus2: TrackBus2,\n      navg: null,\n      navgReverse: null,\n      navg2: null,\n      navgReverse2: null,\n      lineBG1: {\n        backgroundImage: 'url(' + Line1 + ')',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: '100% 100%'\n      },\n      lineBG2: {\n        backgroundImage: 'url(' + Line2 + ')',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: '100% 100%'\n      },\n      lineIndex1: 1,\n      lineSite1: [\n        { index: 1, name: '山林氧吧公园' },\n        { index: 2, name: '记忆森林康养公园' },\n        { index: 3, name: '动物主题酒店' },\n        { index: 4, name: '云端动物园' },\n        { index: 5, name: '大熊猫商服基地' },\n        { index: 6, name: '地中海俱乐部' },\n        { index: 7, name: '竹博览园' },\n        { index: 8, name: '森林冒险公园' },\n        { index: 9, name: '大明禅寺文化度假区' },\n        { index: 10, name: '大明禅寺公园' },\n        { index: 11, name: '戏文化精品酒店' },\n        { index: 12, name: '重庆路运动公园' },\n        { index: 13, name: '威士忌主题酒店' },\n        { index: 14, name: '滨河湿地公园' },\n        { index: 15, name: '滨河商业街区' },\n        { index: 16, name: '观音沟生态公园' },\n        { index: 17, name: '希尔顿温泉度假酒店' },\n        { index: 18, name: '综合接待区' },\n        { index: 19, name: '山林氧吧公园' }\n      ],\n      lineIndex2: 1,\n      lineSite2: [\n        { index: 1, name: '云端动物园' },\n        { index: 2, name: '大熊猫商服基地' },\n        { index: 3, name: '地中海俱乐部' },\n        { index: 4, name: '竹博览园' },\n        { index: 5, name: '森林冒险公园' },\n        { index: 6, name: '大明禅寺公园' },\n        { index: 7, name: '戏文化精品酒店' },\n        { index: 8, name: '重庆路运动公园' },\n        { index: 9, name: '滨河湿地公园' },\n        { index: 10, name: '滨河商业街区' },\n        { index: 11, name: '观音沟生态公园' },\n        { index: 12, name: '综合接待区' },\n        { index: 13, name: '云端动物园' }\n      ],\n      timg: Timg,\n      multi1: Multi1,\n      multi2: Multi2,\n      multi3: Multi3,\n      multiShow: MultiShow,\n      close: {\n        backgroundImage: 'url(' + MultiClose + ')',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: '100% 100%'\n      },\n      showMulti: false\n    }\n  },\n  created() {\n    this.getData()\n    var that = this\n    setInterval(() => {\n      if (that.lineIndex1 >= 19) {\n        that.lineIndex1 = 1\n      } else {\n        that.lineIndex1++\n      }\n\n      if (that.lineIndex2 >= 13) {\n        that.lineIndex2 = 1\n      } else {\n        that.lineIndex2++\n      }\n    }, 2000)\n  },\n  beforeDestroy() {\n    if (!this.navg) {\n      return\n    }\n    this.navg.destroy()\n    this.navg = null\n\n    if (!this.navg2) {\n      return\n    }\n    this.navg2.destroy()\n    this.navg2 = null\n  },\n  methods: {\n    handleClick(tab, event) {},\n    getData() {\n      const t = new Date() // 创建一个date的对象，才可以引用相关的date\n      this.time =\n        t.getFullYear() +\n        '年' +\n        (t.getMonth() + 1) +\n        '月' +\n        t.getDate() +\n        '日 ' +\n        t.getHours() +\n        ':' +\n        this.formatTimeItem(t.getMinutes()) +\n        ':' +\n        this.formatTimeItem(t.getSeconds())\n      const that = this\n      setTimeout(() => {\n        that.getData()\n      }, 1000)\n    },\n    formatTimeItem(item) {\n      return item < 10 ? '0' + item : item\n    },\n    initStarck(index) {\n      var that = this // UI 组件库 轨迹展示\n      AMapUI.load(['ui/misc/PathSimplifier', 'lib/$'], function(\n        PathSimplifier,\n        $\n      ) {\n        if (!PathSimplifier.supportCanvas) {\n          this.$message({\n            message: '当前游览器不支持线路轨迹',\n            type: 'error',\n            duration: 3000\n          })\n          return\n        }\n\n        const emptyLineStyle = {\n          lineWidth: 0,\n          fillStyle: null,\n          strokeStyle: null,\n          borderStyle: null\n        }\n\n        var pathSimplifierIns = new PathSimplifier({\n          zIndex: 300,\n          // autoSetFitView:false,\n          map: index === 1 ? amapManager.getMap() : amapManager2.getMap(), // 所属的地图实例\n          autoSetFitView: false,\n          getPath: function(pathData, pathIndex) {\n            return pathData.path\n          },\n          getHoverTitle: function(pathData, pathIndex, pointIndex) {\n            // if (pointIndex >= 0) {\n            //   return pathData.name + '，点：' + pointIndex + '/' + pathData.path.length\n            // }\n            // return pathData.name + '，点数量' + pathData.path.length\n            return null\n          },\n          renderOptions: {\n            renderAllPointsIfNumberBelow: -1, // 绘制路线节点，如不需要可设置为-1\n            // 将点、线相关的style全部置emptyLineStyle\n            pathLineStyle: emptyLineStyle,\n            pathLineSelectedStyle: emptyLineStyle,\n            pathLineHoverStyle: emptyLineStyle,\n            keyPointStyle: emptyLineStyle,\n            startPointStyle: emptyLineStyle,\n            endPointStyle: emptyLineStyle,\n            keyPointHoverStyle: emptyLineStyle,\n            keyPointOnSelectedPathLineStyle: emptyLineStyle\n          }\n        })\n\n        if (index === 1) {\n          that.pathSimplifierIns = pathSimplifierIns\n        } else {\n          that.pathSimplifierIns2 = pathSimplifierIns\n        }\n\n        var pathData = [\n          [103.516162, 30.794717],\n          [103.509038, 30.795233],\n          [103.504403, 30.791251],\n          [103.499599, 30.786016],\n          [103.497281, 30.779675],\n          [103.499513, 30.773923],\n          [103.503032, 30.775545],\n          [103.507409, 30.776946],\n          [103.510413, 30.777462],\n          [103.511873, 30.773554],\n          [103.513332, 30.769867],\n          [103.514877, 30.768465],\n          [103.518996, 30.769572],\n          [103.52346, 30.770678],\n          [103.522945, 30.773259],\n          [103.529468, 30.773333],\n          [103.530841, 30.777094],\n          [103.52612, 30.77938],\n          [103.528438, 30.786237],\n          [103.53127, 30.789703],\n          [103.527065, 30.793021],\n          [103.516078, 30.794717]\n        ]\n        var pathUp = pathData.concat()\n        var pathDown = pathData.reverse()\n\n        // 设置数据\n        pathSimplifierIns.setData([\n          {\n            name: '上行',\n            path: pathUp\n          },\n          {\n            name: '下行',\n            path: pathDown\n          }\n        ])\n\n        // 对第一条线路（即索引 0）创建一个巡航器\n        if (index === 1) {\n          that.navg = pathSimplifierIns.createPathNavigator(0, {\n            loop: true, // 循环播放\n            speed: 400, // 巡航速度，单位千米/小时\n            pathNavigatorStyle: {\n              width: 16,\n              height: 32,\n              content: PathSimplifier.Render.Canvas.getImageContent(\n                that.trackBus,\n                onload,\n                onerror\n              ),\n              strokeStyle: null,\n              fillStyle: null,\n              pathLinePassedStyle: {\n                // 经过路径的样式\n                lineWidth: 0,\n                strokeStyle: 'black',\n                dirArrowStyle: {\n                  stepSpace: 15,\n                  strokeStyle: 'red'\n                }\n              }\n            }\n          })\n          that.navg.start()\n\n          that.navgReverse = pathSimplifierIns.createPathNavigator(1, {\n            loop: true, // 循环播放\n            speed: 400, // 巡航速度，单位千米/小时\n            pathNavigatorStyle: {\n              width: 16,\n              height: 32,\n              content: PathSimplifier.Render.Canvas.getImageContent(\n                that.trackBus2,\n                onload,\n                onerror\n              ),\n              strokeStyle: null,\n              fillStyle: null,\n              pathLinePassedStyle: {\n                // 经过路径的样式\n                lineWidth: 0,\n                strokeStyle: 'black',\n                dirArrowStyle: {\n                  stepSpace: 15,\n                  strokeStyle: 'red'\n                }\n              }\n            }\n          })\n          that.navgReverse.start()\n        } else {\n          that.navg2 = pathSimplifierIns.createPathNavigator(0, {\n            loop: true, // 循环播放\n            speed: 400, // 巡航速度，单位千米/小时\n            pathNavigatorStyle: {\n              width: 16,\n              height: 32,\n              content: PathSimplifier.Render.Canvas.getImageContent(\n                that.trackBus,\n                onload,\n                onerror\n              ),\n              strokeStyle: null,\n              fillStyle: null,\n              pathLinePassedStyle: {\n                // 经过路径的样式\n                lineWidth: 0,\n                strokeStyle: 'black',\n                dirArrowStyle: {\n                  stepSpace: 15,\n                  strokeStyle: 'red'\n                }\n              }\n            }\n          })\n          that.navg2.start()\n\n          that.navgReverse2 = pathSimplifierIns.createPathNavigator(1, {\n            loop: true, // 循环播放\n            speed: 400, // 巡航速度，单位千米/小时\n            pathNavigatorStyle: {\n              width: 16,\n              height: 32,\n              content: PathSimplifier.Render.Canvas.getImageContent(\n                that.trackBus2,\n                onload,\n                onerror\n              ),\n              strokeStyle: null,\n              fillStyle: null,\n              pathLinePassedStyle: {\n                // 经过路径的样式\n                lineWidth: 0,\n                strokeStyle: 'black',\n                dirArrowStyle: {\n                  stepSpace: 15,\n                  strokeStyle: 'red'\n                }\n              }\n            }\n          })\n          that.navgReverse2.start()\n        }\n      })\n    }\n  }\n}\n",null]}