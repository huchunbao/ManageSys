{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\login\\authorize.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\login\\authorize.vue","mtime":1576638137186},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Logo from './components/Logo'\n\nexport default {\n  name: 'Authorize',\n  components: { Logo },\n  data() {\n    const validateUnit = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入授权单位'))\n      } else {\n        callback()\n      }\n    }\n    const validateKey = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入授权密钥'))\n      } else {\n        callback()\n      }\n    }\n\n    return {\n      authorizeForm: {\n        unit: '',\n        key: ''\n      },\n      authorizeRules: {\n        unit: [{ required: true, trigger: 'blur', validator: validateUnit }],\n        key: [{ required: true, trigger: 'blur', validator: validateKey }]\n      },\n      unitInput: false,\n      keyInput: false\n    }\n  },\n  methods: {\n    focusinput(type) {\n      switch (type) {\n        case 1:\n          this.unitInput = true\n          break\n        case 2:\n          this.keyInput = true\n          break\n        default:\n          break\n      }\n    },\n    blurinput(type) {\n      switch (type) {\n        case 1:\n          this.unitInput = false\n          break\n        case 2:\n          this.keyInput = false\n          break\n        default:\n          break\n      }\n    },\n    handleCancel() {\n      this.$router.push({ path: '/login' })\n    },\n    handleSure() {\n      this.$router.push({ path: '/login' })\n    }\n  }\n}\n",null]}