{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\yingzhi\\map.vue?vue&type=script&scoped=true&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\yingzhi\\map.vue","mtime":1576638136868},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport daoy from './daoyou.vue'\r\nexport default {\r\n  name: 'About',\r\n  components: {\r\n    // Ditu,\r\n    daoy\r\n  },\r\n  data() {\r\n    return {\r\n      dh: false,\r\n      map: null,\r\n      ce: '监控',\r\n      marker: []\r\n    }\r\n  },\r\n  computed: {},\r\n  watch: {},\r\n  mounted() {\r\n    this.log()\r\n    this.map = new AMap.Map('container', {\r\n      resizeEnable: true, // 是否监控地图容器尺寸变化\r\n      zoom: 11, // 初始化地图层级\r\n      center: [100.194439, 25.90931] // 初始化地图中心点\r\n    })\r\n    this.qingmark()\r\n  },\r\n  methods: {\r\n    dhf() {\r\n      this.dh = !this.dh\r\n    },\r\n    jing1(dat) {\r\n      this.ce = dat\r\n      this.qingmark()\r\n    },\r\n    jing2(dat) {\r\n      this.map.remove(this.marker)\r\n      this.map.setFitView()\r\n      this.marker = []\r\n      this.ce = dat\r\n      // this.$axios({\r\n      //   url: 'http://192.168.1.17:8081/notifyDate/getPatrolNotify',\r\n      //   method: 'get',\r\n      //   headers: {\r\n      //     'Content-Type': 'application/x-www-form-urlencoded'\r\n      //   }\r\n      // }).then(response => {\r\n      //   this.marker.push(\r\n      //     new AMap.Marker({\r\n      //       icon: 'https://webapi.amap.com/theme/v1.3/markers/n/mark_b.png',\r\n      //       position: [\r\n      //         response.data.data.Longitude / 360000 + 0.006216,\r\n      //         response.data.data.Latitude / 360000 + 0.001256\r\n      //       ]\r\n      //     })\r\n      //   )\r\n      //   // this.marker[i].DeviceName\r\n      //   this.marker[0].setTitle(response.data.data.DeviceName)\r\n      //   this.marker[0].on('click', function() {\r\n      //     this.$emit('fatherMethod', response.data.data.DeviceID)\r\n      //   })\r\n      //   this.map.add(this.marker)\r\n      //   this.map.setFitView()\r\n      // })\r\n    },\r\n    tiao(i) {\r\n      this.$router.push({\r\n        path: i\r\n      })\r\n    },\r\n    log() {\r\n      // var qs = require('querystring')\r\n    },\r\n    qingmark() {\r\n      // var qs = require('querystring')\r\n      // var the = this\r\n      // var data = {\r\n      //   pointtype: this.ce\r\n      // }\r\n      // this.$axios({\r\n      //   url: 'http://192.168.1.17:8081/dispatch/getDispatchByPointtype',\r\n      //   method: 'post',\r\n      //   data: qs.stringify(data),\r\n      //   headers: {\r\n      //     'Content-Type': 'application/x-www-form-urlencoded'\r\n      //   }\r\n      // }).then(response => {\r\n      //   // this.tiao('map')\r\n      //   console.log(response.data.data)\r\n      //   this.map.remove(this.marker)\r\n      //   this.map.setFitView()\r\n      //   this.marker = []\r\n      //   for (var i = 0; i < response.data.data.length; i++) {\r\n      //     this.marker.push(\r\n      //       new AMap.Marker({\r\n      //         icon: 'https://webapi.amap.com/theme/v1.3/markers/n/mark_b.png',\r\n      //         position: [\r\n      //           response.data.data[i].latitude,\r\n      //           response.data.data[i].longitude\r\n      //         ]\r\n      //       })\r\n      //     )\r\n      //     the.marker[i].setTitle(response.data.data[i].pointname)\r\n      //   }\r\n      //   this.map.add(this.marker)\r\n      //   this.map.setFitView()\r\n      // })\r\n    }\r\n  }\r\n}\r\n",null]}