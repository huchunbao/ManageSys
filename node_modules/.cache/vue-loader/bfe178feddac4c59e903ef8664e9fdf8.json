{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\structure\\components\\TreeTransfer.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\structure\\components\\TreeTransfer.vue","mtime":1577252313190},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { get, post, byDelete } from '@/api/axios'\nimport { mapGetters } from 'vuex'\nexport default {\n  props: {\n    selectCompanyId: {\n      type: Number,\n      default: 0\n    },\n    btnStatus: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      authLoading: '暂无数据',\n      setLoading: '暂无数据',\n      sysRootNode: [],\n      sysData: [],\n      setKey: 'id',\n      setPKey: 'pid',\n      setData: [],\n      setDefault: [],\n      defaultProps: { children: 'children', label: 'name' }\n    }\n  },\n  computed: {\n    ...mapGetters(['companyId'])\n  },\n  watch: {\n    selectCompanyId: {\n      handler(newVal, oldVal) {\n        this.getCompanySys(newVal)\n      }\n    }\n  },\n  created() {\n    this.getAllSys()\n  },\n  methods: {\n    getAllSys() {\n      this.authLoading = '数据加载中...'\n      if (this.companyId === 12) { // 银科环企成员获取总的功能树\n        get('/sysfunc/tree', null).then(response => {\n          if (response.status === 0) {\n            this.sysData = response.data\n            this.sysRootNode = JSON.parse(JSON.stringify(response.data))\n            this.sysRootNode[0].children = []\n          }\n          this.authLoading = '暂无数据'\n        })\n      } else { // 客户公司获取授权后的功能树\n        this.setKey = 'funcId'\n        this.setPKey = 'funcPid'\n        get('/cpfunc/tree/' + this.companyId, null).then(response => {\n          if (response.status === 0) {\n            this.sysData = response.data\n            this.sysRootNode = JSON.parse(JSON.stringify(response.data))\n            this.sysRootNode[0].children = []\n          }\n          this.authLoading = '暂无数据'\n        })\n\n        this.getCompanySys(this.selectCompanyId)\n      }\n    },\n    getCompanySys(companyId) { // 已授权的功能列表\n      if (this.selectCompanyId > 0) {\n        this.setLoading = '数据加载中...'\n        get('/cpfunc/tree/' + this.selectCompanyId, null).then(response => {\n          if (response.status === 0) {\n            this.setData = response.data\n            if (response.data.length > 0) {\n              this.setDefault = this.getTreeNode(response.data)\n            } else {\n              this.setDefault = []\n            }\n          }\n          this.setLoading = '暂无数据'\n        })\n      }\n    },\n    addAuth() { // 添加授权功能\n      if (this.btnStatus === 0) { return }\n      var that = this\n      var c = this.$refs.sysTree.getCheckedNodes(false, true)\n      if (c.length <= 1 || c === null) {\n        return\n      } else {\n        that.setData = JSON.parse(JSON.stringify(this.sysRootNode))\n        that.$nextTick(() => {\n          var d = JSON.parse(JSON.stringify(c))\n          var node\n          for (var i = 1; i < d.length; i++) {\n            node = d[i]\n            node.children = []\n            that.$refs.setTree.append(node, node[this.setPKey])\n          }\n        })\n      }\n    },\n    removeAuth() { // 删除授权功能\n      if (this.btnStatus === 0) { return }\n      var that = this\n      var sc = that.$refs.setTree.getCheckedKeys()\n      for (var r = 0; r < sc.length; r++) {\n        that.$refs.setTree.remove(sc[r])\n        that.$refs.sysTree.setChecked(sc[r], false)\n      }\n    },\n    async saveAuth() { // 保存授权功能\n      var set = this.$refs.setTree.data\n      if (set === null) { // 没有勾选\n        if (this.setDefault.length > 0) {\n          // 删除\n          if (await this.deleteAuth(this.setDefault)) {\n            this.$message({\n              message: '授权保存成功',\n              type: 'success',\n              duration: 3000\n            })\n            this.setDefault = []\n          } else {\n            this.$message({\n              message: '授权保存失败',\n              type: 'warning',\n              duration: 3000\n            })\n          }\n        } else {\n          this.$message({\n            message: '授权保存成功',\n            type: 'success',\n            duration: 3000\n          })\n        }\n      } else {\n        var authList = this.getTreeNode(set)\n        if (this.setDefault.length > 0) {\n          var old = JSON.parse(JSON.stringify(this.setDefault))\n          var auth = JSON.parse(JSON.stringify(authList))\n          for (var j = 0; j < authList.length; j++) { // 删除\n            var delIndex = old.findIndex(item => {\n              return item.name === authList[j].name\n            })\n            if (delIndex >= 0) {\n              old.splice(delIndex, 1)\n            }\n          }\n          var delRet = true\n          if (old.length > 0) {\n            delRet = await this.deleteAuth(old)\n          }\n          if (delRet) {\n            for (var i = 0; i < this.setDefault.length; i++) { // 新增\n              var index = auth.findIndex(item => {\n                return item.name === this.setDefault[i].name\n              })\n              if (index >= 0) {\n                auth.splice(index, 1)\n              }\n            }\n            if (auth.length > 0) {\n              if (await this.postAuth(auth)) {\n                this.$message({\n                  message: '授权保存成功',\n                  type: 'success',\n                  duration: 3000\n                })\n              } else {\n                this.$message({\n                  message: '授权保存失败',\n                  type: 'warning',\n                  duration: 3000\n                })\n              }\n            } else {\n              this.$message({\n                message: '授权保存成功',\n                type: 'success',\n                duration: 3000\n              })\n            }\n          } else {\n            this.$message({\n              message: '授权保存失败',\n              type: 'warning',\n              duration: 3000\n            })\n          }\n        } else {\n          // 添加\n          if (await this.postAuth(authList)) {\n            this.$message({\n              message: '授权保存成功',\n              type: 'success',\n              duration: 3000\n            })\n          } else {\n            this.$message({\n              message: '授权保存失败',\n              type: 'warning',\n              duration: 3000\n            })\n          }\n        }\n        this.getCompanySys(this.selectCompanyId)\n        this.$emit('authend')\n      }\n    },\n    getTreeNode(data) { // 判断节点是否有子节点\n      var list = []\n      const fn = (source) => {\n        source.forEach(el => {\n          list.push(el)\n          el.children && el.children.length > 0 ? fn(el.children) : ''\n        })\n      }\n      fn(data) // 获取树列表转为数组\n      return list\n    },\n    deleteAuth(list) { // 清空授权\n      var delList = []\n      list.forEach(item => {\n        delList.push(item.id)\n      })\n      return new Promise((resolve, reject) => {\n        byDelete('/cpfunc', delList).then(response => {\n          resolve(response.status === 0)\n        }).catch(() => {\n          reject(false)\n        })\n      })\n    },\n    postAuth(list) { // 新增授权\n      if (this.setPKey === 'funcPid') {\n        for (var c = 0; c < list.length; c++) {\n          list[c].id = list[c].funcId\n          list[c].pid = list[c].funcPid\n        }\n      }\n      return new Promise((resolve, reject) => {\n        post('/cpfunc/' + this.selectCompanyId, list).then(response => {\n          resolve(response.status === 0)\n        }).catch(() => {\n          reject(false)\n        })\n      })\n    }\n  }\n}\n",null]}