{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\structure\\components\\role.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\structure\\components\\role.vue","mtime":1577252313188},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { get, post, put, byDelete } from '@/api/axios'\nexport default {\n  props: {\n    companyId: {\n      type: Number,\n      default: 0\n    },\n    addType: {\n      type: Number,\n      default: 0\n    },\n    roleId: {\n      type: Number,\n      default: 0\n    },\n    roleName: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      companyLoading: '暂无数据',\n      addRoleForm: {\n        name: this.roleName\n      },\n      addRoleRules: {\n        name: [{ required: true, message: '请输入角色名称', trigger: 'blur' }]\n      },\n      sysData: [],\n      sysRootNode: [],\n      setData: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      defaultAuthList: [], // 修改角色，默认id列表\n      functionData: [],\n      getList: {}, // 存储点击树列表获取到的功能列表\n      clickList: {}, // 存储有点击的功能列表\n      addList: {}, // 添加的功能\n      updateList: {}, // 修改的功能\n      deleteList: {}, // 删除的功能\n      defaultFuncAuth: {\n        roleId: this.roleId,\n        cpFuncId: 0,\n        cpFuncPid: 0,\n        rightSelect: 0,\n        rightInsert: 0,\n        rightDelete: 0,\n        rightUpdate: 0,\n        rightAudit: 0,\n        rightPrint: 0,\n        rightExport: 0,\n        type: 0 // 0表示没有添加默认赋值  1表示存在，读取接口获取的数据\n      }\n    }\n  },\n  mounted() {\n    this.initAuthList()\n  },\n  methods: {\n    initAuthList() { // 加载授权树列表\n      var that = this\n      if (that.companyId > 0) {\n        that.companyLoading = '数据加载中...'\n        get('/cpfunc/truncated-tree/' + that.companyId, { truncateLvl: 2, roleId: that.roleId }).then(response => {\n          if (response.status === 0) {\n            that.companyLoading = '暂无数据'\n            that.sysData = response.data.tree\n            that.defaultAuthList = response.data.roleFuncAuthIds\n            that.sysRootNode = JSON.parse(JSON.stringify(response.data.tree))\n            if (that.sysRootNode.length > 0) {\n              that.sysRootNode[0].children = []\n            }\n            that.$nextTick(() => {\n              for (var c = 0; c < response.data.checkedIds.length; c++) {\n                that.$refs.sysTree.setChecked(response.data.checkedIds[c], true, false)\n              }\n            })\n          }\n        })\n      }\n    },\n    getTreeNode(data) { // 判断节点是否为根节点\n      var list = []\n      const fn = (source) => {\n        source.forEach(el => {\n          list.push(el)\n          el.children && el.children.length > 0 ? fn(el.children) : ''\n        })\n      }\n      fn(data) // 获取树列表转为数组\n      return list\n    },\n    sysClick: function(node, all) { // 授权树列表点击事件\n      if (node.children === null) {\n        get('/cpfunc/' + this.companyId + '/' + node.funcId + '/' + this.roleId, null).then(response => {\n          if (response.status === 0) {\n            var fd = response.data\n            for (var i = 0; i < fd.length; i++) {\n              if (fd[i].roleFuncAuth === null) { // 具体权限为空 传入默认值\n                if (!this.clickList.hasOwnProperty(fd[i].id)) {\n                  fd[i].roleFuncAuth = JSON.parse(JSON.stringify(this.defaultFuncAuth))\n                  fd[i].roleFuncAuth.cpFuncId = fd[i].id\n                  fd[i].roleFuncAuth.cpFuncPid = fd[i].funcPid\n                } else {\n                  fd[i].roleFuncAuth = this.clickList[fd[i].id]\n                }\n              } else {\n                fd[i].roleFuncAuth.type = 1\n                fd[i].roleFuncAuth.cpFuncPid = fd[i].funcPid\n                fd[i].roleFuncAuth.rightSelect = !!fd[i].roleFuncAuth.rightSelect\n                fd[i].roleFuncAuth.rightInsert = !!fd[i].roleFuncAuth.rightInsert\n                fd[i].roleFuncAuth.rightDelete = !!fd[i].roleFuncAuth.rightDelete\n                fd[i].roleFuncAuth.rightUpdate = !!fd[i].roleFuncAuth.rightUpdate\n                fd[i].roleFuncAuth.rightAudit = !!fd[i].roleFuncAuth.rightAudit\n                fd[i].roleFuncAuth.rightPrint = !!fd[i].roleFuncAuth.rightPrint\n                fd[i].roleFuncAuth.rightExport = !!fd[i].roleFuncAuth.rightExport\n              }\n\n              if (!this.getList.hasOwnProperty(fd[i].id)) { // 添加存储获取的功能列表\n                this.getList[fd[i].id] = JSON.parse(JSON.stringify(fd[i].roleFuncAuth))\n              }\n            }\n            this.functionData = fd\n          }\n        })\n      } else {\n        this.functionData = []\n      }\n    },\n    handleCheck(data, parms) { // table功能列表点击事件\n      var func = data.row.roleFuncAuth\n      this.clickList[data.row.id] = func\n    },\n    async saveRole() { // 保存角色\n      var that = this\n      this.$refs.addRoleForm.validate((valid) => {\n        if (valid) {\n          var role = {\n            cpid: this.companyId,\n            showName: this.addRoleForm.name,\n            roleFuncAuth: []\n          }\n          var c = that.$refs.sysTree.getCheckedNodes(false, true) // 功能树列表勾选项\n          var checkData = [] // 存储树列表勾选项\n          var checkListData = [] // 存储表格列表有勾选的行\n          var listItem = Object.values(this.clickList)\n\n          this.loading = true\n          if (that.addType === 0) { // 添加\n            for (var check = 0; check < c.length; check++) { // 遍历树勾选节点\n              checkData.push({ // 添加树勾选项\n                cpFuncId: c[check].id,\n                rightSelect: 1\n              })\n              if (c[check].children === null && listItem.length > 0) { // 页面节点\n                var has = listItem.filter((item) => { // 匹配树勾选后对应的列表\n                  return item.cpFuncPid === c[check].funcId\n                })\n                checkListData = checkListData.concat(has)\n              }\n            }\n            checkListData = checkListData.filter((func) => { // 筛选掉空的\n              return func.rightAudit || func.rightDelete || func.rightExport || func.rightInsert || func.rightPrint || func.rightSelect || func.rightUpdate\n            })\n            role.roleFuncAuth = checkData.concat(this.trueToOne(checkListData))\n            console.log(role)\n            post('/role/save', role).then(response => {\n              this.loading = false\n              if (response.status === 0) {\n                this.$message({\n                  message: '角色添加成功',\n                  type: 'success',\n                  duration: 3000\n                })\n              } else {\n                this.$message({\n                  message: response.msg,\n                  type: 'warning',\n                  duration: 3000\n                })\n              }\n              that.$emit('submitrole')\n            })\n          } else { // 修改\n            var old = JSON.parse(JSON.stringify(that.defaultAuthList)) // 原有勾选项\n            var add = []\n            for (var j = 0; j < c.length; j++) {\n              if (c[j].roleFuncAuth !== null) { // 筛选出删除的node\n                var delIndex = old.findIndex(item => {\n                  return item === c[j].roleFuncAuth.id\n                })\n                if (delIndex >= 0) {\n                  old.splice(delIndex, 1)\n                }\n              } else { // 添加的node\n                add.push({\n                  roleId: that.roleId,\n                  cpFuncId: c[j].id,\n                  rightSelect: 1\n                })\n              }\n\n              if (c[j].children === null && listItem.length > 0) { // 页面节点\n                var hasClick = listItem.filter((ft) => { // 匹配树勾选后对应的列表\n                  return ft.cpFuncPid === c[j].funcId\n                })\n                checkListData = checkListData.concat(hasClick)\n              }\n            }\n\n            var addFunction = []\n            var updateFunction = []\n            var deleteFunction = []\n            for (var v = 0; v < checkListData.length; v++) {\n              var f = checkListData[v]\n              if (f.rightAudit || f.rightDelete || f.rightExport || f.rightInsert || f.rightPrint || f.rightSelect || f.rightUpdate) {\n                if (f.type === 0) { // 类型为默认值则为添加\n                  addFunction.push(f)\n                } else {\n                  if (f !== this.getList[f.cpFuncId]) { // 修改\n                    updateFunction.push(f)\n                  }\n                }\n              } else {\n                if (this.getList[f.cpFuncId].type === 1) { // 删除\n                  deleteFunction.push(f.id)\n                }\n              }\n            }\n\n            post('/role/updateName', { id: this.roleId, showName: this.addRoleForm.name }).then(nameRe => { // 修改角色名称\n              if (nameRe.status === 0) {\n                byDelete('/rolefunc', old.concat(deleteFunction)).then(response => {\n                  if (response.status === 0) {\n                    put('/rolefunc', this.trueToOne(updateFunction)).then(updateRe => {\n                      if (updateRe.status === 0) {\n                        add = that.trueToOne(add)\n                        post('/rolefunc', add.concat(this.trueToOne(addFunction))).then(addRe => {\n                          if (addRe.status === 0) {\n                            this.loading = false\n                            this.$message({\n                              message: '角色修改成功',\n                              type: 'success',\n                              duration: 3000\n                            })\n                            that.$emit('submitrole')\n                          } else {\n                            this.loading = false\n                            this.$message({\n                              message: response.msg,\n                              type: 'warning',\n                              duration: 3000\n                            })\n                            that.$emit('submitrole')\n                          }\n                        })\n                      } else {\n                        this.loading = false\n                        this.$message({\n                          message: response.msg,\n                          type: 'warning',\n                          duration: 3000\n                        })\n                        that.$emit('submitrole')\n                      }\n                    })\n                  } else {\n                    this.loading = false\n                    this.$message({\n                      message: response.msg,\n                      type: 'warning',\n                      duration: 3000\n                    })\n                    that.$emit('submitrole')\n                  }\n                })\n              } else {\n                this.loading = false\n                this.$message({\n                  message: nameRe.msg,\n                  type: 'warning',\n                  duration: 3000\n                })\n              }\n            })\n          }\n        }\n      })\n    },\n    cancelRole() {\n      this.$emit('cancelrole')\n    },\n    trueToOne(list) { // true false 转换为1  0 后台需要数字\n      for (var cl = 0; cl < list.length; cl++) {\n        list[cl].rightSelect = list[cl].rightSelect * 1\n        list[cl].rightInsert = list[cl].rightInsert * 1\n        list[cl].rightDelete = list[cl].rightDelete * 1\n        list[cl].rightUpdate = list[cl].rightUpdate * 1\n        list[cl].rightAudit = list[cl].rightAudit * 1\n        list[cl].rightPrint = list[cl].rightPrint * 1\n        list[cl].rightExport = list[cl].rightExport * 1\n      }\n      return list\n    }\n  }\n}\n",null]}