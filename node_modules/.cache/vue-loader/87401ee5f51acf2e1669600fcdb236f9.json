{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\analysis\\lintianqi.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\analysis\\lintianqi.vue","mtime":1576638136903},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// import { get } from '@/api/axios'\nimport axios from 'axios'\nimport echarts from 'echarts'\nimport { getList } from '@/api/car'\n\nexport default {\n  name: 'Traffic',\n  data() {\n    return {\n      tdata: [],\n      tdata2: [\n        {\n          high: '',\n          type: ''\n        },\n        {\n          high: '',\n          type: ''\n        },\n        {\n          high: '',\n          type: ''\n        }\n      ],\n      tdata3: [],\n      shi: '',\n      ri: '',\n      airData: {\n        aqi: 60,\n        so: 0,\n        co: 0,\n        no: 0,\n        o: 0,\n        pm10: 0,\n        pm25: 0\n      },\n      temperatureH: 0,\n      temperatureL: 0,\n      humidityH: 0,\n      humidityL: 0,\n      echarts1: null,\n      option1: {\n        // title: {\n        //   text: 'PM2.5小时浓度变化',\n        //   x: 'left',\n        //   textStyle: { fontSize: '10', color: 'rgba(29,33,51,1)' }\n        // },\n        grid: {\n          left: '1%',\n          right: '1%',\n          top: '5%',\n          bottom: '20%'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          },\n          // axisPointer: {\n          //   type: 'cross'\n          // },\n          // backgroundColor: 'rgba(245, 245, 245, 0.8)',\n          // borderWidth: 1,\n          // borderColor: '#ccc',\n          // padding: 10,\n          // textStyle: {\n          //   color: '#000'\n          // },\n          // position: function(pos, params, el, elRect, size) {\n          //   var obj = { top: 10 }\n          //   obj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 30\n          //   return obj\n          // },\n          formatter: 'PM2.5小时浓度变化<br>{b}:{c}μg/m3'\n        },\n        xAxis: {\n          type: 'category',\n          data: [\n            '0:00',\n            '2:00',\n            '4:00',\n            '6:00',\n            '8:00',\n            '10:00',\n            '12:00',\n            '14:00',\n            '16:00',\n            '18:00',\n            '20:00',\n            '22:00'\n          ],\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            formatter: function(value, index) {\n              var date = new Date(value)\n              return (date.getHours() < 10 ? '0' : '') + date.getHours() + ':' + (date.getMinutes() < 10 ? '0' : '') + date.getMinutes()\n            }\n          }\n        },\n        yAxis: {\n          type: 'value',\n          show: false\n        },\n        series: [\n          {\n            data: [\n              14,\n              12,\n              12,\n              17,\n              14,\n              12,\n              10,\n              14,\n              12,\n              13,\n              10,\n              12\n            ],\n            type: 'line',\n            color: '#3F6AFF',\n            smooth: 'smoothMonotone',\n            areaStyle: {\n              color: {\n                type: 'linear',\n                x: 0,\n                y: 0,\n                x2: 0,\n                y2: 1,\n                colorStops: [\n                  {\n                    offset: 0,\n                    color: '#6578FF' // 0% 处的颜色\n                  },\n                  {\n                    offset: 0.9,\n                    color: '#fff' // 100% 处的颜色\n                  }\n                ],\n                global: false // 缺省为 false\n              }\n            }\n          }\n        ]\n      },\n      tce: []\n    }\n  },\n  watch: {},\n  mounted() {\n    var that = this\n    axios\n      // .get('https://www.apiopen.top/weatherApi?city=北京', {})\n      .get('http://wthrcdn.etouch.cn/weather_mini?city=北京', {})\n      .then(function(res) {\n        console.log(1, res.data.data)\n        that.tdata = res.data.data\n        that.tdata2 = []\n        for (let i = 0; i < that.tdata.forecast.length; i++) {\n          that.tdata2.push({\n            high: that.tdata.forecast[i].high.substring(3, 10),\n            low: that.tdata.forecast[i].low.substring(3, 10),\n            type: that.tdata.forecast[i].type\n          })\n        }\n        that.tdata3 = res.data.data.yesterday\n      })\n    setInterval(() => {\n      that.formatDate()\n    }, 1000)\n    that.ech()\n    that.getDataList()\n  },\n  methods: {\n    ech() {\n      this.echarts1 = echarts.init(document.getElementById('elem'))\n    },\n    formatDate() {\n      var a = ['日', '一', '二', '三', '四', '五', '六']\n      var date = new Date()\n      var y = date.getFullYear()\n      var MM = date.getMonth() + 1\n      MM = MM < 10 ? '0' + MM : MM\n      var h = date.getHours()\n      h = h < 10 ? '0' + h : h\n      var m = date.getMinutes()\n      m = m < 10 ? '0' + m : m\n      var s = date.getSeconds()\n      s = s < 10 ? '0' + s : s\n      var r = date.getDate()\n      r = r < 10 ? '0' + r : r\n      this.shi = h + ':' + m + ':' + s\n      this.ri = y + '年 ' + MM + '月 ' + r + '日' + '星期' + a[date.getDay()]\n    },\n    getList(url, query) {\n      return new Promise((resolve, reject) => {\n        getList(url, query).then(response => {\n          resolve(response)\n        }).catch(error => {\n          reject(error)\n        })\n      })\n    },\n    getDataList() {\n      var that = this\n      that.getList('/environmentdata/loadAEnvironment', null).then(data => {\n        that.temperatureH = 0\n        that.temperatureL = 0\n        that.humidityH = 0\n        that.humidityL = 0\n        that.tce = []\n        data.data.list.forEach(item => {\n          if (item.whole === 1) {\n            if (item.weath < 18) {\n              that.temperatureL += 1\n            } else if (item.weath > 35) {\n              that.temperatureH += 1\n            }\n\n            if (item.humidity < 40) {\n              that.humidityL += 1\n            } else if (item.humidity > 65) {\n              that.humidityH += 1\n            }\n            console.log(that.temperatureL, that.temperatureH, that.humidityL, that.humidityH)\n            that.tce.push({ name: item.spaceName, name2: item.detectionName, wen: item.weath, shi: item.humidity })\n          } else {\n            if (item.aqi <= 200) {\n              that.airData.aqi = item.aqi * 0.3\n            } else if (item.aqi > 200 && item.aqi <= 300) {\n              that.airData.aqi = 60 + ((item.aqi - 200) * 0.15)\n            } else if (item.aqi > 300 && item.aqi <= 500) {\n              that.airData.aqi = 75 + ((item.aqi - 300) * 0.075)\n            } else {\n              that.airData.aqi = 100\n            }\n            that.airData.so = item.so2\n            that.airData.co = item.co\n            that.airData.no = item.no2\n            that.airData.o = item.o3\n            that.airData.pm10 = item.pm10\n            that.airData.pm25 = item.pm25\n          }\n        })\n\n        var now = new Date()\n        var thisDate = now.toLocaleString('chinese', { hour12: false })\n        that.option1.xAxis.data = []\n        that.option1.series[0].data = []\n        data.data.pm25list.forEach(item => {\n          var lDate = new Date(item.date).toLocaleString('chinese', { hour12: false })\n          if (lDate > thisDate) {\n            return\n          } else {\n            that.option1.xAxis.data.push(item.date)\n            that.option1.series[0].data.push(item.pm25)\n          }\n        })\n        that.echarts1.setOption(that.option1)\n        window.addEventListener('resize', () => {\n          that.echarts1.resize()\n        })\n      })\n    }\n  }\n}\n",null]}