{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\grmessage\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\views\\grmessage\\index.vue","mtime":1577252313561},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nimport { validMobile } from '@/utils/validate'\nimport Cropper from '@/components/Cropper'\nimport { updatePWByOld } from '@/api/user'\n\nexport default {\n  components: { Cropper },\n  data() {\n    const validateMobile = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入新手机号码'))\n      } else if (!validMobile(value)) {\n        callback(new Error('手机号输入不正确!'))\n      } else if (value === this.mobile) {\n        callback(new Error('新手机号不能是原手机号!'))\n      } else {\n        callback()\n      }\n    }\n    const validateOldPassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入原密码'))\n      } else {\n        callback()\n      }\n    }\n    const validateNewPassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入新密码'))\n      } else {\n        callback()\n      }\n    }\n    const validateNewPasswordAgain = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入确认新密码'))\n      } else if (value !== this.passwordForm.newPassword) {\n        callback(new Error('两次密码输入不一致'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      defaultUrl: '',\n      showCropper: false,\n      showMobile: false,\n      mobileForm: {\n        newMobile: ''\n      },\n      mobileRules: {\n        newMobile: [{ required: true, trigger: 'blur', validator: validateMobile }]\n      },\n      showPassword: false,\n      passwordForm: {\n        oldPassword: '',\n        newPassword: '',\n        newPasswordAgain: ''\n      },\n      passwordRules: {\n        oldPassword: [{ required: true, trigger: 'blur', validator: validateOldPassword },\n          { min: 6, message: '密码必须大于6位', trigger: 'blur' }\n        ],\n        newPassword: [{ required: true, trigger: 'blur', validator: validateNewPassword },\n          { min: 6, message: '密码必须大于6位', trigger: 'blur' }\n        ],\n        newPasswordAgain: [{ required: true, trigger: 'blur', validator: validateNewPasswordAgain },\n          { min: 6, message: '密码必须大于6位', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(['avatar', 'uid', 'ucode', 'name', 'mobile', 'post', 'section', 'company'])\n  },\n  created() {\n    this.defaultUrl = this.avatar // 头像\n  },\n  methods: {\n    updateAvatar() {\n      this.showCropper = true\n    },\n    // 父组件调用子组件裁剪方法\n    toCropper() {\n      this.$refs.cropper.submit()\n      this.cancelCropper()\n    },\n    cancelCropper() {\n      this.showCropper = false\n      this.$refs.cropper.url = this.avatar\n      this.$refs.cropper.cropper.replace(this.avatar)\n      this.$refs.cropper.$refs.imageFile.value = null\n    },\n    toMobile() { // 修改手机号\n      this.$refs.mobileForm.validate((valid) => {\n        if (valid) {\n          this.$store.dispatch('user/updateMobile', { uid: this.uid, mobile: { phone: this.mobileForm.newMobile }})\n            .then(() => {\n              this.$message({\n                message: '手机号修改成功，登录账号为新手机号',\n                type: 'success',\n                duration: 2000\n              })\n              this.resetMobile()\n            })\n            .catch((e) => {\n              this.$message({\n                message: '手机号修改失败，请稍后重试',\n                type: 'warning',\n                duration: 2000\n              })\n            })\n        } else {\n          return\n        }\n      })\n    },\n    resetMobile() { // 取消修改手机号\n      this.showMobile = false\n      this.$refs.mobileForm.resetFields()\n    },\n    toPassword() { // 修改密码\n      this.$refs.passwordForm.validate((valid) => {\n        if (valid) {\n          new Promise((resolve, reject) => {\n            updatePWByOld(this.uid, { newpwd: this.passwordForm.newPasswordAgain, oldpwd: this.passwordForm.oldPassword }).then(response => {\n              if (response.msg === 'SUCCESS') {\n                this.$message({\n                  message: '密码修改成功',\n                  type: 'success',\n                  duration: 3000\n                })\n                this.resetPassword()\n              } else {\n                this.$message({\n                  message: response.msg,\n                  type: 'warning',\n                  duration: 3000\n                })\n                return\n              }\n              resolve()\n            }).catch(error => {\n              reject(error)\n            })\n          }).then(res => {})\n        } else {\n          return\n        }\n      })\n    },\n    resetPassword() { // 取消密码修改\n      this.showPassword = false\n      this.$refs.passwordForm.resetFields()\n    }\n  }\n}\n",null]}