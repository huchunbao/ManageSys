{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\components\\Charts\\RingChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\components\\Charts\\RingChart.vue","mtime":1576812499384},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport echarts from 'echarts'\nimport resize from './mixins/resize'\n\nexport default {\n  mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    id: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '200px'\n    },\n    height: {\n      type: String,\n      default: '210px'\n    },\n    nesting: {\n      type: Boolean,\n      default: false\n    },\n    chartType: {\n      type: String,\n      default: ''\n    },\n    chartData: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    tipTitle: {\n      type: String,\n      default: '占比'\n    }\n  },\n  data() {\n    return {\n      chart: null,\n      colorlist: this.$store.state.settings.chartColors\n    }\n  },\n  watch: {\n    chartData: {\n      immediate: true,\n      handler(val) {\n        this.$nextTick(() => {\n          this.initChart(val)\n        })\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.chart = echarts.init(document.getElementById(this.id))\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return\n    }\n    this.chart.dispose()\n    this.chart = null\n  },\n  methods: {\n    initChart(chartData) {\n      const that = this\n      let tooltip = {}\n      const tipTitle = that.tipTitle.replace('今年', '')\n      let labelText1 = '{b}: {c}元 ({d}%)'\n      let labelText2 = '{b}: {c}元 ({d}%)'\n      let label2Show = true\n      if (that.chartType === '会员卡') {\n        label2Show = false\n        tooltip = {\n          trigger: 'item',\n          formatter: function(params) {\n            var relVal = ''\n            if (params.seriesIndex === 1) {\n              relVal += '会员卡消费<div class=\"circle\" >' + params.marker + params.name + ' : ' + params.value + '元(' + params.percent + '%)</div>'\n            } else {\n              relVal += '会员卡个数<div class=\"circle\" >' + params.marker + params.name + ' : ' + params.value + '个(' + params.percent + '%)</div>'\n            }\n            return relVal\n          }\n        }\n        labelText1 = '个数: {c}个 ({d}%)'\n        labelText2 = '消费: {c}元 ({d}%)'\n      } else if (that.chartType === '一卡通') {\n        tooltip = {\n          trigger: 'item',\n          formatter: function(params) {\n            return '<div style=\"text-align: left;\">' + tipTitle + '</div><div class=\"circle\" >' + params.marker + params.name + ' : ' + params.value + '个(' + params.percent + '%)</div>'\n          }\n        }\n        labelText1 = '{c}个 ({d}%)'\n      } else if (that.chartType === '资产统计') {\n        tooltip = {\n          trigger: 'item',\n          formatter: function(params) {\n            var relVal = '资产投入金额占比<div class=\"circle\" >' + params.marker + params.name + ' : ' + params.value + '元(' + params.percent + '%)</div>'\n            return relVal\n          }\n        }\n        labelText1 = function(params) {\n          return params.value + ' (' + params.percent + '%)'\n        }\n        labelText1 = '{c}元 ({d}%)'\n      } else {\n        tooltip = {\n          trigger: 'item',\n          formatter: function(params) {\n            return tipTitle + '<div class=\"circle\" >' + params.marker + params.name + ' : ' + params.value + '元(' + params.percent + '%)</div>'\n          }\n        }\n        labelText1 = '{c}元 ({d}%)'\n        labelText2 = '{c}元 ({d}%)'\n      }\n      const legend = {\n        orient: 'vertical',\n        right: 0,\n        y: 'center',\n        data: chartData.ldata\n      }\n      if (that.nesting) {\n        that.chart.setOption({\n          tooltip: tooltip,\n          legend: legend,\n          grid: {\n            bottom: 20\n          },\n          series: [\n            {\n              name: '占比',\n              type: 'pie',\n              center: ['35%', '55%'],\n              radius: ['50%', '70%'],\n              hoverAnimation: false,\n              itemStyle: {\n                normal: {\n                  color: function(params) {\n                    return that.colorlist[params.dataIndex % that.colorlist.length]\n                  }\n                }\n              },\n              label: {\n                normal: {\n                  show: true,\n                  formatter: labelText1\n                },\n                emphasis: {\n                  emphasis: {\n                    show: true,\n                    textStyle: {\n                      fontSize: '16',\n                      fontWeight: 'bold'\n                    },\n                    shadowBlur: 10,\n                    shadowOffsetX: 0,\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\n                  }\n                }\n              },\n              labelLine: {\n                normal: {\n                  show: true\n                }\n              },\n              data: chartData.sdata1\n            },\n            {\n              name: '占比',\n              type: 'pie',\n              center: ['40%', '55%'],\n              radius: ['0', '45%'],\n              hoverAnimation: false,\n              itemStyle: {\n                normal: {\n                  color: function(params) {\n                    return that.colorlist[params.dataIndex % that.colorlist.length]\n                  }\n                }\n              },\n              label: {\n                normal: {\n                  show: label2Show,\n                  formatter: labelText2\n                },\n                emphasis: {\n                  emphasis: {\n                    show: true,\n                    textStyle: {\n                      fontSize: '16',\n                      fontWeight: 'bold'\n                    },\n                    shadowBlur: 10,\n                    shadowOffsetX: 0,\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\n                  }\n                }\n              },\n              labelLine: {\n                normal: {\n                  show: label2Show\n                }\n              },\n              data: chartData.sdata2\n            }\n          ]\n        })\n      } else {\n        that.chart.setOption({\n          title: {\n            show: chartData.sdata.length <= 0,\n            textStyle: {\n              color: '#909399',\n              fontWeight: 'normal',\n              fontSize: 14\n            },\n            text: '暂无数据',\n            left: 'center',\n            top: 'center'\n          },\n          tooltip: tooltip,\n          legend: legend,\n          grid: {\n            bottom: 20\n          },\n          series: [\n            {\n              name: '占比',\n              type: 'pie',\n              center: ['45%', '50%'],\n              radius: ['40%', '60%'],\n              itemStyle: {\n                normal: {\n                  color: function(params) {\n                    return that.colorlist[params.dataIndex % that.colorlist.length]\n                  }\n                }\n              },\n              label: {\n                normal: {\n                  show: true,\n                  formatter: labelText1\n                },\n                emphasis: {\n                  show: true,\n                  textStyle: {\n                    fontSize: '16',\n                    fontWeight: 'bold'\n                  },\n                  shadowBlur: 10,\n                  shadowOffsetX: 0,\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n              },\n              labelLine: {\n                normal: {\n                  show: true\n                }\n              },\n              data: chartData.sdata\n            }\n          ]\n        })\n      }\n    }\n  }\n}\n",null]}