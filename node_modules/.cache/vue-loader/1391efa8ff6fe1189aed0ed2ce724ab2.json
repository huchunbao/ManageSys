{"remainingRequest":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\办公\\projectwc\\前端\\ManageSys\\src\\components\\Charts\\PieChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\src\\components\\Charts\\PieChart.vue","mtime":1576812499384},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\办公\\projectwc\\前端\\ManageSys\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport echarts from 'echarts'\nimport resize from './mixins/resize'\n\nexport default {\n  mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    id: {\n      type: String,\n      default: 'chart'\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    width: {\n      type: String,\n      default: '200px'\n    },\n    height: {\n      type: String,\n      default: '200px'\n    },\n    chartType: {\n      type: String,\n      default: ''\n    },\n    chartData: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    tipTitle: {\n      type: String,\n      default: '占比'\n    }\n  },\n  data() {\n    return {\n      chart: null,\n      colorlist: this.$store.state.settings.chartColors\n    }\n  },\n  watch: {\n    chartData: {\n      immediate: true,\n      handler(val) {\n        this.$nextTick(() => {\n          this.initChart(val)\n        })\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.chart = echarts.init(document.getElementById(this.id))\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return\n    }\n    this.chart.dispose()\n    this.chart = null\n  },\n  methods: {\n    initChart(chartData) {\n      const that = this\n      // var labelText1 = '{c}个 ({d}%)'\n      var labelText1 = '{c}个 '\n      let formatter = '{a} <br/>{b}: {c} ({d}%)'\n      if (that.chartType === 'parking') {\n        formatter = function(params) {\n          return that.tipTitle + '</div><div class=\"circle\" >' + params.marker + params.name + ' : ' + params.value + '个(' + params.percent + '%)</div>'\n        }\n      }\n      that.chart.setOption({\n        title: {\n          text: chartData.title,\n          subtext: chartData.subText,\n          x: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: formatter\n        },\n        grid: {\n          bottom: 20\n        },\n        legend: {\n          type: 'scroll',\n          orient: 'vertical',\n          right: 10,\n          y: 'center',\n          data: chartData.lData,\n          selected: chartData.lselected\n        },\n        series: [\n          {\n            name: '占比',\n            type: 'pie',\n            radius: '45%',\n            center: ['45%', '50%'],\n            data: chartData.sData,\n            label: {\n              show: true,\n              formatter: labelText1\n            },\n            itemStyle: {\n              normal: {\n                color: function(params) {\n                  return that.colorlist[params.dataIndex % that.colorlist.length]\n                }\n              },\n              emphasis: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      })\n    }\n  }\n}\n",null]}